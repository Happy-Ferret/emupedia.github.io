var Module=typeof Module!=="undefined"?Module:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module["arguments"]=[];Module["thisProgram"]="./this.program";Module["quit"]=(function(status,toThrow){throw toThrow});Module["preRun"]=[];Module["postRun"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+"/";var nodeFS;var nodePath;Module["read"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require("fs");if(!nodePath)nodePath=require("path");filename=nodePath["normalize"](filename);ret=nodeFS["readFileSync"](filename);return binary?ret:ret.toString()};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}Module["arguments"]=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}process["on"]("uncaughtException",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process["on"]("unhandledRejection",abort);Module["quit"]=(function(status){process["exit"](status)});Module["inspect"]=(function(){return"[Emscripten Module object]"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!="undefined"){Module["read"]=function shell_read(f){return read(f)}}Module["readBinary"]=function readBinary(f){var data;if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof quit==="function"){Module["quit"]=(function(status){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1)}else{scriptDirectory=""}Module["read"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module["readBinary"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module["setWindowTitle"]=(function(title){document.title=title})}else{}var out=Module["print"]||(typeof console!=="undefined"?console.log.bind(console):typeof print!=="undefined"?print:null);var err=Module["printErr"]||(typeof printErr!=="undefined"?printErr:typeof console!=="undefined"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;var ret=size=Math.ceil(size/factor)*factor;return ret}function getNativeTypeSize(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return 4}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var asm2wasmImports={"f64-rem":(function(x,y){return x%y}),"debugger":(function(){debugger})};var jsCallStartIndex=1;var functionPointers=new Array(0);function addFunction(func,sig){var base=0;for(var i=base;i<base+0;i++){if(!functionPointers[i]){functionPointers[i]=func;return jsCallStartIndex+i}}throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."}function dynCall(sig,ptr,args){if(args&&args.length){return Module["dynCall_"+sig].apply(null,[ptr].concat(args))}else{return Module["dynCall_"+sig].call(null,ptr)}}var Runtime={dynCall:dynCall};var GLOBAL_BASE=1024;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}var ALLOC_NORMAL=0;var ALLOC_STATIC=2;var ALLOC_DYNAMIC=3;var ALLOC_NONE=4;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc==="function"?_malloc:staticAlloc,stackAlloc,staticAlloc,dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var stop;ptr=ret;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];type=singleType||types[i];if(type===0){i++;continue}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}function getMemory(size){if(!staticSealed)return staticAlloc(size);if(!runtimeInitialized)return dynamicAlloc(size);return _malloc(size)}function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf-16le"):undefined;function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function allocateUTF8OnStack(str){var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8Array(str,HEAP8,ret,size);return ret}function demangle(func){return func}function demangleAll(text){var regex=/__Z[\w\d_]+/g;return text.replace(regex,(function(x){var y=demangle(x);return x===y?x:y+" ["+x+"]"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module["extraStackTrace"])js+="\n"+Module["extraStackTrace"]();return demangleAll(js)}var WASM_PAGE_SIZE=65536;var ASMJS_PAGE_SIZE=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module["buffer"]=buffer=buf}function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+TOTAL_MEMORY+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}function enlargeMemory(){abortOnCannotGrowMemory()}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||134217728;if(TOTAL_MEMORY<TOTAL_STACK)err("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+TOTAL_MEMORY+"! (TOTAL_STACK="+TOTAL_STACK+")");if(Module["buffer"]){buffer=Module["buffer"]}else{if(typeof WebAssembly==="object"&&typeof WebAssembly.Memory==="function"){Module["wasmMemory"]=new WebAssembly.Memory({"initial":TOTAL_MEMORY/WASM_PAGE_SIZE,"maximum":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module["wasmMemory"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module["buffer"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Module["dynCall_v"](func)}else{Module["dynCall_vi"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_min=Math.min;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["preloadedImages"]={};Module["preloadedAudios"]={};var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmTextFile="dosbox.wast";var wasmBinaryFile="dosbox.wasm";var asmjsCodeFile="dosbox.temp.asm.js";if(!isDataURI(wasmTextFile)){wasmTextFile=locateFile(wasmTextFile)}if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}if(!isDataURI(asmjsCodeFile)){asmjsCodeFile=locateFile(asmjsCodeFile)}var wasmPageSize=64*1024;var info={"global":null,"env":null,"asm2wasm":asm2wasmImports,"parent":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module["buffer"];if(newBuffer.byteLength<oldBuffer.byteLength){err("the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function getBinary(){try{if(Module["wasmBinary"]){return new Uint8Array(Module["wasmBinary"])}if(Module["readBinary"]){return Module["readBinary"](wasmBinaryFile)}else{throw"both async and sync fetching of the wasm failed"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module["wasmBinary"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch==="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then((function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function doNativeWasm(global,env,providedBuffer){if(typeof WebAssembly!=="object"){err("no native wasm support detected");return false}if(!(Module["wasmMemory"]instanceof WebAssembly.Memory)){err("no native wasm Memory in use");return false}env["memory"]=Module["wasmMemory"];info["global"]={"NaN":NaN,"Infinity":Infinity};info["global.Math"]=Math;info["env"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module["asm"]=exports;Module["usingWasm"]=true;removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");if(Module["instantiateWasm"]){try{return Module["instantiateWasm"](info,receiveInstance)}catch(e){err("Module.instantiateWasm callback failed with error: "+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output["instance"],output["module"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver,(function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason)}))}if(!Module["wasmBinary"]&&typeof WebAssembly.instantiateStreaming==="function"&&!isDataURI(wasmBinaryFile)&&typeof fetch==="function"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:"same-origin"}),info).then(receiveInstantiatedSource,(function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module["asmPreload"]=Module["asm"];var asmjsReallocBuffer=Module["reallocBuffer"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=Module["usingWasm"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var old=Module["buffer"];var oldSize=old.byteLength;if(Module["usingWasm"]){try{var result=Module["wasmMemory"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module["buffer"]=Module["wasmMemory"].buffer}else{return null}}catch(e){return null}}});Module["reallocBuffer"]=(function(size){if(finalMethod==="asmjs"){return asmjsReallocBuffer(size)}else{return wasmReallocBuffer(size)}});var finalMethod="";Module["asm"]=(function(global,env,providedBuffer){if(!env["table"]){var TABLE_SIZE=Module["wasmTableSize"];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var MAX_TABLE_SIZE=Module["wasmMaxTableSize"];if(typeof WebAssembly==="object"&&typeof WebAssembly.Table==="function"){if(MAX_TABLE_SIZE!==undefined){env["table"]=new WebAssembly.Table({"initial":TABLE_SIZE,"maximum":MAX_TABLE_SIZE,"element":"anyfunc"})}else{env["table"]=new WebAssembly.Table({"initial":TABLE_SIZE,element:"anyfunc"})}}else{env["table"]=new Array(TABLE_SIZE)}Module["wasmTable"]=env["table"]}if(!env["memoryBase"]){env["memoryBase"]=Module["STATIC_BASE"]}if(!env["tableBase"]){env["tableBase"]=0}var exports;exports=doNativeWasm(global,env,providedBuffer);assert(exports,"no binaryen method succeeded.");return exports})}integrateWasmJS();var ASM_CONSTS=[(function(){Module["screenIsReadOnly"]=true;var canvasStyle=Module["canvas"].style;canvasStyle.imageRendering="optimizeSpeed";canvasStyle.imageRendering="-moz-crisp-edges";canvasStyle.imageRendering="-o-crisp-edges";canvasStyle.imageRendering="-webkit-optimize-contrast";canvasStyle.imageRendering="optimize-contrast";canvasStyle.imageRendering="crisp-edges";canvasStyle.imageRendering="pixelated"}),(function($0){err('emscripten_fetch("'+Pointer_stringify($0)+'") failed! Synchronous blocking XHRs and IndexedDB operations are not supported on the main browser thread. Try dropping the EMSCRIPTEN_FETCH_SYNCHRONOUS flag, or run with the linker flag --proxy-to-worker to decouple main C runtime thread from the main browser thread.')}),(function(){return screen.width}),(function(){return screen.height}),(function($0){if(typeof Module["setWindowTitle"]!=="undefined"){Module["setWindowTitle"](Module["Pointer_stringify"]($0))}return 0}),(function($0,$1,$2){var w=$0;var h=$1;var pixels=$2;if(!Module["SDL2"])Module["SDL2"]={};var SDL2=Module["SDL2"];if(SDL2.ctxCanvas!==Module["canvas"]){SDL2.ctx=Module["createContext"](Module["canvas"],false,true);SDL2.ctxCanvas=Module["canvas"]}if(SDL2.w!==w||SDL2.h!==h||SDL2.imageCtx!==SDL2.ctx){SDL2.image=SDL2.ctx.createImageData(w,h);SDL2.w=w;SDL2.h=h;SDL2.imageCtx=SDL2.ctx}var data=SDL2.image.data;var src=pixels>>2;var dst=0;var num;if(typeof CanvasPixelArray!=="undefined"&&data instanceof CanvasPixelArray){num=data.length;while(dst<num){var val=HEAP32[src];data[dst]=val&255;data[dst+1]=val>>8&255;data[dst+2]=val>>16&255;data[dst+3]=255;src++;dst+=4}}else{if(SDL2.data32Data!==data){SDL2.data32=new Int32Array(data.buffer);SDL2.data8=new Uint8Array(data.buffer)}var data32=SDL2.data32;num=data32.length;data32.set(HEAP32.subarray(src,src+num));var data8=SDL2.data8;var i=3;var j=i+4*num;if(num%8==0){while(i<j){data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0;data8[i]=255;i=i+4|0}}else{while(i<j){data8[i]=255;i=i+4|0}}}SDL2.ctx.putImageData(SDL2.image,0,0);return 0}),(function($0,$1,$2,$3,$4){var w=$0;var h=$1;var hot_x=$2;var hot_y=$3;var pixels=$4;var canvas=document.createElement("canvas");canvas.width=w;canvas.height=h;var ctx=canvas.getContext("2d");var image=ctx.createImageData(w,h);var data=image.data;var src=pixels>>2;var dst=0;var num;if(typeof CanvasPixelArray!=="undefined"&&data instanceof CanvasPixelArray){num=data.length;while(dst<num){var val=HEAP32[src];data[dst]=val&255;data[dst+1]=val>>8&255;data[dst+2]=val>>16&255;data[dst+3]=val>>24&255;src++;dst+=4}}else{var data32=new Int32Array(data.buffer);num=data32.length;data32.set(HEAP32.subarray(src,src+num))}ctx.putImageData(image,0,0);var url=hot_x===0&&hot_y===0?"url("+canvas.toDataURL()+"), auto":"url("+canvas.toDataURL()+") "+hot_x+" "+hot_y+", auto";var urlBuf=_malloc(url.length+1);stringToUTF8(url,urlBuf,url.length+1);return urlBuf}),(function($0){if(Module["canvas"]){Module["canvas"].style["cursor"]=Module["Pointer_stringify"]($0)}return 0}),(function(){if(Module["canvas"]){Module["canvas"].style["cursor"]="none"}}),(function(){if(typeof AudioContext!=="undefined"){return 1}else if(typeof webkitAudioContext!=="undefined"){return 1}return 0}),(function(){if(typeof navigator.mediaDevices!=="undefined"&&typeof navigator.mediaDevices.getUserMedia!=="undefined"){return 1}else if(typeof navigator.webkitGetUserMedia!=="undefined"){return 1}return 0}),(function($0){if(typeof SDL2==="undefined"){SDL2={}}if(!$0){SDL2.audio={}}else{SDL2.capture={}}if(!SDL2.audioContext){if(typeof AudioContext!=="undefined"){SDL2.audioContext=new AudioContext}else if(typeof webkitAudioContext!=="undefined"){SDL2.audioContext=new webkitAudioContext}}return SDL2.audioContext===undefined?-1:0}),(function(){return SDL2.audioContext.sampleRate}),(function($0,$1,$2,$3){var have_microphone=(function(stream){if(SDL2.capture.silenceTimer!==undefined){clearTimeout(SDL2.capture.silenceTimer);SDL2.capture.silenceTimer=undefined}SDL2.capture.mediaStreamNode=SDL2.audioContext.createMediaStreamSource(stream);SDL2.capture.scriptProcessorNode=SDL2.audioContext.createScriptProcessor($1,$0,1);SDL2.capture.scriptProcessorNode.onaudioprocess=(function(audioProcessingEvent){if(SDL2===undefined||SDL2.capture===undefined){return}audioProcessingEvent.outputBuffer.getChannelData(0).fill(0);SDL2.capture.currentCaptureBuffer=audioProcessingEvent.inputBuffer;Runtime.dynCall("vi",$2,[$3])});SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode);SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination);SDL2.capture.stream=stream});var no_microphone=(function(error){});SDL2.capture.silenceBuffer=SDL2.audioContext.createBuffer($0,$1,SDL2.audioContext.sampleRate);SDL2.capture.silenceBuffer.getChannelData(0).fill(0);var silence_callback=(function(){SDL2.capture.currentCaptureBuffer=SDL2.capture.silenceBuffer;Runtime.dynCall("vi",$2,[$3])});SDL2.capture.silenceTimer=setTimeout(silence_callback,$1/SDL2.audioContext.sampleRate*1e3);if(navigator.mediaDevices!==undefined&&navigator.mediaDevices.getUserMedia!==undefined){navigator.mediaDevices.getUserMedia({audio:true,video:false}).then(have_microphone).catch(no_microphone)}else if(navigator.webkitGetUserMedia!==undefined){navigator.webkitGetUserMedia({audio:true,video:false},have_microphone,no_microphone)}}),(function($0,$1,$2,$3){SDL2.audio.scriptProcessorNode=SDL2.audioContext["createScriptProcessor"]($1,0,$0);SDL2.audio.scriptProcessorNode["onaudioprocess"]=(function(e){if(SDL2===undefined||SDL2.audio===undefined){return}SDL2.audio.currentOutputBuffer=e["outputBuffer"];Runtime.dynCall("vi",$2,[$3])});SDL2.audio.scriptProcessorNode["connect"](SDL2.audioContext["destination"])}),(function($0){if($0){if(SDL2.capture.silenceTimer!==undefined){clearTimeout(SDL2.capture.silenceTimer)}if(SDL2.capture.stream!==undefined){var tracks=SDL2.capture.stream.getAudioTracks();for(var i=0;i<tracks.length;i++){SDL2.capture.stream.removeTrack(tracks[i])}SDL2.capture.stream=undefined}if(SDL2.capture.scriptProcessorNode!==undefined){SDL2.capture.scriptProcessorNode.onaudioprocess=(function(audioProcessingEvent){});SDL2.capture.scriptProcessorNode.disconnect();SDL2.capture.scriptProcessorNode=undefined}if(SDL2.capture.mediaStreamNode!==undefined){SDL2.capture.mediaStreamNode.disconnect();SDL2.capture.mediaStreamNode=undefined}if(SDL2.capture.silenceBuffer!==undefined){SDL2.capture.silenceBuffer=undefined}SDL2.capture=undefined}else{if(SDL2.audio.scriptProcessorNode!=undefined){SDL2.audio.scriptProcessorNode.disconnect();SDL2.audio.scriptProcessorNode=undefined}SDL2.audio=undefined}if(SDL2.audioContext!==undefined&&SDL2.audio===undefined&&SDL2.capture===undefined){SDL2.audioContext.close();SDL2.audioContext=undefined}}),(function($0,$1){var numChannels=SDL2.capture.currentCaptureBuffer.numberOfChannels;for(var c=0;c<numChannels;++c){var channelData=SDL2.capture.currentCaptureBuffer.getChannelData(c);if(channelData.length!=$1){throw"Web Audio capture buffer length mismatch! Destination size: "+channelData.length+" samples vs expected "+$1+" samples!"}if(numChannels==1){for(var j=0;j<$1;++j){setValue($0+j*4,channelData[j],"float")}}else{for(var j=0;j<$1;++j){setValue($0+(j*numChannels+c)*4,channelData[j],"float")}}}}),(function($0,$1){var numChannels=SDL2.audio.currentOutputBuffer["numberOfChannels"];for(var c=0;c<numChannels;++c){var channelData=SDL2.audio.currentOutputBuffer["getChannelData"](c);if(channelData.length!=$1){throw"Web Audio output buffer length mismatch! Destination size: "+channelData.length+" samples vs expected "+$1+" samples!"}for(var j=0;j<$1;++j){channelData[j]=HEAPF32[$0+(j*numChannels+c<<2)>>2]}}}),(function($0){var str=Pointer_stringify($0)+"\n\n"+"Abort/Retry/Ignore/AlwaysIgnore? [ariA] :";var reply=window.prompt(str,"i");if(reply===null){reply="i"}return allocate(intArrayFromString(reply),"i8",ALLOC_NORMAL)})];function _emscripten_asm_const_i(code){return ASM_CONSTS[code]()}function _emscripten_asm_const_ii(code,a0){return ASM_CONSTS[code](a0)}function _emscripten_asm_const_iiiii(code,a0,a1,a2,a3){return ASM_CONSTS[code](a0,a1,a2,a3)}function _emscripten_asm_const_iii(code,a0,a1){return ASM_CONSTS[code](a0,a1)}function _emscripten_asm_const_iiiiii(code,a0,a1,a2,a3,a4){return ASM_CONSTS[code](a0,a1,a2,a3,a4)}function _emscripten_asm_const_iiii(code,a0,a1,a2){return ASM_CONSTS[code](a0,a1,a2)}STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+30132928;__ATINIT__.push({func:(function(){__GLOBAL__sub_I_cpu_cpp()})},{func:(function(){__GLOBAL__sub_I_drives_cpp()})},{func:(function(){__GLOBAL__sub_I_sdl_mapper_cpp()})},{func:(function(){__GLOBAL__sub_I_programs_cpp()})},{func:(function(){___emscripten_environ_constructor()})});var STATIC_BUMP=30132928;Module["STATIC_BASE"]=STATIC_BASE;Module["STATIC_BUMP"]=STATIC_BUMP;var tempDoublePtr=STATICTOP;STATICTOP+=16;var EMTSTACKTOP=getMemory(1048576);var EMT_STACK_MAX=EMTSTACKTOP+1048576;var eb=getMemory(105936);__ATPRERUN__.push((function(){HEAPU8.set([140,0,29,0,0,0,0,0,2,18,0,0,255,0,0,0,2,19,0,0,68,205,52,0,2,20,0,0,162,102,26,0,1,14,0,0,136,21,0,0,0,17,21,0,136,21,0,0,1,22,112,6,3,21,21,22,137,21,0,0,1,21,80,6,3,8,17,21,1,21,72,6,3,9,17,21,1,21,64,6,3,10,17,21,1,21,56,6,3,7,17,21,1,21,48,6,3,6,17,21,1,21,40,6,3,13,17,21,1,21,32,6,3,5,17,21,1,21,88,6,3,16,17,21,1,21,16,5,3,1,17,21,1,21,0,4,3,2,17,21,0,15,17,0,1,21,96,6,3,12,17,21,1,21,98,6,3,4,17,21,2,21,0,0,69,205,52,0,78,0,21,0,41,21,0,24,42,21,21,24,1,22,80,0,1,24,21,0,138,21,22,24,148,1,0,0,156,1,0,0,20,1,0,0,20,1,0,0,20,1,0,0,20,1,0,0,20,1,0,0,20,1,0,0,20,1,0,0,20,1,0,0,20,1,0,0,20,1,0,0,20,1,0,0,20,1,0,0,20,1,0,0,20,1,0,0,20,1,0,0,20,1,0,0,160,1,0,0,20,1,0,0,164,1,0,0,19,22,0,18,34,22,22,108,121,22,28,0,1,23,48,11,135,22,0,0,23,0,0,0,2,23,0,0,255,255,0,0,19,22,22,23,41,22,22,4,0,3,22,0,25,23,3,46,2,24,0,0,8,206,52,0,81,24,24,0,41,24,24,16,2,25,0,0,84,205,52,0,80,25,25,0,26,25,25,18,2,26,0,0,255,255,0,0,19,25,25,26,20,24,24,25,135,22,1,0,23,24,0,0,2,22,0,0,69,205,52,0,78,3,22,0,119,0,8,0,0,3,0,0,119,0,6,0,0,3,0,0,119,0,4,0,119,0,254,255,119,0,253,255,119,0,252,255,19,21,3,18,0,0,21,0,41,21,3,24,42,21,21,24,1,22,0,0,1,27,114,0,138,21,22,27,164,3,0,0,236,3,0,0,64,4,0,0,152,4,0,0,32,5,0,0,196,5,0,0,220,5,0,0,208,6,0,0,4,7,0,0,56,7,0,0,192,7,0,0,76,10,0,0,136,10,0,0,208,11,0,0,224,11,0,0,12,12,0,0,76,12,0,0,140,12,0,0,204,12,0,0,12,13,0,0,76,13,0,0,132,13,0,0,188,13,0,0,252,13,0,0,140,3,0,0,80,14,0,0,104,14,0,0,164,14,0,0,232,14,0,0,140,3,0,0,140,3,0,0,52,15,0,0,140,3,0,0,4,16,0,0,68,16,0,0,132,16,0,0,216,16,0,0,8,17,0,0,72,17,0,0,156,17,0,0,220,17,0,0,28,18,0,0,160,18,0,0,188,20,0,0,236,21,0,0,16,24,0,0,0,25,0,0,40,25,0,0,128,25,0,0,32,26,0,0,104,26,0,0,108,26,0,0,228,27,0,0,36,28,0,0,140,28,0,0,16,29,0,0,192,29,0,0,76,30,0,0,208,30,0,0,84,31,0,0,216,31,0,0,100,32,0,0,232,32,0,0,76,33,0,0,200,34,0,0,40,36,0,0,164,36,0,0,60,37,0,0,116,38,0,0,196,38,0,0,36,39,0,0,160,39,0,0,56,40,0,0,168,40,0,0,8,41,0,0,140,41,0,0,24,42,0,0,68,42,0,0,124,42,0,0,16,43,0,0,104,43,0,0,144,43,0,0,184,43,0,0,8,44,0,0,32,44,0,0,64,44,0,0,144,44,0,0,52,45,0,0,216,45,0,0,24,47,0,0,132,47,0,0,44,48,0,0,4,49,0,0,56,49,0,0,140,3,0,0,176,49,0,0,212,49,0,0,140,3,0,0,128,50,0,0,168,50,0,0,40,51,0,0,44,51,0,0,220,55,0,0,52,56,0,0,136,56,0,0,232,56,0,0,140,3,0,0,140,3,0,0,44,57,0,0,140,3,0,0,140,3,0,0,140,3,0,0,140,3,0,0,216,57,0,0,1,22,0,0,83,19,22,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,151,13,2,23,0,0,28,206,52,0,82,23,23,0,25,23,23,2,2,25,0,0,84,205,52,0,81,25,25,0,3,23,23,25,135,24,0,0,23,0,0,0,1,23,0,0,1,25,0,0,135,22,2,0,24,23,25,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,1,22,1,0,84,15,22,0,2,22,0,0,172,201,203,1,1,25,1,0,83,22,25,0,1,22,0,0,1,23,0,0,134,25,0,0,120,148,1,0,22,16,15,23,78,25,16,0,83,19,25,0,2,25,0,0,172,201,203,1,1,23,0,0,83,25,23,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,1,0,2,23,0,0,76,205,52,0,78,23,23,0,83,16,23,0,1,23,1,0,84,15,23,0,1,25,1,0,1,22,0,0,135,23,3,0,25,16,15,22,78,16,16,0,41,22,16,24,42,22,22,24,32,22,22,9,1,25,32,0,125,23,22,25,16,0,0,0,83,19,23,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,1,0,1,23,0,4,135,0,0,0,23,0,0,0,41,23,0,16,42,23,23,16,32,23,23,0,2,25,0,0,96,62,51,0,82,25,25,0,32,25,25,0,20,23,23,25,121,23,4,0,137,17,0,0,1,23,0,0,139,23,0,0,2,25,0,0,255,255,0,0,19,25,0,25,25,25,25,4,1,22,3,0,135,23,4,0,25,22,0,0,2,22,0,0,96,62,51,0,82,22,22,0,1,25,1,0,1,24,255,255,135,23,5,0,22,19,16,25,24,0,0,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,1,0,1,23,0,4,135,0,0,0,23,0,0,0,41,23,0,16,42,23,23,16,32,23,23,0,2,24,0,0,96,62,51,0,82,24,24,0,32,24,24,0,20,23,23,24,121,23,4,0,137,17,0,0,1,23,0,0,139,23,0,0,2,23,0,0,255,255,0,0,19,23,0,23,25,16,23,4,1,24,3,0,135,23,4,0,16,24,0,0,2,24,0,0,96,62,51,0,82,24,24,0,2,25,0,0,76,205,52,0,78,25,25,0,1,22,1,0,1,26,1,0,1,27,255,255,135,23,6,0,24,25,22,26,27,0,0,0,1,27,1,0,135,23,4,0,16,27,0,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,1,0,85,5,0,0,2,27,0,0,66,188,3,0,135,23,7,0,27,5,0,0,119,0,9,13,2,23,0,0,76,205,52,0,78,0,23,0,41,23,0,24,42,23,23,24,33,23,23,255,121,23,21,0,83,16,0,0,1,23,1,0,84,15,23,0,2,23,0,0,108,202,203,1,1,27,1,0,83,23,27,0,1,23,1,0,1,26,0,0,135,27,3,0,23,16,15,26,2,27,0,0,108,202,203,1,1,26,0,0,83,27,26,0,78,26,16,0,83,19,26,0,137,17,0,0,1,26,0,0,139,26,0,0,2,26,0,0,100,205,52,0,2,27,0,0,100,205,52,0,81,27,27,0,25,27,27,2,84,26,27,0,135,27,8,0,121,27,17,0,1,27,1,0,84,15,27,0,1,26,0,0,1,23,0,0,134,27,0,0,120,148,1,0,26,16,15,23,78,27,16,0,83,19,27,0,1,23,0,0,135,27,9,0,23,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,10,0,1,27,0,0,83,19,27,0,1,23,1,0,135,27,9,0,23,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,1,27,1,0,84,15,27,0,1,23,0,0,1,26,0,0,134,27,0,0,120,148,1,0,23,16,15,26,78,27,16,0,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,1,27,1,0,84,15,27,0,1,26,0,0,1,23,0,0,134,27,0,0,120,148,1,0,26,16,15,23,78,27,16,0,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,1,27,1,0,84,15,27,0,2,27,0,0,32,206,52,0,82,27,27,0,2,23,0,0,76,205,52,0,81,23,23,0,3,0,27,23,135,14,10,0,0,0,0,0,83,16,14,0,41,23,14,24,42,23,23,24,33,23,23,36,121,23,13,0,25,0,0,1,1,27,1,0,1,26,0,0,135,23,3,0,27,16,15,26,135,14,10,0,0,0,0,0,83,16,14,0,41,23,14,24,42,23,23,24,33,23,23,36,120,23,245,255,1,23,36,0,83,19,23,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,1,0,2,23,0,0,32,206,52,0,82,23,23,0,2,26,0,0,76,205,52,0,81,26,26,0,3,3,23,26,135,0,10,0,3,0,0,0,1,26,1,0,84,15,26,0,41,26,0,24,42,26,26,24,121,26,146,0,26,26,0,1,41,26,26,24,42,26,26,24,0,1,26,0,1,23,0,0,1,27,0,0,134,26,0,0,120,148,1,0,23,16,15,27,80,26,15,0,120,26,5,0,2,27,0,0,90,188,3,0,135,26,7,0,27,13,0,0,25,2,3,2,1,0,0,0,41,26,0,24,42,26,26,24,41,27,1,24,42,27,27,24,45,26,26,27,208,8,0,0,78,26,16,0,1,27,8,0,1,22,6,0,138,26,27,22,152,8,0,0,124,8,0,0,160,8,0,0,124,8,0,0,124,8,0,0,164,8,0,0,1,27,7,0,83,12,27,0,1,23,1,0,1,22,0,0,135,27,3,0,23,12,15,22,119,0,6,0,1,14,35,0,119,0,34,0,119,0,3,0,1,14,39,0,119,0,31,0,1,27,0,0,1,22,0,0,134,26,0,0,120,148,1,0,27,16,15,22,80,26,15,0,120,26,228,255,1,14,32,0,119,0,79,0,78,26,16,0,1,22,8,0,1,27,3,0,138,26,22,27,244,8,0,0,236,8,0,0,252,8,0,0,1,14,39,0,119,0,13,0,1,14,35,0,119,0,11,0,119,0,1,0,1,22,0,0,1,27,0,0,134,26,0,0,120,148,1,0,22,16,15,27,80,26,15,0,120,26,238,255,1,14,32,0,119,0,58,0,32,26,14,35,121,26,27,0,41,26,0,24,42,26,26,24,120,26,3,0,1,0,0,0,119,0,42,0,1,27,1,0,1,22,0,0,135,26,3,0,27,16,15,22,1,26,32,0,83,16,26,0,1,22,1,0,1,27,0,0,135,26,3,0,22,16,15,27,1,26,8,0,83,16,26,0,1,27,1,0,1,22,0,0,135,26,3,0,27,16,15,22,26,26,0,1,41,26,26,24,42,26,26,24,0,0,26,0,119,0,21,0,32,26,14,39,121,26,19,0,1,22,1,0,1,27,0,0,135,26,3,0,22,16,15,27,19,27,0,18,3,27,2,27,78,22,16,0,135,26,11,0,27,22,0,0,78,26,16,0,32,26,26,13,121,26,3,0,1,14,41,0,119,0,14,0,25,26,0,1,41,26,26,24,42,26,26,24,0,0,26,0,1,22,0,0,1,27,0,0,134,26,0,0,120,148,1,0,22,16,15,27,80,26,15,0,120,26,144,255,1,14,32,0,119,0,1,0,32,26,14,32,121,26,6,0,2,27,0,0,90,188,3,0,135,26,7,0,27,13,0,0,119,0,7,0,32,26,14,41,121,26,5,0,25,27,3,1,135,26,11,0,27,0,0,0,119,0,1,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,135,26,8,0,41,26,26,31,42,26,26,31,83,19,26,0,2,26,0,0,100,205,52,0,2,27,0,0,100,205,52,0,81,27,27,0,25,27,27,2,84,26,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,1,27,48,11,135,0,0,0,27,0,0,0,2,27,0,0,255,255,0,0,19,27,0,27,41,27,27,4,85,16,27,0,108,16,4,0,1,27,0,0,135,0,12,0,16,27,0,0,41,27,0,24,42,27,27,24,33,27,27,255,121,27,26,0,2,27,0,0,96,204,5,0,19,26,0,18,41,26,26,2,94,0,27,26,121,0,20,0,82,26,0,0,106,26,26,40,19,26,26,18,2,22,0,0,173,73,4,0,135,27,13,0,26,0,22,0,121,27,12,0,135,27,8,0,121,27,10,0,1,27,1,0,84,15,27,0,1,26,0,0,1,22,0,0,134,27,0,0,120,148,1,0,26,16,15,22,135,27,8,0,120,27,248,255,78,0,19,0,41,27,0,24,42,27,27,24,1,22,1,0,1,26,10,0,138,27,22,26,132,11,0,0,108,11,0,0,108,11,0,0,108,11,0,0,108,11,0,0,192,11,0,0,196,11,0,0,200,11,0,0,108,11,0,0,204,11,0,0,1,22,0,0,83,19,22,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,24,0,2,22,0,0,69,205,52,0,78,16,22,0,2,22,0,0,69,205,52,0,83,22,0,0,134,22,0,0,0,0,0,0,2,22,0,0,69,205,52,0,83,22,16,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,236,255,119,0,241,255,119,0,240,255,119,0,239,255,119,0,238,255,137,17,0,0,1,22,0,0,139,22,0,0,119,0,236,253,2,22,0,0,76,205,52,0,78,22,22,0,135,27,14,0,22,0,0,0,1,27,26,0,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,22,0,0,10,206,52,0,80,22,22,0,2,26,0,0,76,205,52,0,80,26,26,0,135,27,15,0,22,26,0,0,40,27,27,1,41,27,27,31,42,27,27,31,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,26,0,0,10,206,52,0,80,26,26,0,2,22,0,0,76,205,52,0,80,22,22,0,135,27,16,0,26,22,0,0,40,27,27,1,41,27,27,31,42,27,27,31,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,22,0,0,10,206,52,0,80,22,22,0,2,26,0,0,76,205,52,0,80,26,26,0,135,27,17,0,22,26,0,0,40,27,27,1,41,27,27,31,42,27,27,31,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,26,0,0,10,206,52,0,80,26,26,0,2,22,0,0,76,205,52,0,80,22,22,0,135,27,18,0,26,22,0,0,40,27,27,1,41,27,27,31,42,27,27,31,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,22,0,0,10,206,52,0,80,22,22,0,2,26,0,0,76,205,52,0,80,26,26,0,135,27,19,0,22,26,0,0,40,27,27,1,41,27,27,31,42,27,27,31,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,26,0,0,10,206,52,0,80,26,26,0,2,22,0,0,76,205,52,0,80,22,22,0,1,23,0,0,135,27,20,0,26,22,23,0,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,23,0,0,10,206,52,0,80,23,23,0,2,22,0,0,76,205,52,0,80,22,22,0,1,26,0,0,135,27,21,0,23,22,26,0,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,26,0,0,10,206,52,0,80,26,26,0,2,22,0,0,76,205,52,0,80,22,22,0,135,27,22,0,26,22,0,0,40,27,27,1,41,27,27,31,42,27,27,31,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,22,0,0,10,206,52,0,80,22,22,0,2,26,0,0,76,205,52,0,80,26,26,0,135,27,23,0,22,26,0,0,121,27,7,0,1,27,0,0,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,28,0,1,27,255,255,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,22,0,135,23,24,0,83,19,23,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,1,0,1,27,44,11,2,26,0,0,10,206,52,0,81,26,26,0,41,26,26,16,2,22,0,0,76,205,52,0,81,22,22,0,20,26,26,22,135,23,1,0,27,26,0,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,154,0,1,26,0,0,2,22,0,0,72,205,52,0,2,23,0,0,76,205,52,0,135,27,25,0,26,22,19,23,121,27,4,0,137,17,0,0,1,27,0,0,139,27,0,0,1,27,255,255,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,23,0,0,76,205,52,0,78,23,23,0,2,22,0,0,72,205,52,0,2,26,0,0,76,205,52,0,135,27,25,0,23,22,19,26,121,27,4,0,137,17,0,0,1,27,0,0,139,27,0,0,1,27,255,255,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,53,0,2,26,0,0,76,205,52,0,78,0,26,0,41,26,3,24,42,26,26,24,32,26,26,31,41,27,0,24,42,27,27,24,32,27,27,0,20,26,26,27,121,26,3,0,135,0,24,0,119,0,5,0,26,26,0,1,41,26,26,24,42,26,26,24,0,0,26,0,2,26,0,0,96,206,5,0,19,27,0,18,41,27,27,2,94,26,26,27,120,26,7,0,1,26,255,255,83,19,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,178,2,1,26,0,0,83,19,26,0,2,26,0,0,236,201,203,1,80,16,26,0,2,26,0,0,10,206,52,0,84,26,16,0,2,26,0,0,32,206,52,0,2,27,0,0,255,255,0,0,19,27,16,27,41,27,27,4,85,26,27,0,2,27,0,0,80,205,52,0,19,26,0,18,84,27,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,155,2,1,27,1,0,84,16,27,0,2,26,0,0,10,206,52,0,80,26,26,0,2,22,0,0,76,205,52,0,80,22,22,0,1,23,1,0,135,27,26,0,26,22,16,23,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,1,27,1,0,84,16,27,0,2,23,0,0,10,206,52,0,80,23,23,0,2,22,0,0,76,205,52,0,80,22,22,0,1,26,1,0,135,27,27,0,23,22,16,26,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,26,0,0,10,206,52,0,80,26,26,0,2,22,0,0,76,205,52,0,80,22,22,0,135,27,28,0,26,22,0,0,121,27,7,0,1,27,0,0,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,7,0,1,27,255,255,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,22,0,0,10,206,52,0,80,22,22,0,2,26,0,0,76,205,52,0,80,26,26,0,135,27,29,0,22,26,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,38,0,79,26,19,0,41,26,26,2,2,27,0,0,10,206,52,0,81,27,27,0,41,27,27,16,2,22,0,0,76,205,52,0,81,22,22,0,20,27,27,22,135,23,1,0,26,27,0,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,1,0,2,23,0,0,76,205,52,0,80,16,23,0,1,22,48,11,135,26,0,0,22,0,0,0,2,22,0,0,255,255,0,0,19,26,26,22,41,26,26,4,39,26,26,2,135,27,0,0,26,0,0,0,135,23,30,0,16,27,0,0,1,23,240,255,83,19,23,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,66,0,2,26,0,0,10,206,52,0,80,26,26,0,2,22,0,0,76,205,52,0,80,22,22,0,2,23,0,0,72,205,52,0,1,25,0,0,135,27,26,0,26,22,23,25,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,25,0,0,10,206,52,0,80,25,25,0,2,23,0,0,76,205,52,0,80,23,23,0,2,22,0,0,72,205,52,0,1,26,0,0,135,27,27,0,25,23,22,26,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,26,0,0,32,206,52,0,82,26,26,0,2,22,0,0,92,205,52,0,81,22,22,0,3,26,26,22,1,22,255,3,135,27,31,0,26,15,22,0,2,22,0,0,4,206,52,0,80,22,22,0,2,26,0,0,96,205,52,0,80,26,26,0,78,23,19,0,135,27,32,0,22,26,23,15,16,0,0,0,83,19,27,0,2,27,0,0,92,205,52,0,2,23,0,0,92,205,52,0,81,23,23,0,79,26,16,0,3,23,23,26,84,27,23,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,237,254,1,23,0,0,84,19,23,0,1,27,26,0,134,23,0,0,68,156,1,0,27,0,0,0,78,0,19,0,41,23,0,24,42,23,23,24,120,23,8,0,2,23,0,0,112,202,203,1,78,1,23,0,2,23,0,0,192,201,203,1,78,0,23,0,119,0,77,0,2,23,0,0,192,201,203,1,79,23,23,0,19,27,0,18,3,3,23,27,19,27,3,18,0,0,27,0,2,27,0,0,192,201,203,1,83,27,0,0,2,27,0,0,112,202,203,1,78,1,27,0,19,27,3,18,0,2,27,0,2,27,0,0,128,188,3,0,19,23,1,18,91,4,27,23,48,27,4,2,20,20,0,0,2,27,0,0,188,201,203,1,80,5,27,0,41,27,1,24,42,27,27,24,32,27,27,2,38,23,5,3,32,23,23,0,19,27,27,23,121,27,18,0,37,27,2,29,121,27,3,0,1,1,2,0,119,0,42,0,2,27,0,0,112,202,203,1,1,23,3,0,83,27,23,0,1,23,227,0,3,23,3,23,19,23,23,18,0,0,23,0,2,23,0,0,192,201,203,1,83,23,0,0,1,1,3,0,119,0,29,0,25,23,1,1,41,23,23,24,42,23,23,24,0,1,23,0,2,23,0,0,112,202,203,1,83,23,1,0,4,23,3,4,19,23,23,18,0,0,23,0,2,23,0,0,192,201,203,1,83,23,0,0,19,23,1,18,36,23,23,12,120,23,13,0,2,23,0,0,112,202,203,1,1,27,1,0,83,23,27,0,2,27,0,0,188,201,203,1,25,23,5,1,41,23,23,16,42,23,23,16,84,27,23,0,1,1,1,0,119,0,1,0,19,23,1,18,0,15,23,0,1,23,14,0,4,23,23,15,28,14,23,12,2,23,0,0,188,201,203,1,80,16,23,0,2,23,0,0,255,255,0,0,19,23,16,23,4,13,23,14,19,23,0,18,3,23,13,23,28,27,13,4,3,23,23,27,28,27,13,156,3,23,23,27,1,27,144,1,6,27,13,27,3,23,23,27,27,27,14,12,3,27,27,15,27,27,27,31,26,27,27,62,28,27,27,12,3,23,23,27,30,23,23,7,83,19,23,0,2,23,0,0,72,205,52,0,84,23,16,0,2,23,0,0,77,205,52,0,83,23,1,0,2,23,0,0,76,205,52,0,83,23,0,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,1,0,2,23,0,0,72,205,52,0,80,0,23,0,2,23,0,0,255,255,0,0,19,23,0,23,1,27,188,7,47,23,23,27,244,20,0,0,1,23,255,255,83,19,23,0,137,17,0,0,1,23,0,0,139,23,0,0,2,23,0,0,77,205,52,0,78,1,23,0,1,23,11,0,26,27,1,1,19,27,27,18,47,23,23,27,40,21,0,0,1,23,255,255,83,19,23,0,137,17,0,0,1,23,0,0,139,23,0,0,2,23,0,0,76,205,52,0,78,2,23,0,41,23,2,24,42,23,23,24,120,23,6,0,1,23,255,255,83,19,23,0,137,17,0,0,1,23,0,0,139,23,0,0,2,23,0,0,128,188,3,0,19,27,1,18,91,23,23,27,19,27,2,18,47,23,23,27,176,21,0,0,38,23,0,3,32,23,23,0,41,27,1,24,42,27,27,24,32,27,27,2,19,23,23,27,41,27,2,24,42,27,27,24,32,27,27,29,19,23,23,27,120,23,6,0,1,23,255,255,83,19,23,0,137,17,0,0,1,23,0,0,139,23,0,0,2,23,0,0,188,201,203,1,84,23,0,0,2,23,0,0,112,202,203,1,83,23,1,0,2,23,0,0,192,201,203,1,83,23,2,0,1,23,0,0,83,19,23,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,1,0,1,23,0,0,84,19,23,0,1,27,26,0,134,23,0,0,68,156,1,0,27,0,0,0,78,0,19,0,41,23,0,24,42,23,23,24,121,23,67,0,2,23,0,0,192,201,203,1,79,23,23,0,19,27,0,18,3,0,23,27,2,27,0,0,192,201,203,1,83,27,0,0,2,27,0,0,112,202,203,1,78,1,27,0,19,27,0,18,0,2,27,0,2,27,0,0,128,188,3,0,19,23,1,18,91,3,27,23,48,27,3,2,28,23,0,0,2,27,0,0,188,201,203,1,80,4,27,0,41,27,1,24,42,27,27,24,32,27,27,2,38,23,4,3,32,23,23,0,19,27,27,23,121,27,13,0,37,27,2,29,120,27,36,0,2,27,0,0,112,202,203,1,1,23,3,0,83,27,23,0,2,23,0,0,192,201,203,1,1,27,227,0,3,27,0,27,83,23,27,0,119,0,26,0,25,27,1,1,41,27,27,24,42,27,27,24,0,16,27,0,2,27,0,0,112,202,203,1,83,27,16,0,2,27,0,0,192,201,203,1,4,23,0,3,83,27,23,0,19,23,16,18,36,23,23,12,120,23,12,0,2,23,0,0,112,202,203,1,1,27,1,0,83,23,27,0,2,27,0,0,188,201,203,1,25,23,4,1,41,23,23,16,42,23,23,16,84,27,23,0,119,0,1,0,2,23,0,0,69,205,52,0,1,27,44,0,83,23,27,0,2,27,0,0,72,205,52,0,81,27,27,0,41,27,27,16,2,23,0,0,76,205,52,0,81,23,23,0,20,27,27,23,0,15,27,0,2,27,0,0,104,212,118,1,82,16,27,0,16,23,15,16,1,26,0,0,125,27,23,26,16,0,0,0,4,27,15,27,77,27,27,0,62,26,0,0,129,212,158,111,92,248,21,64,65,27,27,26,75,16,27,0,29,15,16,100,2,27,0,0,76,205,52,0,27,26,15,100,4,26,16,26,83,27,26,0,2,26,0,0,77,205,52,0,31,27,15,60,83,26,27,0,2,27,0,0,72,205,52,0,1,26,112,23,7,26,16,26,31,26,26,60,83,27,26,0,2,26,0,0,73,205,52,0,2,27,0,0,64,126,5,0,7,27,16,27,31,27,27,24,83,26,27,0,2,27,0,0,100,205,52,0,2,26,0,0,100,205,52,0,81,26,26,0,25,26,26,2,84,27,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,1,26,23,0,2,27,0,0,73,205,52,0,79,27,27,0,15,26,26,27,1,27,59,0,2,23,0,0,72,205,52,0,79,23,23,0,15,27,27,23,20,26,26,27,1,27,59,0,2,23,0,0,77,205,52,0,79,23,23,0,15,27,27,23,20,26,26,27,1,27,99,0,2,23,0,0,76,205,52,0,79,23,23,0,15,27,27,23,20,26,26,27,121,26,6,0,1,26,255,255,83,19,26,0,137,17,0,0,1,26,0,0,139,26,0,0,2,26,0,0,76,205,52,0,80,26,26,0,2,27,0,0,72,205,52,0,80,27,27,0,20,26,26,27,41,26,26,16,42,26,26,16,120,26,12,0,2,26,0,0,104,212,118,1,1,23,108,4,135,27,33,0,23,0,0,0,85,26,27,0,2,26,0,0,141,188,3,0,135,27,34,0,26,6,0,0,119,0,5,0,2,27,0,0,104,212,118,1,1,26,0,0,85,27,26,0,1,26,0,0,83,19,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,2,26,0,0,164,201,203,1,78,27,19,0,32,27,27,1,38,27,27,1,83,26,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,1,26,44,11,135,27,33,0,26,0,0,0,43,27,27,16,0,16,27,0,2,27,0,0,4,206,52,0,84,27,16,0,2,27,0,0,20,206,52,0,41,26,16,4,85,27,26,0,2,26,0,0,80,205,52,0,1,23,44,11,135,27,33,0,23,0,0,0,84,26,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,78,27,19,0,1,26,0,0,1,23,2,0,138,27,26,23,156,25,0,0,168,25,0,0,119,0,7,0,1,0,255,255,1,14,120,0,119,0,4,0,1,0,16,0,1,14,120,0,119,0,1,0,32,27,14,120,121,27,4,0,2,27,0,0,81,205,52,0,83,27,0,0,2,27,0,0,196,201,203,1,78,27,27,0,83,19,27,0,2,27,0,0,69,205,52,0,2,26,0,0,200,201,203,1,78,26,26,0,83,27,26,0,2,26,0,0,80,205,52,0,1,27,0,0,83,26,27,0,2,27,0,0,72,205,52,0,1,26,0,0,84,27,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,1,23,48,11,135,27,0,0,23,0,0,0,2,23,0,0,76,205,52,0,135,26,35,0,27,23,0,0,1,26,48,11,135,16,0,0,26,0,0,0,1,23,1,0,78,27,19,0,135,26,2,0,16,23,27,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,52,253,119,0,51,253,78,26,19,0,1,27,0,0,1,23,7,0,138,26,27,23,176,26,0,0,216,26,0,0,8,27,0,0,80,27,0,0,96,27,0,0,100,27,0,0,132,27,0,0,1,27,255,255,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,78,0,2,27,0,0,76,205,52,0,2,23,0,0,168,201,203,1,78,23,23,0,83,27,23,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,1,0,2,23,0,0,168,201,203,1,2,27,0,0,76,205,52,0,78,27,27,0,33,27,27,0,38,27,27,1,83,23,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,27,0,0,168,201,203,1,78,16,27,0,2,27,0,0,168,201,203,1,2,23,0,0,76,205,52,0,78,23,23,0,33,23,23,0,38,23,23,1,83,27,23,0,2,23,0,0,76,205,52,0,83,23,16,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,6,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,207,255,119,0,252,255,2,23,0,0,76,205,52,0,1,27,3,0,83,23,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,27,0,0,80,205,52,0,2,23,0,0,196,201,203,1,78,23,23,0,83,27,23,0,2,23,0,0,81,205,52,0,2,27,0,0,200,201,203,1,78,27,27,0,83,23,27,0,2,27,0,0,76,205,52,0,1,23,0,0,83,27,23,0,2,23,0,0,77,205,52,0,1,27,16,0,83,23,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,220,255,2,26,0,0,4,206,52,0,1,27,178,0,84,26,27,0,2,27,0,0,20,206,52,0,1,26,32,11,85,27,26,0,2,26,0,0,80,205,52,0,1,27,1,0,84,26,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,27,0,0,80,205,52,0,79,23,19,0,41,23,23,2,135,26,0,0,23,0,0,0,84,27,26,0,79,26,19,0,41,26,26,2,39,26,26,2,135,16,0,0,26,0,0,0,2,26,0,0,4,206,52,0,84,26,16,0,2,26,0,0,20,206,52,0,2,27,0,0,255,255,0,0,19,27,16,27,41,27,27,4,85,26,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,26,0,0,76,205,52,0,78,26,26,0,135,27,36,0,26,16,4,15,12,0,0,0,121,27,16,0,79,27,4,0,84,19,27,0,2,27,0,0,80,205,52,0,80,26,12,0,84,27,26,0,2,26,0,0,72,205,52,0,80,27,16,0,84,26,27,0,2,27,0,0,76,205,52,0,80,26,15,0,84,27,26,0,119,0,8,0,2,26,0,0,76,205,52,0,78,26,26,0,120,26,2,0,135,26,24,0,1,26,255,255,84,19,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,78,26,19,0,1,27,0,0,1,23,4,0,138,26,27,23,64,29,0,0,104,29,0,0,128,29,0,0,168,29,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,33,0,1,27,0,0,83,19,27,0,2,27,0,0,76,205,52,0,1,23,47,0,83,27,23,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,1,0,1,23,0,0,83,19,23,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,1,0,1,23,0,0,83,19,23,0,2,23,0,0,76,205,52,0,1,27,47,0,83,23,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,1,27,0,0,83,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,221,255,78,26,19,0,120,26,27,0,2,27,0,0,32,206,52,0,82,27,27,0,2,23,0,0,76,205,52,0,81,23,23,0,3,27,27,23,2,23,0,0,232,201,203,1,82,23,23,0,1,22,24,0,135,26,37,0,27,23,22,0,2,26,0,0,80,205,52,0,1,22,1,0,84,26,22,0,1,22,1,0,84,19,22,0,1,26,0,0,135,22,38,0,26,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,8,0,1,26,1,0,135,22,38,0,26,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,26,0,0,32,206,52,0,82,26,26,0,2,23,0,0,76,205,52,0,81,23,23,0,3,26,26,23,1,23,0,1,135,22,31,0,26,1,23,0,135,22,39,0,1,0,0,0,121,22,10,0,1,22,5,0,84,19,22,0,1,23,0,0,135,22,38,0,23,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,12,0,2,22,0,0,152,201,203,1,80,22,22,0,84,19,22,0,1,23,1,0,135,22,38,0,23,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,23,0,0,32,206,52,0,82,23,23,0,2,26,0,0,76,205,52,0,81,26,26,0,3,23,23,26,1,26,0,1,135,22,31,0,23,1,26,0,135,22,40,0,1,0,0,0,121,22,10,0,1,22,5,0,84,19,22,0,1,26,0,0,135,22,38,0,26,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,12,0,2,22,0,0,152,201,203,1,80,22,22,0,84,19,22,0,1,26,1,0,135,22,38,0,26,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,26,0,0,32,206,52,0,82,26,26,0,2,23,0,0,76,205,52,0,81,23,23,0,3,26,26,23,1,23,0,1,135,22,31,0,26,1,23,0,135,22,41,0,1,0,0,0,121,22,10,0,1,22,0,0,84,19,22,0,1,23,0,0,135,22,38,0,23,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,12,0,2,22,0,0,152,201,203,1,80,22,22,0,84,19,22,0,1,23,1,0,135,22,38,0,23,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,23,0,0,32,206,52,0,82,23,23,0,2,26,0,0,76,205,52,0,81,26,26,0,3,23,23,26,1,26,0,1,135,22,31,0,23,1,26,0,2,26,0,0,72,205,52,0,80,26,26,0,1,23,0,0,135,22,42,0,1,26,19,23,121,22,8,0,1,23,0,0,135,22,38,0,23,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,12,0,2,22,0,0,152,201,203,1,80,22,22,0,84,19,22,0,1,23,1,0,135,22,38,0,23,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,23,0,0,32,206,52,0,82,23,23,0,2,26,0,0,76,205,52,0,81,26,26,0,3,23,23,26,1,26,0,1,135,22,31,0,23,1,26,0,78,26,19,0,1,23,0,0,135,22,43,0,1,26,19,23,121,22,8,0,1,23,0,0,135,22,38,0,23,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,12,0,2,22,0,0,152,201,203,1,80,22,22,0,84,19,22,0,1,23,1,0,135,22,38,0,23,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,23,0,0,80,205,52,0,80,23,23,0,1,26,0,0,135,22,44,0,23,26,0,0,121,22,8,0,1,26,0,0,135,22,38,0,26,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,12,0,2,22,0,0,152,201,203,1,80,22,22,0,84,19,22,0,1,26,1,0,135,22,38,0,26,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,22,0,0,72,205,52,0,80,22,22,0,84,16,22,0,2,22,0,0,172,201,203,1,1,26,1,0,83,22,26,0,2,22,0,0,80,205,52,0,80,22,22,0,2,23,0,0,48,204,4,0,1,27,0,0,134,26,0,0,120,148,1,0,22,23,16,27,121,26,19,0,2,27,0,0,32,206,52,0,82,27,27,0,2,23,0,0,76,205,52,0,81,23,23,0,3,27,27,23,2,23,0,0,48,204,4,0,81,22,16,0,135,26,37,0,27,23,22,0,80,26,16,0,84,19,26,0,1,22,0,0,135,26,38,0,22,0,0,0,119,0,8,0,2,26,0,0,152,201,203,1,80,26,26,0,84,19,26,0,1,22,1,0,135,26,38,0,22,0,0,0,81,26,19,0,41,26,26,2,0,0,26,0,2,26,0,0,52,206,52,0,82,1,26,0,25,26,0,5,47,26,26,1,96,34,0,0,2,26,0,0,52,206,52,0,4,22,1,0,85,26,22,0,2,15,0,0,192,84,51,0,82,22,15,0,106,26,15,4,1,23,0,0,135,15,45,0,22,26,0,23,2,16,0,0,192,84,51,0,85,16,15,0,128,26,0,0,109,16,4,26,119,0,19,0,2,15,0,0,192,84,51,0,82,26,15,0,106,23,15,4,34,22,1,0,41,22,22,31,42,22,22,31,135,15,45,0,26,23,1,22,2,16,0,0,192,84,51,0,85,16,15,0,128,23,0,0,109,16,4,23,2,23,0,0,52,206,52,0,1,22,5,0,85,23,22,0,2,22,0,0,172,201,203,1,1,23,0,0,83,22,23,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,1,0,2,23,0,0,72,205,52,0,80,15,23,0,84,16,15,0,2,22,0,0,32,206,52,0,82,22,22,0,2,26,0,0,76,205,52,0,81,26,26,0,3,22,22,26,2,26,0,0,48,204,4,0,2,27,0,0,255,255,0,0,19,27,15,27,135,23,46,0,22,26,27,0,2,27,0,0,80,205,52,0,80,27,27,0,2,26,0,0,48,204,4,0,1,22,0,0,135,23,3,0,27,26,16,22,121,23,7,0,80,23,16,0,84,19,23,0,1,22,0,0,135,23,38,0,22,0,0,0,119,0,8,0,2,23,0,0,152,201,203,1,80,23,23,0,84,19,23,0,1,22,1,0,135,23,38,0,22,0,0,0,81,23,19,0,41,23,23,2,0,0,23,0,2,23,0,0,52,206,52,0,82,1,23,0,25,23,0,5,47,23,23,1,208,35,0,0,2,23,0,0,52,206,52,0,4,22,1,0,85,23,22,0,2,15,0,0,192,84,51,0,82,22,15,0,106,23,15,4,1,26,0,0,135,15,45,0,22,23,0,26,2,16,0,0,192,84,51,0,85,16,15,0,128,23,0,0,109,16,4,23,119,0,19,0,2,15,0,0,192,84,51,0,82,23,15,0,106,26,15,4,34,22,1,0,41,22,22,31,42,22,22,31,135,15,45,0,23,26,1,22,2,16,0,0,192,84,51,0,85,16,15,0,128,26,0,0,109,16,4,26,2,26,0,0,52,206,52,0,1,22,5,0,85,26,22,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,26,0,0,32,206,52,0,82,26,26,0,2,23,0,0,76,205,52,0,81,23,23,0,3,26,26,23,1,23,0,1,135,22,31,0,26,1,23,0,135,22,47,0,1,0,0,0,121,22,8,0,1,23,0,0,135,22,38,0,23,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,12,0,2,22,0,0,152,201,203,1,80,22,22,0,84,19,22,0,1,23,1,0,135,22,38,0,23,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,22,0,0,72,205,52,0,81,22,22,0,41,22,22,16,2,23,0,0,76,205,52,0,81,23,23,0,20,22,22,23,85,16,22,0,2,23,0,0,80,205,52,0,80,23,23,0,79,26,19,0,1,27,0,0,135,22,48,0,23,16,26,27,121,22,11,0,82,16,16,0,2,22,0,0,76,205,52,0,43,27,16,16,84,22,27,0,84,19,16,0,1,22,0,0,135,27,38,0,22,0,0,0,119,0,8,0,2,27,0,0,152,201,203,1,80,27,27,0,84,19,27,0,1,22,1,0,135,27,38,0,22,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,22,0,0,32,206,52,0,82,22,22,0,2,26,0,0,76,205,52,0,81,26,26,0,3,22,22,26,1,26,0,1,135,27,31,0,22,1,26,0,78,27,19,0,1,26,0,0,1,22,2,0,138,27,26,22,160,37,0,0,12,38,0,0,1,26,1,0,84,19,26,0,1,22,1,0,135,26,38,0,22,0,0,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,54,0,2,26,0,0,72,205,52,0,80,26,26,0,84,16,26,0,135,26,49,0,1,16,0,0,121,26,10,0,80,16,16,0,2,26,0,0,72,205,52,0,84,26,16,0,84,19,16,0,1,22,0,0,135,26,38,0,22,0,0,0,119,0,8,0,1,22,1,0,135,26,38,0,22,0,0,0,2,26,0,0,152,201,203,1,80,26,26,0,84,19,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,2,22,0,0,72,205,52,0,80,22,22,0,135,26,50,0,1,22,0,0,121,26,10,0,1,26,2,2,84,19,26,0,1,22,0,0,135,26,38,0,22,0,0,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,206,255,1,22,1,0,135,26,38,0,22,0,0,0,2,26,0,0,152,201,203,1,80,26,26,0,84,19,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,195,255,135,27,51,0,121,27,8,0,1,26,0,0,135,27,38,0,26,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,12,0,2,27,0,0,152,201,203,1,80,27,27,0,84,19,27,0,1,26,1,0,135,27,38,0,26,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,26,0,0,80,205,52,0,80,26,26,0,135,27,52,0,26,19,0,0,121,27,8,0,1,26,0,0,135,27,38,0,26,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,12,0,2,27,0,0,152,201,203,1,80,27,27,0,84,19,27,0,1,26,1,0,135,27,38,0,26,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,26,0,0,80,205,52,0,80,26,26,0,2,22,0,0,72,205,52,0,80,22,22,0,135,27,53,0,26,22,0,0,121,27,12,0,2,27,0,0,72,205,52,0,80,27,27,0,84,19,27,0,1,22,0,0,135,27,38,0,22,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,12,0,2,27,0,0,152,201,203,1,80,27,27,0,84,19,27,0,1,22,1,0,135,27,38,0,22,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,22,0,0,76,205,52,0,78,22,22,0,135,27,54,0,22,1,0,0,121,27,22,0,2,27,0,0,32,206,52,0,82,27,27,0,2,22,0,0,92,205,52,0,81,22,22,0,3,16,27,22,135,27,55,0,1,0,0,0,25,27,27,1,135,22,37,0,16,1,27,0,1,22,0,1,84,19,22,0,1,27,0,0,135,22,38,0,27,0,0,0,137,17,0,0],eb+0);HEAPU8.set([1,22,0,0,139,22,0,0,119,0,12,0,2,22,0,0,152,201,203,1,80,22,22,0,84,19,22,0,1,27,1,0,135,22,38,0,27,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,22,0,0,80,205,52,0,80,22,22,0,84,16,22,0,135,22,56,0,15,16,0,0,121,22,7,0,80,22,15,0,84,19,22,0,1,27,0,0,135,22,38,0,27,0,0,0,119,0,12,0,2,22,0,0,152,201,203,1,80,22,22,0,84,19,22,0,2,22,0,0,80,205,52,0,80,27,16,0,84,22,27,0,1,22,1,0,135,27,38,0,22,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,22,0,0,4,206,52,0,80,22,22,0,135,27,57,0,22,0,0,0,121,27,8,0,1,22,0,0,135,27,38,0,22,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,12,0,2,27,0,0,152,201,203,1,80,27,27,0,84,19,27,0,1,22,1,0,135,27,38,0,22,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,27,0,0,80,205,52,0,80,27,27,0,84,16,27,0,2,22,0,0,4,206,52,0,80,22,22,0,135,27,35,0,22,16,0,0,121,27,9,0,2,27,0,0,4,206,52,0,80,27,27,0,84,19,27,0,1,22,0,0,135,27,38,0,22,0,0,0,119,0,12,0,2,27,0,0,152,201,203,1,80,27,27,0,84,19,27,0,2,27,0,0,80,205,52,0,80,22,16,0,84,27,22,0,1,27,1,0,135,22,38,0,27,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,27,0,0,32,206,52,0,82,27,27,0,2,26,0,0,76,205,52,0,81,26,26,0,3,27,27,26,1,26,0,1,135,22,31,0,27,1,26,0,2,26,0,0,20,206,52,0,82,26,26,0,2,27,0,0,80,205,52,0,81,27,27,0,3,26,26,27,78,27,19,0,135,22,58,0,1,26,27,0,121,22,4,0,137,17,0,0,1,22,0,0,139,22,0,0,2,22,0,0,152,201,203,1,80,22,22,0,84,19,22,0,1,27,1,0,135,22,38,0,27,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,1,22,48,11,135,16,0,0,22,0,0,0,1,27,0,0,78,26,19,0,135,22,2,0,16,27,26,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,22,0,0,156,201,203,1,78,22,22,0,83,19,22,0,2,22,0,0,69,205,52,0,2,26,0,0,160,201,203,1,78,26,26,0,83,22,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,2,22,0,0,32,206,52,0,82,22,22,0,2,27,0,0,76,205,52,0,81,27,27,0,3,22,22,27,1,27,0,1,135,26,31,0,22,1,27,0,2,27,0,0,72,205,52,0,80,27,27,0,1,22,0,0,135,26,59,0,1,27,22,0,121,26,10,0,1,22,0,0,135,26,38,0,22,0,0,0,1,26,0,0,84,19,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,12,0,2,26,0,0,152,201,203,1,80,26,26,0,84,19,26,0,1,22,1,0,135,26,38,0,22,0,0,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,135,26,60,0,121,26,10,0,1,22,0,0,135,26,38,0,22,0,0,0,1,26,0,0,84,19,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,12,0,2,26,0,0,152,201,203,1,80,26,26,0,84,19,26,0,1,22,1,0,135,26,38,0,22,0,0,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,1,22,48,11,2,27,0,0,80,205,52,0,80,27,27,0,135,26,61,0,22,27,0,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,2,26,0,0,80,205,52,0,1,22,48,11,135,27,0,0,22,0,0,0,84,26,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,27,0,0,92,212,118,1,135,16,62,0,27,0,0,0,43,27,16,16,0,15,27,0,2,27,0,0,4,206,52,0,84,27,15,0,2,27,0,0,20,206,52,0,41,26,15,4,85,27,26,0,2,26,0,0,80,205,52,0,84,26,16,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,85,7,0,0,2,27,0,0,177,188,3,0,135,26,7,0,27,7,0,0,119,0,120,3,2,26,0,0,164,201,203,1,78,26,26,0,83,19,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,2,27,0,0,76,205,52,0,80,27,27,0,2,22,0,0,92,205,52,0,80,22,22,0,135,26,63,0,27,22,0,0,1,22,48,11,2,27,0,0,76,205,52,0,80,27,27,0,135,26,61,0,22,27,0,0,1,26,240,255,83,19,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,2,27,0,0,32,206,52,0,82,27,27,0,2,22,0,0,76,205,52,0,81,22,22,0,3,27,27,22,1,22,0,1,135,26,31,0,27,1,22,0,2,22,0,0,20,206,52,0,82,22,22,0,2,27,0,0,96,205,52,0,81,27,27,0,3,22,22,27,1,27,0,1,135,26,31,0,22,2,27,0,135,26,64,0,1,2,0,0,121,26,8,0,1,27,0,0,135,26,38,0,27,0,0,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,12,0,2,26,0,0,152,201,203,1,80,26,26,0,84,19,26,0,1,27,1,0,135,26,38,0,27,0,0,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,78,26,19,0,1,27,0,0,1,25,2,0,138,26,27,25,92,45,0,0,188,45,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,32,0,2,22,0,0,80,205,52,0,80,22,22,0,2,23,0,0,72,205,52,0,2,25,0,0,76,205,52,0,135,27,65,0,22,23,25,0,121,27,8,0,1,25,0,0,135,27,38,0,25,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,8,0,1,25,1,0,135,27,38,0,25,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,1,25,0,0,135,27,38,0,25,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,222,255,78,26,19,0,1,27,0,0,1,25,4,0,138,26,27,25,28,46,0,0,52,46,0,0,140,46,0,0,192,46,0,0,1,27,1,0,84,19,27,0,1,25,1,0,135,27,38,0,25,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,64,0,135,27,66,0,84,19,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,25,0,0,80,205,52,0,80,25,25,0,135,27,67,0,25,0,0,0,121,27,8,0,1,25,0,0,135,27,38,0,25,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,10,0,1,27,1,0,84,19,27,0,1,25,1,0,135,27,38,0,25,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,25,0,0,92,212,118,1,135,27,68,0,25,0,0,0,38,27,27,1,83,19,27,0,1,25,0,0,135,27,38,0,25,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,25,0,0,80,205,52,0,80,25,25,0,135,27,69,0,25,0,0,0,121,27,8,0,1,25,0,0,135,27,38,0,25,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,194,255,1,27,1,0,84,19,27,0,1,25,1,0,135,27,38,0,25,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,185,255,2,26,0,0,152,201,203,1,80,16,26,0,84,19,16,0,2,26,0,0,81,205,52,0,38,25,16,254,41,25,25,16,42,25,25,16,32,25,25,2,1,23,8,0,1,22,0,0,125,27,25,23,22,0,0,0,83,26,27,0,2,27,0,0,80,205,52,0,1,26,1,0,83,27,26,0,2,26,0,0,73,205,52,0,1,27,0,0,83,26,27,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,2,26,0,0,32,206,52,0,82,26,26,0,2,22,0,0,76,205,52,0,81,22,22,0,3,26,26,22,1,22,0,1,135,27,31,0,26,1,22,0,135,27,70,0,1,16,0,0,121,27,19,0,80,27,16,0,84,19,27,0,2,27,0,0,32,206,52,0,82,27,27,0,2,22,0,0,76,205,52,0,81,22,22,0,3,16,27,22,135,27,55,0,1,0,0,0,25,27,27,1,135,22,37,0,16,1,27,0,1,27,0,0,135,22,38,0,27,0,0,0,119,0,8,0,2,22,0,0,152,201,203,1,80,22,22,0,84,19,22,0,1,27,1,0,135,22,38,0,27,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,27,0,0,32,206,52,0,82,27,27,0,2,26,0,0,76,205,52,0,81,26,26,0,3,27,27,26,1,26,0,1,135,22,31,0,27,1,26,0,1,26,0,0,1,27,0,0,135,22,43,0,1,26,16,27,121,22,15,0,80,27,16,0,1,26,0,0,135,22,44,0,27,26,0,0,2,22,0,0,152,201,203,1,1,26,80,0,84,22,26,0,1,26,80,0,84,19,26,0,1,22,1,0,135,26,38,0,22,0,0,0,119,0,22,0,2,22,0,0,72,205,52,0,80,22,22,0,1,27,0,0,135,26,42,0,1,22,16,27,121,26,7,0,80,26,16,0,84,19,26,0,1,27,0,0,135,26,38,0,27,0,0,0,119,0,9,0,2,26,0,0,152,201,203,1,80,26,26,0,84,19,26,0,1,27,1,0,135,26,38,0,27,0,0,0,119,0,1,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,2,26,0,0,152,201,203,1,1,27,1,0,84,26,27,0,1,27,1,0,84,19,27,0,1,26,1,0,135,27,38,0,26,0,0,0,137,17,0,0,1,27,0,0,139,27,0,0,119,0,1,0,78,27,19,0,33,27,27,6,121,27,4,0,137,17,0,0,1,27,0,0,139,27,0,0,2,27,0,0,10,206,52,0,1,26,178,0,84,27,26,0,2,26,0,0,32,206,52,0,1,27,32,11,85,26,27,0,2,27,0,0,92,205,52,0,1,26,0,0,84,27,26,0,2,26,0,0,72,205,52,0,1,27,128,0,84,26,27,0,2,27,0,0,76,205,52,0,1,26,26,0,84,27,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,1,26,1,0,84,19,26,0,1,27,1,0,135,26,38,0,27,0,0,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,2,27,0,0,32,206,52,0,82,27,27,0,2,22,0,0,92,205,52,0,81,22,22,0,3,27,27,22,1,22,0,1,135,26,31,0,27,1,22,0,135,26,71,0,1,2,0,0,121,26,20,0,2,26,0,0,20,206,52,0,82,26,26,0,2,22,0,0,96,205,52,0,81,22,22,0,3,16,26,22,135,26,55,0,2,0,0,0,25,26,26,1,135,22,37,0,16,2,26,0,1,26,0,0,135,22,38,0,26,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,12,0,2,22,0,0,152,201,203,1,80,22,22,0,84,19,22,0,1,26,1,0,135,22,38,0,26,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,22,0,0,80,205,52,0,1,27,48,11,135,26,0,0,27,0,0,0,84,22,26,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,1,0,78,26,19,0,120,26,25,0,2,26,0,0,216,201,203,1,82,16,26,0,43,26,16,16,0,15,26,0,2,26,0,0,10,206,52,0,84,26,15,0,2,26,0,0,32,206,52,0,41,22,15,4,85,26,22,0,2,22,0,0,92,205,52,0,84,22,16,0,1,22,0,0,83,19,22,0,1,26,0,0,135,22,38,0,26,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,8,0,1,22,255,255,83,19,22,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,2,0,119,0,42,246,78,0,19,0,2,22,0,0,72,205,52,0,80,1,22,0,19,22,0,18,34,22,22,8,2,26,0,0,255,255,0,0,19,26,1,26,34,26,26,5,19,22,22,26,121,22,11,0,2,22,0,0,152,201,203,1,1,26,1,0,84,22,26,0,1,22,1,0,135,26,38,0,22,0,0,0,137,17,0,0,1,26,0,0,139,26,0,0,2,26,0,0,20,206,52,0,82,26,26,0,2,22,0,0,96,205,52,0,81,22,22,0,3,2,26,22,41,22,0,24,42,22,22,24,1,25,1,0,1,23,34,0,138,22,25,23,88,52,0,0,108,53,0,0,188,53,0,0,8,54,0,0,12,54,0,0,92,54,0,0,172,54,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,60,52,0,0,176,54,0,0,236,54,0,0,216,55,0,0,19,25,0,18,85,9,25,0,2,23,0,0,229,188,3,0,135,25,7,0,23,9,0,0,119,0,106,1,1,27,1,0,135,26,11,0,2,27,0,0,25,27,2,1,1,23,38,0,135,26,61,0,27,23,0,0,25,23,2,3,1,27,1,0,135,26,61,0,23,27,0,0,1,26,6,0,2,27,0,0,72,205,52,0,81,27,27,0,47,26,26,27,80,53,0,0,25,27,2,5,2,23,0,0,176,201,203,1,80,23,23,0,135,26,61,0,27,23,0,0,2,26,0,0,72,205,52,0,80,0,26,0,1,26,8,0,2,23,0,0,255,255,0,0,19,23,0,23,47,26,26,23,80,53,0,0,25,23,2,7,2,27,0,0,232,201,203,1,82,27,27,0,1,24,40,0,2,28,0,0,255,255,0,0,19,28,0,28,47,24,24,28,12,53,0,0,1,24,34,0,0,25,24,0,119,0,6,0,2,24,0,0,255,255,0,0,19,24,0,24,26,24,24,7,0,25,24,0,135,26,37,0,23,27,25,0,2,26,0,0,72,205,52,0,81,16,26,0,2,26,0,0,72,205,52,0,35,27,16,41,1,23,41,0,125,25,27,16,23,0,0,0,84,26,25,0,1,26,0,0,135,25,38,0,26,0,0,0,137,17,0,0,1,25,0,0,139,25,0,0,119,0,41,0,1,25,2,0,135,23,11,0,2,25,0,0,25,25,2,1,2,26,0,0,228,201,203,1,82,26,26,0,135,23,1,0,25,26,0,0,2,23,0,0,72,205,52,0,1,26,5,0,84,23,26,0,1,23,0,0,135,26,38,0,23,0,0,0,137,17,0,0,1,26,0,0,139,26,0,0,119,0,41,0,135,25,11,0,2,0,0,0,25,26,2,1,2,23,0,0,216,201,203,1,82,23,23,0,135,25,1,0,26,23,0,0,2,25,0,0,72,205,52,0,1,23,5,0,84,25,23,0,1,25,0,0,135,23,38,0,25,0,0,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,43,0,119,0,237,255,1,26,5,0,135,25,11,0,2,26,0,0,25,26,2,1,2,23,0,0,220,201,203,1,82,23,23,0,135,25,1,0,26,23,0,0,2,25,0,0,72,205,52,0,1,23,5,0,84,25,23,0,1,25,0,0,135,23,38,0,25,0,0,0,137,17,0,0,1,23,0,0,139,23,0,0,119,0,197,255,1,23,6,0,135,26,11,0,2,23,0,0,25,23,2,1,2,25,0,0,224,201,203,1,82,25,25,0,135,26,1,0,23,25,0,0,2,26,0,0,72,205,52,0,1,25,5,0,84,26,25,0,1,26,0,0,135,25,38,0,26,0,0,0,137,17,0,0,1,25,0,0,139,25,0,0,119,0,197,255,119,0,196,255,2,23,0,0,76,205,52,0,2,26,0,0,76,205,52,0,79,26,26,0,135,25,72,0,26,0,0,0,83,23,25,0,1,23,0,0,135,25,38,0,23,0,0,0,137,17,0,0,1,25,0,0,139,25,0,0,119,0,1,0,2,25,0,0,32,206,52,0,82,25,25,0,2,23,0,0,76,205,52,0,81,23,23,0,3,2,25,23,41,23,0,24,42,23,23,24,32,23,23,33,121,23,6,0,2,23,0,0,255,255,0,0,19,23,1,23,0,11,23,0,119,0,13,0,135,0,73,0,2,0,0,0,2,23,0,0,255,255,0,0,48,23,23,0,88,55,0,0,2,25,0,0,204,188,3,0,135,23,7,0,25,10,0,0,119,0,2,0,0,11,0,0,121,11,24,0,2,25,0,0,48,204,4,0,135,23,46,0,2,25,11,0,2,23,0,0,48,204,4,0,1,25,0,0,95,23,11,25,1,0,0,0,2,25,0,0,48,204,4,0,3,16,25,0,79,23,16,0,135,25,72,0,23,0,0,0,83,16,25,0,25,0,0,1,53,25,0,11,132,55,0,0,2,23,0,0,48,204,4,0,135,25,37,0,2,23,11,0,1,23,0,0,135,25,38,0,23,0,0,0,137,17,0,0,1,25,0,0,139,25,0,0,119,0,26,255,119,0,197,255,78,22,19,0,33,22,22,1,121,22,4,0,137,17,0,0,1,22,0,0,139,22,0,0,2,22,0,0,176,201,203,1,80,16,22,0,2,22,0,0,76,205,52,0,84,22,16,0,2,22,0,0,80,205,52,0,84,22,16,0,1,25,0,0,135,22,38,0,25,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,1,22,48,11,135,15,0,0,22,0,0,0,2,22,0,0,255,255,0,0,19,22,15,22,41,22,22,4,85,16,22,0,108,16,4,15,2,25,0,0,80,205,52,0,80,25,25,0,135,22,74,0,16,25,0,0,1,25,0,0,135,22,38,0,25,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,25,0,0,80,205,52,0,79,25,25,0,135,22,75,0,25,0,0,0,121,22,8,0,1,25,0,0,135,22,38,0,25,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,12,0,2,22,0,0,152,201,203,1,80,22,22,0,84,19,22,0,1,25,1,0,135,22,38,0,25,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,78,0,19,0,41,22,0,24,42,22,22,24,121,22,7,0,19,22,0,18,85,8,22,0,2,25,0,0,21,189,3,0,135,22,7,0,25,8,0,0,1,25,1,0,135,22,38,0,25,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,2,25,0,0,32,206,52,0,82,25,25,0,2,23,0,0,92,205,52,0,81,23,23,0,3,25,25,23,1,23,0,1,135,22,31,0,25,1,23,0,2,23,0,0,80,205,52,0,80,23,23,0,2,25,0,0,72,205,52,0,80,25,25,0,2,26,0,0,76,205,52,0,80,26,26,0,2,27,0,0,72,205,52,0,135,22,76,0,1,23,25,26,19,27,0,0,121,22,8,0,1,27,0,0,135,22,38,0,27,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,12,0,2,22,0,0,152,201,203,1,80,22,22,0,84,19,22,0,1,27,1,0,135,22,38,0,27,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,1,0,1,22,0,113,84,19,22,0,1,27,1,0,135,22,38,0,27,0,0,0,137,17,0,0,1,22,0,0,139,22,0,0,119,0,118,244,1,21,0,0,139,21,0,0,140,2,66,0,0,0,0,0,2,54,0,0,117,85,4,0,2,55,0,0,122,85,4,0,2,56,0,0,127,85,4,0,2,57,0,0,154,0,0,0,2,58,0,0,239,255,255,255,2,59,0,0,0,0,0,128,1,50,0,0,136,60,0,0,0,53,60,0,136,60,0,0,1,61,144,0,3,60,60,61,137,60,0,0,0,47,53,0,25,27,53,108,1,60,135,0,3,38,53,60,1,60,132,0,3,40,53,60,1,60,130,0,3,41,53,60,25,42,53,116,25,43,53,104,25,44,53,114,25,16,53,112,1,60,134,0,3,17,53,60,25,18,53,92,25,19,53,80,1,60,1,0,84,40,60,0,1,60,0,0,84,41,60,0,1,60,0,0,83,1,60,0,25,45,0,28,25,52,0,36,25,46,0,40,25,20,0,54,25,51,0,44,25,48,0,32,25,49,0,24,0,21,52,0,25,22,0,52,1,60,1,0,4,23,60,1,25,24,47,11,25,25,47,8,25,26,47,4,25,28,18,4,25,29,18,8,25,30,19,11,25,31,19,11,25,32,19,8,25,33,19,4,25,34,19,8,25,35,19,4,25,36,19,11,25,37,19,8,25,39,19,4,1,7,254,15,1,11,0,0,1,2,0,0,1,13,0,0,82,12,46,0,82,10,45,0,2,60,0,0,172,201,203,1,1,61,0,0,83,60,61,0,80,60,20,0,1,62,0,0,134,61,0,0,120,148,1,0,60,38,40,62,120,61,17,0,80,62,20,0,1,60,0,0,135,61,44,0,62,60,0,0,2,60,0,0,106,85,4,0,1,62,2,0,1,63,0,0,135,61,43,0,60,62,47,63,80,63,20,0,1,62,0,0,134,61,0,0,120,148,1,0,63,38,40,62,121,61,241,255,80,61,40,0,120,61,4,0,0,14,11,0,0,15,13,0,119,0,185,5,78,61,38,0,1,65,0,0,1,60,28,0,138,61,65,60,164,61,0,0,40,60,0,0,40,60,0,0,40,60,0,0,40,60,0,0,40,60,0,0,40,60,0,0,40,60,0,0,24,72,0,0,40,74,0,0,64,82,0,0,40,60,0,0,40,60,0,0,84,82,0,0,40,60,0,0,40,60,0,0,40,60,0,0,40,60,0,0,40,60,0,0,40,60,0,0,40,60,0,0,40,60,0,0,40,60,0,0,40,60,0,0,40,60,0,0,40,60,0,0,40,60,0,0,92,82,0,0,82,62,51,0,121,62,26,0,82,3,46,0,82,62,52,0,25,9,62,4,82,8,3,0,82,60,9,0,109,8,4,60,82,60,9,0,85,60,8,0,1,60,0,0,85,51,60,0,46,60,3,52,148,60,0,0,0,4,3,0,106,3,3,4,25,5,4,8,102,60,5,11,34,60,60,0,121,60,4,0,82,62,5,0,135,60,77,0,62,0,0,0,135,60,77,0,4,0,0,0,53,60,3,52,96,60,0,0,48,60,2,11,72,61,0,0,1,60,32,0,83,47,60,0,1,60,1,0,84,27,60,0,1,62,1,0,1,65,0,0,135,60,3,0,62,47,27,65,4,60,11,2,84,42,60,0,3,3,1,2,1,65,1,0,1,62,0,0,135,60,3,0,65,3,42,62,1,60,8,0,83,47,60,0,1,60,1,0,84,27,60,0,1,62,1,0,1,65,0,0,135,60,3,0,62,47,27,65,0,4,11,0,0,9,4,0,26,4,4,1,90,65,1,4,95,1,9,65,1,65,8,0,83,47,65,0,1,65,1,0,84,27,65,0,1,60,1,0,1,62,0,0,135,65,3,0,60,47,27,62,55,65,2,4,252,60,0,0,25,4,11,1,1,62,0,0,95,1,4,62,26,5,7,1,119,0,4,0,0,5,7,0,0,4,11,0,3,3,1,2,78,62,38,0,83,3,62,0,25,2,2,1,48,62,4,2,124,61,0,0,1,65,0,0,95,1,2,65,26,3,5,1,25,4,4,1,119,0,2,0,0,3,5,0,1,62,1,0,1,60,0,0,135,65,3,0,62,38,40,60,0,8,13,0,0,7,3,0,0,3,12,0,0,5,10,0,119,0,49,5,80,63,20,0,1,60,0,0,134,62,0,0,120,148,1,0,63,38,40,60,78,62,38,0,1,60,15,0,1,65,69,0,138,62,60,65,240,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,176,64,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,220,62,0,0,224,65,0,0,64,66,0,0,220,62,0,0,220,62,0,0,116,68,0,0,220,62,0,0,200,68,0,0,220,62,0,0,28,69,0,0,124,69,0,0,220,62,0,0,220,62,0,0,44,71,0,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,222,4,82,63,51,0,120,63,6,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,215,4,82,65,46,0,13,65,65,12,125,63,65,21,12,0,0,0,82,3,63,0,0,8,3,0,25,9,8,8,25,6,9,11,78,5,6,0,41,63,5,24,42,63,63,24,34,63,63,0,121,63,3,0,106,4,8,12,119,0,4,0,1,63,255,0,19,63,5,63,0,4,63,0,120,4,5,0,0,8,13,0,0,4,11,0,0,5,10,0,119,0,192,4,81,4,22,0,48,63,4,2,8,64,0,0,1,63,8,0,83,47,63,0,1,63,1,0,84,27,63,0,1,65,1,0,1,60,0,0,135,63,3,0,65,47,27,60,1,63,32,0,83,47,63,0,1,63,1,0,84,27,63,0,1,60,1,0,1,65,0,0,135,63,3,0,60,47,27,65,1,63,8,0,83,47,63,0,1,63,1,0,84,27,63,0,1,65,1,0,1,60,0,0,135,63,3,0,65,47,27,60,26,2,2,1,80,4,22,0,2,63,0,0,255,255,0,0,19,63,4,63,55,63,63,2,116,63,0,0,2,63,0,0,255,255,0,0,19,63,4,63,0,4,63,0,78,2,6,0,119,0,2,0,0,2,5,0,41,63,2,24,42,63,63,24,34,63,63,0,121,63,3,0,82,2,9,0,119,0,2,0,0,2,9,0,3,60,1,4,135,63,78,0,60,2,0,0,78,2,6,0,41,63,2,24,42,63,63,24,34,4,63,0,121,4,3,0,106,2,8,12,119,0,4,0,1,63,255,0,19,63,2,63,0,2,63,0,84,41,2,0,2,63,0,0,255,255,0,0,19,63,2,63,81,60,22,0,3,5,63,60,121,4,3,0,82,2,9,0,119,0,2,0,0,2,9,0,1,63,1,0,1,65,0,0,135,60,3,0,63,2,41,65,0,2,5,0,0,8,13,0,1,60,254,15,4,7,60,5,0,4,5,0,0,5,10,0,119,0,110,4,82,60,48,0,120,60,6,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,103,4,82,10,45,0,0,5,10,0,45,60,10,49,236,64,0,0,0,8,13,0,0,4,11,0,0,3,12,0,119,0,95,4,25,3,10,8,25,9,3,11,78,8,9,0,41,60,8,24,42,60,60,24,34,4,60,0,121,4,3,0,106,6,10,12,119,0,4,0,1,60,255,0,19,60,8,60,0,6,60,0,50,60,6,11,52,65,0,0,0,8,13,0,0,4,11,0,0,3,12,0,119,0,77,4,121,4,2,0,82,3,3,0,3,4,3,11,78,3,4,0,83,38,3,0,41,60,3,24,42,60,60,24,120,60,3,0,0,2,8,0,119,0,16,0,25,4,4,1,95,1,2,3,1,63,1,0,1,64,0,0,135,60,3,0,63,38,40,64,78,3,4,0,83,38,3,0,41,60,3,24,42,60,60,24,120,60,2,0,119,0,3,0,25,2,2,1,119,0,243,255,78,2,9,0,41,60,2,24,42,60,60,24,34,60,60,0,121,60,3,0,106,3,10,12,119,0,4,0,1,60,255,0,19,60,2,60,0,3,60,0,1,64,0,0,95,1,3,64,0,2,3,0,0,8,13,0,1,64,254,15,4,7,64,3,0,4,3,0,0,3,12,0,119,0,34,4,120,2,7,0,1,2,0,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,27,4,1,64,8,0,83,47,64,0,1,64,1,0,84,27,64,0,1,60,1,0,1,63,0,0,135,64,3,0,60,47,27,63,26,2,2,1,33,64,2,0,120,64,246,255,1,2,0,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,10,4,0,6,10,0,82,64,48,0,32,64,64,0,13,60,49,6,20,64,64,60,121,64,6,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,255,3,82,64,45,0,14,64,64,6,20,64,13,64,121,64,3,0,0,5,13,0,119,0,62,0,1,64,0,0,85,47,64,0,1,60,0,0,109,47,4,60,1,64,0,0,109,47,8,64,135,4,55,0,1,0,0,0,48,64,58,4,180,66,0,0,1,50,38,0,119,0,246,3,35,64,4,11,121,64,8,0,83,24,4,0,120,4,3,0,0,3,47,0,119,0,14,0,0,3,47,0,1,50,42,0,119,0,11,0,25,64,4,16,38,64,64,240,0,50,64,0,135,3,79,0,50,0,0,0,85,47,3,0,20,64,50,59,85,25,64,0,85,26,4,0,1,50,42,0,32,64,50,42,121,64,4,0,1,50,0,0,135,64,80,0,3,1,4,0,1,60,0,0,95,3,4,60,1,60,20,0,135,13,79,0,60,0,0,0,1,60,0,0,85,13,60,0,25,64,13,8,135,60,81,0,64,47,0,0,85,13,49,0,82,11,45,0,109,13,4,11,85,11,13,0,85,45,13,0,82,60,48,0,25,60,60,1,85,48,60,0,78,60,24,0,34,60,60,0,121,60,4,0,82,64,47,0,135,60,77,0,64,0,0,0,1,5,1,0,121,2,28,0,1,60,8,0,83,47,60,0,1,60,1,0,84,27,60,0,1,64,1,0,1,63,0,0,135,60,3,0,64,47,27,63,1,60,32,0,83,47,60,0,1,60,1,0,84,27,60,0,1,63,1,0,1,64,0,0,135,60,3,0,63,47,27,64,1,60,8,0,83,47,60,0,1,60,1,0,84,27,60,0,1,64,1,0,1,63,0,0,135,60,3,0,64,47,27,63,26,2,2,1,33,60,2,0,120,60,230,255,0,4,10,0,25,2,4,8,25,3,2,11,78,60,3,0,34,60,60,0,121,60,2,0,82,2,2,0,135,60,78,0,1,2,0,0,78,2,3,0,41,60,2,24,42,60,60,24,34,60,60,0,121,60,3,0,106,2,4,12,119,0,4,0,1,60,255,0,19,60,2,60,0,2,60,0,84,41,2,0,2,60,0,0,255,255,0,0,19,60,2,60,0,4,60,0,1,63,1,0,1,64,0,0,135,60,3,0,63,1,41,64,0,2,4,0,0,8,5,0,1,60,254,15,4,7,60,4,0,3,12,0,106,5,6,4,119,0,125,3,120,2,7,0,1,2,0,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,118,3,1,64,8,0,83,47,64,0,1,64,1,0,84,27,64,0,1,60,1,0,1,63,0,0,135,64,3,0,60,47,27,63,26,2,2,1,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,104,3,50,64,11,2,228,68,0,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,97,3,90,64,1,2,83,47,64,0,1,64,1,0,84,27,64,0,1,63,1,0,1,60,0,0,135,64,3,0,63,47,27,60,25,2,2,1,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,83,3,50,64,11,2,56,69,0,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,76,3,90,64,1,2,83,47,64,0,25,2,2,1,1,64,1,0,84,27,64,0,1,63,1,0,1,60,0,0,135,64,3,0,63,47,27,60,53,64,2,11,56,69,0,0,0,2,11,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,59,3,82,4,48,0,120,4,6,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,52,3,82,6,45,0,45,60,6,10,184,69,0,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,44,3,82,3,10,0,45,60,3,6,44,70,0,0,25,3,6,4,82,5,3,0,120,13,5,0,1,8,0,0,0,4,11,0,0,3,12,0,119,0,34,3,82,13,6,0,109,13,4,5,82,60,3,0,85,60,13,0,26,60,4,1,85,48,60,0,25,3,6,8,102,60,3,11,34,60,60,0,121,60,4,0,82,64,3,0,135,60,77,0,64,0,0,0,135,60,77,0,6,0,0,0,1,8,0,0,0,4,11,0,0,3,12,0,119,0,15,3,82,5,3,0,121,2,28,0,1,60,8,0,83,47,60,0,1,60,1,0,84,27,60,0,1,64,1,0,1,63,0,0,135,60,3,0,64,47,27,63,1,60,32,0,83,47,60,0,1,60,1,0,84,27,60,0,1,63,1,0,1,64,0,0,135,60,3,0,63,47,27,64,1,60,8,0,83,47,60,0,1,60,1,0,84,27,60,0,1,64,1,0,1,63,0,0,135,60,3,0,64,47,27,63,26,2,2,1,33,60,2,0,120,60,230,255,0,4,5,0,25,2,4,8,25,3,2,11,78,60,3,0,34,60,60,0,121,60,2,0,82,2,2,0,135,60,78,0,1,2,0,0,78,2,3,0,41,60,2,24,42,60,60,24,34,60,60,0,121,60,3,0,106,2,4,12,119,0,4,0,1,60,255,0,19,60,2,60,0,2,60,0,84,41,2,0,2,60,0,0,255,255,0,0,19,60,2,60,0,4,60,0,1,63,1,0,1,64,0,0,135,60,3,0,63,1,41,64,0,2,4,0,0,8,13,0,1,60,254,15,4,7,60,4,0,3,12,0,106,5,5,4,119,0,207,2,50,60,11,2,72,71,0,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,200,2,2,60,0,0,255,255,0,0,4,60,60,2,3,60,60,11,84,42,60,0,1,64,1,0,25,63,2,1,3,63,1,63,1,65,0,0,135,60,3,0,64,63,42,65,1,60,32,0,83,47,60,0,1,60,1,0,84,27,60,0,1,65,1,0,1,63,0,0,135,60,3,0,65,47,27,63,1,60,8,0,83,47,60,0,1,60,1,0,84,27,60,0,1,63,1,0,1,65,0,0,135,60,3,0,63,47,27,65,26,4,11,1,48,60,2,4,252,71,0,0,0,3,2,0,0,11,3,0,25,3,3,1,90,65,1,3,95,1,11,65,1,65,8,0,83,47,65,0,1,65,1,0,84,27,65,0,1,60,1,0,1,63,0,0,135,65,3,0,60,47,27,63,53,65,3,4,196,71,0,0,1,63,0,0,95,1,4,63,0,8,13,0,25,7,7,1,0,3,12,0,0,5,10,0,119,0,148,2,120,2,4,0,0,6,11,0,1,2,0,0,119,0,87,0,1,62,8,0,83,47,62,0,1,62,1,0,84,27,62,0,1,60,1,0,1,65,0,0,135,62,3,0,60,47,27,65,4,6,11,2,25,7,7,1,32,5,6,0,26,8,2,1,3,3,1,8,121,5,5,0,1,62,0,0,83,3,62,0,26,3,11,1,119,0,35,0,3,65,1,2,135,62,82,0,3,65,6,0,26,3,11,1,1,65,0,0,95,1,3,65,2,65,0,0,255,255,0,0,19,65,8,65,0,2,65,0,48,65,2,3,248,72,0,0,2,65,0,0,255,255,0,0,19,65,8,65,0,4,65,0,90,65,1,2,83,47,65,0,1,65,1,0,84,27,65,0,1,62,1,0,1,60,0,0,135,65,3,0,62,47,27,60,25,65,4,1,41,65,65,16,42,65,65,16,0,4,65,0,2,65,0,0,255,255,0,0,19,65,4,65,0,2,65,0,55,65,2,3,176,72,0,0,1,65,32,0,83,47,65,0,1,65,1,0,84,27,65,0,1,60,1,0,1,62,0,0,135,65,3,0,60,47,27,62,1,65,8,0,83,47,65,0,1,65,1,0,84,27,65,0,1,62,1,0,1,60,0,0,135,65,3,0,62,47,27,60,121,5,4,0,0,6,3,0,0,2,8,0,119,0,15,0,0,2,6,0,26,2,2,1,1,65,8,0,83,47,65,0,1,65,1,0,84,27,65,0,1,60,1,0,1,62,0,0,135,65,3,0,60,47,27,62,33,65,2,0,120,65,246,255,0,6,3,0,0,2,8,0,82,65,51,0,120,65,6,0,0,8,13,0,0,4,6,0,0,3,12,0,0,5,10,0,119,0,51,2,82,3,46,0,82,65,52,0,25,11,65,4,82,9,3,0,82,62,11,0,109,9,4,62,82,62,11,0,85,62,9,0,1,62,0,0,85,51,62,0,45,62,3,52,224,73,0,0,0,8,13,0,0,4,6,0,0,3,12,0,0,5,10,0,119,0,34,2,0,4,3,0,106,3,3,4,25,5,4,8,102,62,5,11,34,62,62,0,121,62,4,0,82,65,5,0,135,62,77,0,65,0,0,0,135,62,77,0,4,0,0,0,53,62,3,52,224,73,0,0,0,8,13,0,0,4,6,0,0,3,12,0,0,5,10,0,119,0,16,2,82,62,51,0,120,62,157,1,2,65,0,0,110,85,4,0,1,60,3,0,135,62,83,0,1,65,60,0,32,8,62,0,1,62,32,0,135,3,84,0,1,62,0,0,120,3,5,0,0,5,1,0,1,3,0,0,1,4,0,0,119,0,10,0,25,5,3,1,135,62,55,0,5,0,0,0,4,4,11,62,0,3,4,0,2,62,0,0,255,255,0,0,19,62,4,62,0,4,62,0,84,22,4,0,2,62,0,0,255,255,0,0,19,62,3,62,3,3,1,62,1,62,92,0,135,4,84,0,3,62,0,0,121,4,7,0,3,3,23,4,84,22,3,0,2,62,0,0,255,255,0,0,19,62,3,62,3,3,1,62,1,62,47,0,135,3,84,0,3,62,0,0,121,3,3,0,3,62,23,3,84,22,62,0,120,5,5,0,2,62,0,0,42,46,42,0,85,47,62,0,119,0,46,0,135,62,78,0,47,5,0,0,1,62,46,0,135,4,84,0,47,62,0,0,1,62,92,0,135,9,84,0,47,62,0,0,1,62,58,0,135,3,84,0,47,62,0,0,1,62,0,0,4,60,4,9,47,62,62,60,124,75,0,0,1,62,0,0,1,65,47,0,135,60,84,0,47,65,0,0,4,60,4,60,47,62,62,60,124,75,0,0,1,62,0,0,4,60,4,3,47,62,62,60,124,75,0,0,135,62,55,0,47,0,0,0,3,9,47,62,1,62,42,0,83,9,62,0,1,60,0,0,107,9,1,60,119,0,12,0,135,60,55,0,47,0,0,0,3,9,47,60,1,60,42,0,83,9,60,0,1,62,46,0,107,9,1,62,1,60,42,0,107,9,2,60,1,62,0,0,107,9,3,62,1,62,44,11,135,6,33,0,62,0,0,0,1,60,44,11,2,65,0,0,208,201,203,1,82,65,65,0,135,62,1,0,60,65,0,0,1,65,247,255,1,60,0,0,135,62,59,0,47,65,60,0,120,62,9,0,1,60,44,11,135,62,1,0,60,6,0,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,154,1,1,62,44,11,135,12,33,0,62,0,0,0,43,62,12,16,41,62,62,4,2,60,0,0,255,255,0,0,19,60,12,60,3,62,62,60,85,27,62,0,85,18,18,0,85,28,18,0,1,62,0,0,85,29,62,0,135,62,85,0,27,42,43,44,16,17,0,0,2,60,0,0,199,171,4,0,135,62,86,0,42,60,0,0,121,62,209,0,2,60,0,0,114,85,4,0,135,62,86,0,42,60,0,0,121,62,204,0,121,8,67,0,78,62,17,0,38,62,62,16,120,62,2,0,119,0,199,0,1,62,0,0,85,19,62,0,1,60,0,0,109,19,4,60,1,62,0,0,109,19,8,62,135,4,55,0,42,0,0,0,48,62,58,4,176,76,0,0,1,50,137,0,119,0,119,1,35,62,4,11,121,62,8,0,83,30,4,0,120,4,3,0,0,3,19,0,119,0,14,0,0,3,19,0,1,50,141,0,119,0,11,0,25,62,4,16,38,62,62,240,0,50,62,0,135,3,79,0,50,0,0,0,85,19,3,0,20,62,50,59,85,32,62,0,85,33,4,0,1,50,141,0,1,62,141,0,45,62,50,62,20,77,0,0,1,50,0,0,135,62,80,0,3,42,4,0,1,60,0,0,95,3,4,60,1,60,20,0,135,12,79,0,60,0,0,0,1,60,0,0,85,12,60,0,25,62,12,8,135,60,81,0,62,19,0,0,109,12,4,52,82,9,52,0,85,12,9,0,109,9,4,12,85,52,12,0,82,60,51,0,25,60,60,1,85,51,60,0,78,60,30,0,34,60,60,0,121,60,141,0,82,62,19,0,135,60,77,0,62,0,0,0,119,0,137,0,1,60,46,0,135,3,84,0,42,60,0,0,121,3,72,0,135,60,86,0,3,54,0,0,121,60,8,0,135,60,86,0,3,55,0,0,120,60,2,0,119,0,4,0,135,60,86,0,3,56,0,0,120,60,62,0,1,60,0,0,85,19,60,0,1,62,0,0,109,19,4,62,1,60,0,0,109,19,8,60,135,4,55,0,42,0,0,0,48,60,58,4,224,77,0,0,1,50,150,0,119,0,43,1,35,60,4,11,121,60,8,0,83,36,4,0,120,4,3,0,0,3,19,0,119,0,14,0,0,3,19,0,1,50,154,0,119,0,11,0,25,60,4,16,38,60,60,240,0,50,60,0,135,3,79,0,50,0,0,0,85,19,3,0,20,60,50,59,85,37,60,0,85,39,4,0,1,50,154,0,45,60,50,57,64,78,0,0,1,50,0,0,135,60,80,0,3,42,4,0,1,62,0,0,95,3,4,62,1,62,20,0,135,12,79,0,62,0,0,0,1,62,0,0,85,12,62,0,25,60,12,8,135,62,81,0,60,19,0,0,85,12,18,0,82,9,28,0,109,12,4,9,85,9,12,0,85,28,12,0,82,62,29,0,25,62,62,1,85,29,62,0,78,62,36,0,34,62,62,0,121,62,66,0,82,60,19,0,135,62,77,0,60,0,0,0,119,0,62,0,1,62,0,0,85,19,62,0,1,60,0,0,109,19,4,60,1,62,0,0,109,19,8,62,135,4,55,0,42,0,0,0,48,62,58,4,212,78,0,0,1,50,159,0,119,0,238,0,35,62,4,11,121,62,8,0,83,31,4,0,120,4,3,0,0,3,19,0,119,0,14,0,0,3,19,0,1,50,163,0,119,0,11,0,25,62,4,16,38,62,62,240,0,50,62,0,135,3,79,0,50,0,0,0,85,19,3,0,20,62,50,59,85,34,62,0,85,35,4,0,1,50,163,0,1,62,163,0,45,62,50,62,56,79,0,0,1,50,0,0,135,62,80,0,3,42,4,0,1,60,0,0,95,3,4,60,1,60,20,0,135,12,79,0,60,0,0,0,1,60,0,0,85,12,60,0,25,62,12,8,135,60,81,0,62,19,0,0,109,12,4,52,82,9,52,0,85,12,9,0,109,9,4,12,85,52,12,0,82,60,51,0,25,60,60,1,85,51,60,0,78,60,31,0,34,60,60,0,121,60,4,0,82,62,19,0,135,60,77,0,62,0,0,0,135,60,60,0,120,60,39,255,82,3,28,0,45,60,3,18,180,79,0,0,82,3,46,0,119,0,24,0,0,5,3,0,0,4,3,0,1,60,20,0,135,3,79,0,60,0,0,0,1,60,0,0,85,3,60,0,25,62,3,8,25,65,5,8,135,60,81,0,62,65,0,0,85,3,52,0,82,12,46,0,109,3,4,12,85,12,3,0,85,46,3,0,82,60,51,0,25,60,60,1,85,51,60,0],eb+10240);HEAPU8.set([106,5,4,4,0,4,5,0,53,60,18,4,188,79,0,0,1,65,44,11,135,60,1,0,65,6,0,0,82,60,29,0,121,60,26,0,82,4,28,0,82,60,18,0,25,12,60,4,82,9,4,0,82,65,12,0,109,9,4,65,82,65,12,0,85,65,9,0,1,65,0,0,85,29,65,0,46,65,4,18,136,80,0,0,0,5,4,0,106,4,4,4,25,6,5,8,102,65,6,11,34,65,65,0,121,65,4,0,82,60,6,0,135,65,77,0,60,0,0,0,135,65,77,0,5,0,0,0,53,65,4,18,84,80,0,0,82,65,51,0,120,65,9,0,0,8,13,0,0,4,11,0,0,5,10,0,119,0,114,0,106,3,12,4,45,65,52,3,176,80,0,0,82,3,46,0,0,8,3,0,25,9,8,8,25,6,9,11,78,5,6,0,41,65,5,24,42,65,65,24,34,65,65,0,121,65,3,0,106,4,8,12,119,0,4,0,1,65,255,0,19,65,5,65,0,4,65,0,120,4,5,0,0,8,13,0,0,4,11,0,0,5,10,0,119,0,92,0,81,4,22,0,48,65,4,2,152,81,0,0,1,65,8,0,83,47,65,0,1,65,1,0,84,27,65,0,1,60,1,0,1,62,0,0,135,65,3,0,60,47,27,62,1,65,32,0,83,47,65,0,1,65,1,0,84,27,65,0,1,62,1,0,1,60,0,0,135,65,3,0,62,47,27,60,1,65,8,0,83,47,65,0,1,65,1,0,84,27,65,0,1,60,1,0,1,62,0,0,135,65,3,0,60,47,27,62,26,2,2,1,80,4,22,0,2,65,0,0,255,255,0,0,19,65,4,65,55,65,65,2,4,81,0,0,2,65,0,0,255,255,0,0,19,65,4,65,0,4,65,0,78,2,6,0,119,0,2,0,0,2,5,0,41,65,2,24,42,65,65,24,34,65,65,0,121,65,3,0,82,2,9,0,119,0,2,0,0,2,9,0,3,62,1,4,135,65,78,0,62,2,0,0,78,2,6,0,41,65,2,24,42,65,65,24,34,4,65,0,121,4,3,0,106,2,8,12,119,0,4,0,1,65,255,0,19,65,2,65,0,2,65,0,84,41,2,0,2,65,0,0,255,255,0,0,19,65,2,65,81,62,22,0,3,5,65,62,121,4,3,0,82,2,9,0,119,0,2,0,0,2,9,0,1,65,1,0,1,60,0,0,135,62,3,0,65,2,41,60,0,2,5,0,0,8,13,0,1,62,254,15,4,7,62,5,0,4,5,0,0,5,10,0,119,0,10,0,0,8,13,0,0,4,11,0,0,3,12,0,0,5,10,0,119,0,5,0,1,50,112,0,119,0,12,0,1,50,198,0,119,0,10,0,120,7,4,0,0,14,4,0,0,15,8,0,119,0,6,0,0,11,4,0,0,13,8,0,0,12,3,0,0,10,5,0,119,0,42,250,32,61,50,38,121,61,4,0,135,61,87,0,47,0,0,0,119,0,85,0,32,61,50,112,121,61,12,0,1,61,10,0,83,47,61,0,1,61,1,0,84,27,61,0,1,65,1,0,1,60,0,0,135,61,3,0,65,47,27,60,0,14,11,0,0,15,13,0,119,0,72,0,1,61,137,0,45,61,50,61,232,82,0,0,135,61,87,0,19,0,0,0,119,0,66,0,1,61,150,0,45,61,50,61,0,83,0,0,135,61,87,0,19,0,0,0,119,0,60,0,1,61,159,0,45,61,50,61,24,83,0,0,135,61,87,0,19,0,0,0,119,0,54,0,1,61,198,0,45,61,50,61,236,83,0,0,1,61,92,0,83,47,61,0,1,61,1,0,84,27,61,0,1,60,1,0,1,65,0,0,135,61,3,0,60,47,27,65,1,61,10,0,83,47,61,0,1,61,1,0,84,27,61,0,1,65,1,0,1,60,0,0,135,61,3,0,65,47,27,60,1,61,0,0,83,1,61,0,82,61,51,0,121,61,26,0,82,2,46,0,82,61,52,0,25,50,61,4,82,49,2,0,82,60,50,0,109,49,4,60,82,60,50,0,85,60,49,0,1,60,0,0,85,51,60,0,46,60,2,52,216,83,0,0,0,3,2,0,106,2,2,4,25,4,3,8,102,60,4,11,34,60,60,0,121,60,4,0,82,61,4,0,135,60,77,0,61,0,0,0,135,60,77,0,3,0,0,0,53,60,2,52,164,83,0,0,134,60,0,0,4,58,0,0,0,1,0,0,137,53,0,0,139,0,0,0,120,14,3,0,137,53,0,0,139,0,0,0,121,15,20,0,82,2,45,0,25,3,2,4,82,0,2,0,82,61,3,0,109,0,4,61,82,61,3,0,85,61,0,0,82,61,48,0,26,61,61,1,85,48,61,0,25,3,2,8,102,61,3,11,34,61,61,0,121,61,4,0,82,60,3,0,135,61,77,0,60,0,0,0,135,61,77,0,2,0,0,0,1,61,0,0,85,47,61,0,1,60,0,0,109,47,4,60,1,61,0,0,109,47,8,61,135,3,55,0,1,0,0,0,48,61,58,3,120,84,0,0,135,61,87,0,47,0,0,0,35,61,3,11,121,61,8,0,107,47,11,3,120,3,3,0,0,2,47,0,119,0,14,0,0,2,47,0,1,50,230,0,119,0,11,0,25,61,3,16,38,61,61,240,0,50,61,0,135,2,79,0,50,0,0,0,85,47,2,0,20,60,50,59,109,47,8,60,109,47,4,3,1,50,230,0,1,60,230,0,45,60,50,60,216,84,0,0,135,60,80,0,2,1,3,0,1,61,0,0,95,2,3,61,1,61,20,0,135,1,79,0,61,0,0,0,1,61,0,0,85,1,61,0,25,60,1,8,135,61,81,0,60,47,0,0,85,1,49,0,82,50,45,0,109,1,4,50,85,50,1,0,85,45,1,0,82,61,48,0,25,61,61,1,85,48,61,0,102,61,47,11,34,61,61,0,121,61,4,0,82,60,47,0,135,61,77,0,60,0,0,0,82,61,51,0,120,61,3,0,137,53,0,0,139,0,0,0,82,2,46,0,82,61,52,0,25,1,61,4,82,50,2,0,82,60,1,0,109,50,4,60,82,60,1,0,85,60,50,0,1,60,0,0,85,51,60,0,45,60,2,52,128,85,0,0,137,53,0,0,139,0,0,0,0,3,2,0,106,2,2,4,25,4,3,8,102,60,4,11,34,60,60,0,121,60,4,0,82,61,4,0,135,60,77,0,61,0,0,0,135,60,77,0,3,0,0,0,53,60,2,52,128,85,0,0,137,53,0,0,139,0,0,0,140,1,30,0,0,0,0,0,2,20,0,0,96,31,13,0,2,21,0,0,255,0,0,0,2,22,0,0,97,31,13,0,1,18,0,0,136,23,0,0,0,19,23,0,136,23,0,0,1,24,240,0,3,23,23,24,137,23,0,0,1,23,200,0,3,11,19,23,1,23,144,0,3,17,19,23,1,23,136,0,3,10,19,23,1,23,128,0,3,7,19,23,25,6,19,120,0,13,19,0,1,23,216,0,3,14,19,23,1,23,204,0,3,15,19,23,25,16,19,104,1,24,176,3,1,25,0,0,135,23,88,0,0,24,25,0,2,23,0,0,17,125,52,0,1,25,0,0,83,23,25,0,2,25,0,0,18,125,52,0,1,23,0,0,83,25,23,0,2,23,0,0,20,125,52,0,1,25,1,0,83,23,25,0,2,25,0,0,19,125,52,0,1,23,1,0,83,25,23,0,2,23,0,0,93,125,52,0,1,25,0,0,83,23,25,0,2,25,0,0,94,125,52,0,1,23,0,0,83,25,23,0,25,1,13,11,1,23,10,0,83,1,23,0,0,2,13,0,2,3,0,0,44,3,4,0,25,4,2,10,78,23,3,0,83,2,23,0,25,2,2,1,25,3,3,1,54,23,2,4,192,86,0,0,1,25,0,0,107,13,10,25,2,25,0,0,92,125,52,0,135,23,89,0,0,13,0,0,38,23,23,1,83,25,23,0,78,23,1,0,34,23,23,0,121,23,4,0,82,25,13,0,135,23,77,0,25,0,0,0,1,23,16,0,135,1,79,0,23,0,0,0,85,13,1,0,2,25,0,0,16,0,0,128,109,13,8,25,1,23,11,0,109,13,4,23,0,2,1,0,2,3,0,0,196,6,4,0,25,4,2,11,78,23,3,0,83,2,23,0,25,2,2,1,25,3,3,1,54,23,2,4,68,87,0,0,1,25,0,0,107,1,11,25,2,25,0,0,72,125,52,0,135,23,89,0,0,13,0,0,38,23,23,1,83,25,23,0,102,23,13,11,34,23,23,0,121,23,4,0,82,25,13,0,135,23,77,0,25,0,0,0,1,23,0,0,85,13,23,0,1,25,0,0,109,13,4,25,1,23,0,0,109,13,8,23,25,12,13,11,1,23,8,0,83,12,23,0,0,1,13,0,2,23,0,0,112,114,105,111,85,1,23,0,2,25,0,0,114,105,116,121,109,1,4,25,1,23,0,0,107,13,8,23,135,1,90,0,0,13,0,0,78,23,12,0,34,23,23,0,121,23,4,0,82,25,13,0,135,23,77,0,25,0,0,0,25,3,1,100,82,2,3,0,1,23,0,0,85,13,23,0,1,25,0,0,109,13,4,25,1,23,0,0,109,13,8,23,25,4,13,11,1,23,6,0,83,4,23,0,2,23,0,0,169,7,4,0,78,23,23,0,83,13,23,0,2,25,0,0,170,7,4,0,78,25,25,0,107,13,1,25,2,23,0,0,171,7,4,0,78,23,23,0,107,13,2,23,2,25,0,0,172,7,4,0,78,25,25,0,107,13,3,25,2,23,0,0,173,7,4,0,78,23,23,0,107,13,4,23,2,25,0,0,174,7,4,0,78,25,25,0,107,13,5,25,1,23,0,0,107,13,6,23,135,2,91,0,2,13,0,0,1,23,0,0,85,14,23,0,1,25,0,0,109,14,4,25,1,23,0,0,109,14,8,23,135,5,55,0,2,0,0,0,1,23,239,255,48,23,23,5,204,88,0,0,135,23,87,0,14,0,0,0,35,23,5,11,121,23,8,0,107,14,11,5,120,5,3,0,0,1,14,0,119,0,16,0,0,1,14,0,1,18,12,0,119,0,13,0,25,23,5,16,38,23,23,240,0,18,23,0,135,1,79,0,18,0,0,0,85,14,1,0,2,25,0,0,0,0,0,128,20,25,18,25,109,14,8,25,109,14,4,5,1,18,12,0,32,25,18,12,121,25,3,0,135,25,80,0,1,2,5,0,1,23,0,0,95,1,5,23,78,23,4,0,34,23,23,0,121,23,4,0,82,25,13,0,135,23,77,0,25,0,0,0,82,2,3,0,1,23,0,0,85,13,23,0,1,25,0,0,109,13,4,25,1,23,0,0,109,13,8,23,25,3,13,11,1,23,8,0,83,3,23,0,0,4,13,0,2,23,0,0,105,110,97,99,85,4,23,0,2,25,0,0,116,105,118,101,109,4,4,25,1,23,0,0,107,13,8,23,135,2,91,0,2,13,0,0,1,23,0,0,85,15,23,0,1,25,0,0,109,15,4,25,1,23,0,0,109,15,8,23,135,4,55,0,2,0,0,0,1,23,239,255,48,23,23,4,216,89,0,0,135,23,87,0,15,0,0,0,35,23,4,11,121,23,8,0,107,15,11,4,120,4,3,0,0,1,15,0,119,0,16,0,0,1,15,0,1,18,20,0,119,0,13,0,25,23,4,16,38,23,23,240,0,18,23,0,135,1,79,0,18,0,0,0,85,15,1,0,2,25,0,0,0,0,0,128,20,25,18,25,109,15,8,25,109,15,4,4,1,18,20,0,32,25,18,20,121,25,3,0,135,25,80,0,1,2,4,0,1,23,0,0,95,1,4,23,78,23,3,0,34,23,23,0,121,23,4,0,82,25,13,0,135,23,77,0,25,0,0,0,25,12,14,11,78,3,12,0,25,4,14,4,82,1,4,0,19,23,3,21,0,2,23,0,41,25,3,24,42,25,25,24,34,25,25,0,125,23,25,1,2,0,0,0,32,23,23,6,121,23,21,0,1,25,0,0,1,24,255,255,2,26,0,0,48,8,4,0,1,27,6,0,135,23,92,0,14,25,24,26,27,0,0,0,120,23,6,0,2,23,0,0,104,125,52,0,1,27,1,0,85,23,27,0,119,0,8,0,78,3,12,0,19,27,3,21,0,2,27,0,82,1,4,0,1,18,27,0,119,0,2,0,1,18,27,0,32,27,18,27,121,27,99,0,41,23,3,24,42,23,23,24,34,23,23,0,125,27,23,1,2,0,0,0,32,27,27,5,121,27,20,0,1,23,0,0,1,26,255,255,2,24,0,0,55,8,4,0,1,25,5,0,135,27,92,0,14,23,26,24,25,0,0,0,120,27,6,0,2,27,0,0,104,125,52,0,1,25,2,0,85,27,25,0,119,0,78,0,78,3,12,0,19,25,3,21,0,2,25,0,82,1,4,0,119,0,1,0,41,27,3,24,42,27,27,24,34,27,27,0,125,25,27,1,2,0,0,0,32,25,25,6,121,25,20,0,1,27,0,0,1,24,255,255,2,26,0,0,183,7,4,0,1,23,6,0,135,25,92,0,14,27,24,26,23,0,0,0,120,25,6,0,2,25,0,0,104,125,52,0,1,23,3,0,85,25,23,0,119,0,52,0,78,3,12,0,19,23,3,21,0,2,23,0,82,1,4,0,119,0,1,0,41,25,3,24,42,25,25,24,34,25,25,0,125,23,25,1,2,0,0,0,32,23,23,6,121,23,20,0,1,25,0,0,1,26,255,255,2,24,0,0,176,7,4,0,1,27,6,0,135,23,92,0,14,25,26,24,27,0,0,0,120,23,6,0,2,23,0,0,104,125,52,0,1,27,4,0,85,23,27,0,119,0,26,0,78,3,12,0,19,27,3,21,0,2,27,0,82,1,4,0,119,0,1,0,41,23,3,24,42,23,23,24,34,23,23,0,125,27,23,1,2,0,0,0,32,27,27,7,121,27,14,0,1,23,0,0,1,24,255,255,2,26,0,0,61,8,4,0,1,25,7,0,135,27,92,0,14,23,24,26,25,0,0,0,120,27,5,0,2,27,0,0,104,125,52,0,1,25,5,0,85,27,25,0,25,9,15,11,78,3,9,0,25,4,15,4,82,1,4,0,19,25,3,21,0,2,25,0,41,27,3,24,42,27,27,24,34,27,27,0,125,25,27,1,2,0,0,0,32,25,25,6,121,25,21,0,1,27,0,0,1,26,255,255,2,24,0,0,48,8,4,0,1,23,6,0,135,25,92,0,15,27,26,24,23,0,0,0,120,25,6,0,2,25,0,0,108,125,52,0,1,23,1,0,85,25,23,0,119,0,8,0,78,3,9,0,19,23,3,21,0,2,23,0,82,1,4,0,1,18,46,0,119,0,2,0,1,18,46,0,32,23,18,46,121,23,125,0,41,25,3,24,42,25,25,24,34,25,25,0,125,23,25,1,2,0,0,0,32,23,23,5,121,23,20,0,1,25,0,0,1,24,255,255,2,26,0,0,55,8,4,0,1,27,5,0,135,23,92,0,15,25,24,26,27,0,0,0,120,23,6,0,2,23,0,0,108,125,52,0,1,27,2,0,85,23,27,0,119,0,104,0,78,3,9,0,19,27,3,21,0,2,27,0,82,1,4,0,119,0,1,0,41,23,3,24,42,23,23,24,34,23,23,0,125,27,23,1,2,0,0,0,32,27,27,6,121,27,20,0,1,23,0,0,1,26,255,255,2,24,0,0,183,7,4,0,1,25,6,0,135,27,92,0,15,23,26,24,25,0,0,0,120,27,6,0,2,27,0,0,108,125,52,0,1,25,3,0,85,27,25,0,119,0,78,0,78,3,9,0,19,25,3,21,0,2,25,0,82,1,4,0,119,0,1,0,41,27,3,24,42,27,27,24,34,27,27,0,125,25,27,1,2,0,0,0,32,25,25,6,121,25,20,0,1,27,0,0,1,24,255,255,2,26,0,0,176,7,4,0,1,23,6,0,135,25,92,0,15,27,24,26,23,0,0,0,120,25,6,0,2,25,0,0,108,125,52,0,1,23,4,0,85,25,23,0,119,0,52,0,78,3,9,0,19,23,3,21,0,2,23,0,82,1,4,0,119,0,1,0,41,25,3,24,42,25,25,24,34,25,25,0,125,23,25,1,2,0,0,0,32,23,23,7,121,23,20,0,1,25,0,0,1,26,255,255,2,24,0,0,61,8,4,0,1,27,7,0,135,23,92,0,15,25,26,24,27,0,0,0,120,23,6,0,2,23,0,0,108,125,52,0,1,27,5,0,85,23,27,0,119,0,26,0,78,3,9,0,19,27,3,21,0,2,27,0,82,1,4,0,119,0,1,0,41,23,3,24,42,23,23,24,34,23,23,0,125,27,23,1,2,0,0,0,32,27,27,5,121,27,14,0,1,23,0,0,1,24,255,255,2,26,0,0,81,22,4,0,1,25,5,0,135,27,92,0,15,23,24,26,25,0,0,0,120,27,5,0,2,27,0,0,108,125,52,0,1,25,0,0,85,27,25,0,2,25,0,0,163,125,52,0,1,27,0,0,83,25,27,0,2,27,0,0,150,202,203,1,1,25,0,0,83,27,25,0,2,25,0,0,162,125,52,0,1,27,0,0,83,25,27,0,2,27,0,0,80,125,52,0,1,25,0,0,83,27,25,0,1,25,0,0,85,13,25,0,1,27,0,0,109,13,4,27,1,25,0,0,109,13,8,25,1,25,16,0,135,1,79,0,25,0,0,0,85,13,1,0,2,27,0,0,16,0,0,128,109,13,8,27,1,25,14,0,109,13,4,25,0,2,1,0,2,3,0,0,22,4,4,0,25,4,2,14,78,25,3,0,83,2,25,0,25,2,2,1,25,3,3,1,54,25,2,4,128,95,0,0,1,27,0,0,107,1,14,27,135,1,91,0,0,13,0,0,102,27,13,11,34,27,27,0,121,27,4,0,82,25,13,0,135,27,77,0,25,0,0,0,2,27,0,0,76,125,52,0,1,25,0,0,84,27,25,0,2,25,0,0,78,125,52,0,1,27,0,0,84,25,27,0,121,1,43,0,78,27,1,0,121,27,41,0,1,25,99,0,135,27,93,0,13,1,25,0,1,25,0,0,107,13,99,25,135,1,94,0,13,0,0,0,2,27,0,0,70,5,4,0,135,25,86,0,1,27,0,0,121,25,29,0,2,25,0,0,80,125,52,0,1,27,1,0,83,25,27,0,2,25,0,0,94,8,4,0,135,27,86,0,1,25,0,0,121,27,20,0,1,27,120,0,135,1,95,0,1,27,0,0,121,1,16,0,78,27,1,0,121,27,14,0,1,27,0,0,83,1,27,0,2,27,0,0,78,125,52,0,25,26,1,1,135,25,96,0,26,0,0,0,84,27,25,0,2,25,0,0,76,125,52,0,135,27,96,0,13,0,0,0,84,25,27,0,2,27,0,0,82,125,52,0,1,25,0,0,84,27,25,0,2,25,0,0,84,125,52,0,1,27,0,0,84,25,27,0,1,27,0,0,85,13,27,0,1,25,0,0,109,13,4,25,1,27,0,0,109,13,8,27,1,27,32,0,135,1,79,0,27,0,0,0,85,13,1,0,2,25,0,0,32,0,0,128,109,13,8,25,1,27,16,0,109,13,4,27,0,2,1,0,2,3,0,0,53,5,4,0,25,4,2,16,78,27,3,0,83,2,27,0,25,2,2,1,25,3,3,1,54,27,2,4,248,96,0,0,1,25,0,0,107,1,16,25,135,1,91,0,0,13,0,0,102,25,13,11,34,25,25,0,121,25,4,0,82,27,13,0,135,25,77,0,27,0,0,0,121,1,35,0,78,25,1,0,121,25,33,0,1,27,99,0,135,25,93,0,13,1,27,0,1,27,0,0,107,13,99,27,135,1,94,0,13,0,0,0,2,25,0,0,70,5,4,0,135,27,86,0,1,25,0,0,121,27,21,0,1,27,120,0,135,1,95,0,1,27,0,0,121,1,17,0,78,27,1,0,120,27,2,0,119,0,14,0,1,27,0,0,83,1,27,0,2,27,0,0,84,125,52,0,25,26,1,1,135,25,96,0,26,0,0,0,84,27,25,0,2,25,0,0,82,125,52,0,135,27,96,0,13,0,0,0,84,25,27,0,1,27,0,0,85,13,27,0,1,25,0,0,109,13,4,25,1,27,0,0,109,13,8,27,25,8,13,11,1,27,5,0,83,8,27,0,2,27,0,0,121,3,4,0,78,27,27,0,83,13,27,0,2,25,0,0,122,3,4,0,78,25,25,0,107,13,1,25,2,27,0,0,123,3,4,0,78,27,27,0,107,13,2,27,2,25,0,0,124,3,4,0,78,25,25,0,107,13,3,25,2,27,0,0,125,3,4,0,78,27,27,0,107,13,4,27,1,25,0,0,107,13,5,25,2,25,0,0,95,125,52,0,135,27,89,0,0,13,0,0,38,27,27,1,83,25,27,0,78,27,8,0,34,27,27,0,121,27,4,0,82,25,13,0,135,27,77,0,25,0,0,0,1,25,0,0,109,13,8,25,25,8,13,11,1,25,7,0,83,8,25,0,2,25,0,0,102,8,4,0,78,25,25,0,83,13,25,0,2,27,0,0,103,8,4,0,78,27,27,0,107,13,1,27,2,25,0,0,104,8,4,0,78,25,25,0,107,13,2,25,2,27,0,0,105,8,4,0,78,27,27,0,107,13,3,27,2,25,0,0,106,8,4,0,78,25,25,0,107,13,4,25,2,27,0,0,107,8,4,0,78,27,27,0,107,13,5,27,2,25,0,0,108,8,4,0,78,25,25,0,107,13,6,25,1,27,0,0,107,13,7,27,135,1,97,0,0,13,0,0,2,27,0,0,144,125,52,0,85,27,1,0,78,27,8,0,34,27,27,0,121,27,7,0,82,25,13,0,135,27,77,0,25,0,0,0,2,27,0,0,144,125,52,0,82,1,27,0,34,27,1,0,121,27,3,0,1,18,90,0,119,0,5,0,135,27,98,0,49,27,27,1,84,99,0,0,1,18,90,0,32,27,18,90,121,27,9,0,2,27,0,0,144,125,52,0,1,25,0,0,85,27,25,0,2,27,0,0,110,8,4,0,135,25,34,0,27,6,0,0,2,25,0,0,80,125,52,0,78,25,25,0,120,25,6,0,2,25,0,0,81,125,52,0,1,27,0,0,83,25,27,0,119,0,33,0,2,27,0,0,76,125,52,0,80,27,27,0,120,27,6,0,2,27,0,0,81,125,52,0,1,25,1,0,83,27,25,0,119,0,11,0,2,25,0,0,78,125,52,0,80,25,25,0,32,8,25,0,2,25,0,0,81,125,52,0,38,27,8,1,83,25,27,0,120,8,2,0,119,0,14,0,2,25,0,0,144,125,52,0,82,25,25,0,135,27,99,0,25,13,0,0,2,27,0,0,76,125,52,0,106,25,13,8,84,27,25,0,2,25,0,0,78,125,52,0,106,27,13,12,84,25,27,0,1,27,0,0,85,13,27,0,1,25,0,0,109,13,4,25,1,27,0,0,109,13,8,27,25,8,13,11,1,27,8,0,83,8,27,0,0,1,13,0,2,27,0,0,97,117,116,111,85,1,27,0,2,25,0,0,108,111,99,107,109,1,4,25,1,27,0,0,107,13,8,27,135,27,89,0,0,13,0,0,38,27,27,1,0,1,27,0,2,27,0,0,161,125,52,0,83,27,1,0,78,27,8,0,34,27,27,0,121,27,7,0,82,25,13,0,135,27,77,0,25,0,0,0,2,27,0,0,161,125,52,0,78,1,27,0,41,27,1,24,42,27,27,24,120,27,4,0,1,25,0,0,135,27,100,0,25,0,0,0,2,27,0,0,160,125,52,0,1,25,0,0,83,27,25,0,1,25,0,0,85,13,25,0,1,27,0,0,109,13,4,27,1,25,0,0,109,13,8,25,1,25,16,0,135,1,79,0,25,0,0,0,85,13,1,0,2,27,0,0,16,0,0,128,109,13,8,27,1,25,11,0,109,13,4,25,0,2,1,0,2,3,0,0,165,6,4,0,25,4,2,11,78,25,3,0,83,2,25,0,25,2,2,1,25,3,3,1,54,25,2,4,28,101,0,0,1,27,0,0,107,1,11,27,2,27,0,0,164,125,52,0,135,25,97,0,0,13,0,0,85,27,25,0,102,25,13,11,34,25,25,0,121,25,4,0,82,27,13,0,135,25,77,0,27,0,0,0,1,25,0,0,85,16,25,0,1,27,0,0,109,16,4,27,1,25,0,0,109,16,8,25,25,3,16,11,1,25,6,0,83,3,25,0,2,25,0,0,186,5,4,0,78,25,25,0,83,16,25,0,2,27,0,0,187,5,4,0,78,27,27,0,107,16,1,27,2,25,0,0,188,5,4,0,78,25,25,0,107,16,2,25,2,27,0,0,189,5,4,0,78,27,27,0,107,16,3,27,2,25,0,0,190,5,4,0,78,25,25,0,107,16,4,25,2,27,0,0,191,5,4,0,78,27,27,0,107,16,5,27,1,25,0,0,107,16,6,25,135,2,91,0,0,16,0,0,1,25,0,0,85,13,25,0,1,27,0,0,109,13,4,27,1,25,0,0,109,13,8,25,135,4,55,0,2,0,0,0,1,25,239,255,48,25,25,4,48,102,0,0,135,25,87,0,13,0,0,0,35,25,4,11,121,25,8,0,107,13,11,4,120,4,3,0,0,1,13,0,119,0,16,0,0,1,13,0,1,18,108,0,119,0,13,0,25,25,4,16,38,25,25,240,0,18,25,0,135,1,79,0,18,0,0,0,85,13,1,0,2,27,0,0,0,0,0,128,20,27,18,27,109,13,8,27,109,13,4,4,1,18,108,0,32,27,18,108,121,27,3,0,135,27,80,0,1,2,4,0,1,25,0,0,95,1,4,25,78,25,3,0,34,25,25,0,121,25,4,0,82,27,16,0,135,25,77,0,27,0,0,0,2,25,0,0,92,125,52,0,78,25,25,0,121,25,2,0,135,25,101,0,25,8,13,11,78,1,8,0,25,4,13,4,82,3,4,0,19,25,1,21,0,2,25,0,41,27,1,24,42,27,27,24,34,27,27,0,125,25,27,3,2,0,0,0,32,25,25,7,121,25,21,0,1,27,0,0,1,26,255,255,2,24,0,0,11,102,4,0,1,23,7,0,135,25,92,0,13,27,26,24,23,0,0,0,120,25,6,0,2,25,0,0,100,125,52,0,1,23,0,0,85,25,23,0,119,0,8,0,78,1,8,0,19,23,1,21,0,2,23,0,82,3,4,0,1,18,117,0,119,0,2,0,1,18,117,0,32,23,18,117,121,23,79,0,41,25,1,24,42,25,25,24,34,25,25,0,125,23,25,3,2,0,0,0,32,23,23,7,121,23,26,0,1,25,0,0,1,24,255,255,2,26,0,0,76,8,4,0,1,27,7,0,135,23,92,0,13,25,24,26,27,0,0,0,120,23,12,0,2,23,0,0,100,125,52,0,1,27,1,0,85,23,27,0,2,23,0,0,157,101,4,0,2,26,0,0,164,8,4,0,135,27,102,0,23,26,0,0,119,0,52,0,78,1,8,0,19,27,1,21,0,2,27,0,82,3,4,0,119,0,1,0,41,26,1,24,42,26,26,24,34,26,26,0,125,27,26,3,2,0,0,0,32,27,27,9,121,27,23,0,1,26,0,0,1,23,255,255,2,24,0,0,84,8,4,0,1,25,9,0,135,27,92,0,13,26,23,24,25,0,0,0,120,27,12,0,2,27,0,0,100,125,52,0,1,25,1,0,85,27,25,0,2,27,0,0,157,101,4,0,2,24,0,0,182,101,4,0,135,25,102,0,27,24,0,0,119,0,20,0,78,1,8,0,119,0,1,0,41,24,1,24,42,24,24,24,34,24,24,0,121,24,4,0,82,24,13,0,0,25,24,0,119,0,2,0,0,25,13,0,85,7,25,0,2,24,0,0,171,8,4,0,135,25,34,0,24,7,0,0,2,25,0,0,100,125,52,0,1,24,0,0,85,25,24,0,2,24,0,0,148,125,52,0,1,25,0,0,85,24,25,0,2,25,0,0,152,125,52,0,1,24,0,0,85,25,24,0,2,24,0,0,132,125,52,0,1,25,0,0,85,24,25,0,2,25,0,0,136,125,52,0,1,24,0,0,85,25,24,0,1,24,0,0,85,16,24,0,1,25,0,0,109,16,4,25,1,24,0,0,109,16,8,24,25,7,16,11,1,24,8,0,83,7,24,0,0,6,16,0,2,24,0,0,114,101,110,100,85,6,24,0,2,25,0,0,101,114,101,114,109,6,4,25,1,24,0,0,107,16,8,24,2,24,0,0,140,125,52,0,135,25,91,0,0,16,0,0,85,24,25,0,78,25,7,0,34,25,25,0,121,25,4,0,82,24,16,0,135,25,77,0,24,0,0,0,1,24,128,2,1,27,144,1,1,23,0,0,1,26,0,0,135,25,103,0,24,27,23,26,120,25,7,0,135,25,104,0,85,10,25,0,2,26,0,0,232,8,4,0,135,25,7,0,26,10,0,0,2,25,0,0,128,125,52,0,2,23,0,0,132,125,52,0,82,23,23,0,135,26,105,0,23,0,0,0,85,25,26,0,1,25,0,0,109,16,4,25,1,25,0,0,85,16,25,0,1,26,128,2,109,16,8,26,1,25,144,1,109,16,12,25,2,25,0,0,132,125,52,0,82,25,25,0,135,1,106,0,25,0,0,0,2,25,0,0,88,125,52,0,85,25,1,0,135,25,107,0,1,0,0,0,85,17,25,0,2,26,0,0,7,9,4,0,135,25,34,0,26,17,0,0,2,25,0,0,88,125,52,0,82,1,25,0,32,25,1,0,2,26,0,0,0,0,0,240,19,26,1,26,2,23,0,0,0,0,0,16,13,26,26,23,20,25,25,26,121,25,13,0,2,25,0,0,86,125,52,0,41,26,1,3,83,25,26,0,38,26,1,31,33,26,26,3,120,26,48,0,2,25,0,0,43,9,4,0,135,26,34,0,25,11,0,0,119,0,43,0,2,26,0,0,89,86,89,85,47,26,1,26,136,106,0,0,2,26,0,0,89,85,89,50,1,25,1,0,138,1,26,25,128,106,0,0,1,1,8,0,119,0,25,0,1,18,132,0,119,0,23,0,2,26,0,0,85,89,86,89,47,26,1,26,188,106,0,0,2,26,0,0,89,86,89,85,1,25,1,0,138,1,26,25,180,106,0,0,1,1,8,0,119,0,12,0,1,18,132,0,119,0,10,0,2,26,0,0,85,89,86,89,1,25,1,0,138,1,26,25,216,106,0,0,1,1,8,0,119,0,3,0,1,18,132,0,119,0,1,0,1,26,132,0,45,26,18,26,240,106,0,0,1,1,16,0,2,26,0,0,86,125,52,0,83,26,1,0,2,26,0,0,18,125,52,0,78,26,26,0,32,26,26,0,2,25,0,0,19,125,52,0,78,25,25,0,32,25,25,0,20,26,26,25,120,26,36,0,2,26,0,0,18,125,52,0,1,25,0,0,83,26,25,0,2,25,0,0,96,125,52,0,82,25,25,0,33,25,25,1,120,25,27,0,2,26,0,0,148,125,52,0,82,26,26,0,135,25,108,0,26,0,0,0,2,26,0,0,136,125,52,0,82,26,26,0,135,25,109,0,26,0,0,0,2,26,0,0,136,125,52,0,82,26,26,0,2,23,0,0,148,125,52,0,82,23,23,0,1,27,0,0,2,24,0,0,112,125,52,0,135,25,110,0,26,23,27,24,2,24,0,0,136,125,52,0,82,24,24,0,135,25,111,0,24,0,0,0,2,25,0,0,17,125,52,0,1,24,0,0,83,25,24,0,2,25,0,0,132,125,52,0,82,25,25,0,2,27,0,0,108,9,4,0,135,24,112,0,25,27,0,0,78,3,8,0,82,1,4,0,19,24,3,21,0,2,24,0,41,27,3,24,42,27,27,24,34,27,27,0,125,24,27,1,2,0,0,0,32,24,24,7,121,24,17,0,1,27,0,0,1,25,255,255,2,23,0,0,76,8,4,0,1,26,7,0,135,24,92,0,13,27,25,23,26,0,0,0,120,24,2,0,119,0,8,0,78,3,8,0,19,24,3,21,0,2,24,0,82,1,4,0,1,18,142,0,119,0,2,0,1,18,142,0,1,24,142,0,45,24,18,24,48,112,0,0,41,26,3,24,42,26,26,24,34,26,26,0,125,24,26,1,2,0,0,0,32,24,24,9,121,24,11,0,1,26,0,0,1,23,255,255,2,25,0,0,84,8,4,0,1,27,9,0,135,24,92,0,13,26,23,25,27,0,0,0,120,24,2,0,119,0,230,0,1,24,0,0,1,27,128,2,1,25,144,1,1,23,32,0,2,26,0,0,0,255,0,0,2,28,0,0,0,0,255,0,1,29,0,0,135,0,113,0,24,27,25,23,21,26,28,29,120,0,2,0,119,0,216,0,1,28,1,0,135,29,114,0,0,28,0,0,1,28,0,0,106,23,0,4,1,25,0,0,1,27,0,0,1,24,0,0,135,26,115,0,23,25,27,24,135,29,116,0,0,28,26,0,82,29,0,0,38,29,29,2,121,29,8,0,135,29,117,0,0,0,0,0,120,29,2,0,119,0,4,0,135,29,118,0,0,0,0,0,119,0,194,0,2,29,0,0,0,184,11,0,135,7,119,0,29,0,0,0,2,1,0,0,180,24,3,0,1,6,0,0,0,2,7,0,25,4,1,1,79,3,1,0,1,29,128,0,19,29,3,29,120,29,7,0,27,11,3,3,135,29,80,0,2,4,11,0,3,1,4,11,3,2,11,6,119,0,21,0,27,5,3,3,1,29,128,0,4,2,3,29,0,3,6,0,3,11,7,3,78,29,4,0,83,11,29,0,102,26,4,1,107,11,1,26,102,29,4,2,107,11,2,29,26,2,2,1,120,2,2,0,119,0,3,0,25,3,3,3,119,0,245,255,25,1,1,4,1,29,128,1,4,29,6,29,3,2,29,5,2,29,0,0,0,184,11,0,47,29,2,29,228,109,0,0,0,6,2,0,3,2,7,2,119,0,219,255,119,0,1,0,25,5,0,16,106,4,0,20,1,3,0,0,1,29,128,7,5,29,3,29,3,6,7,29,1,1,0,0,82,26,5,0,5,29,26,3,3,2,4,29,27,11,1,3,25,29,11,1,91,29,6,29,41,29,29,8,91,26,6,11,20,29,29,26,25,26,11,2,91,26,6,26,41,26,26,16,20,29,29,26,85,2,29,0,25,1,1,1,1,29,128,2,52,29,1,29,84,110,0,0,25,2,2,4,119,0,240,255,25,3,3,1,1,29,144,1,53,29,3,29,244,109,0,0,82,29,0,0,38,29,29,2,121,29,3,0,135,29,120,0,0,0,0,0,135,2,121,0,1,1,0,0,135,29,122,0,17,0,0,0,120,29,2,0,119,0,8,0,82,29,17,0,1,26,0,1,45,29,29,26,168,110,0,0,1,18,171,0,119,0,78,0,119,0,246,255,1,26,1,0,135,29,123,0,26,0,0,0,120,1,28,0,2,29,0,0,128,125,52,0,82,11,29,0,1,26,0,0,106,24,11,4,1,27,0,0,1,25,0,0,1,23,0,0,135,28,115,0,24,27,25,23,135,29,116,0,11,26,28,0,1,28,255,255,135,29,124,0,0,28,0,0,1,28,0,0,2,26,0,0,128,125,52,0,82,26,26,0,135,29,125,0,0,28,26,16,2,26,0,0,132,125,52,0,82,26,26,0,135,29,126,0,26,0,0,0,119,0,41,0,1,29,243,1,48,29,29,1,176,111,0,0,2,29,0,0,128,125,52,0,82,11,29,0,1,26,0,0,106,23,11,4,1,25,0,0,1,27,0,0,1,24,0,0,135,28,115,0,23,25,27,24,135,29,116,0,11,26,28,0,1,28,87,2,4,28,28,1,5,28,28,21,29,28,28,99,19,28,28,21,135,29,124,0,0,28,0,0,1,28,0,0,2,26,0,0,128,125,52,0,82,26,26,0,135,29,125,0,0,28,26,16,2,26,0,0,132,125,52,0,82,26,26,0,135,29,126,0,26,0,0,0,119,0,7,0,2,26,0,0,132,125,52,0,82,26,26,0,135,29,126,0,26,0,0,0,119,0,1,0,135,29,121,0,4,1,29,2,1,29,88,2,55,29,1,29,128,110,0,0,2,29,0,0,128,125,52,0,82,18,29,0,1,26,0,0,106,24,18,4,1,27,0,0,1,25,0,0,1,23,0,0,135,28,115,0,24,27,25,23,135,29,116,0,18,26,28,0,2,28,0,0,132,125,52,0,82,28,28,0,135,29,126,0,28,0,0,0,135,29,118,0,0,0,0,0,135,29,127,0,7,0,0,0,1,28,177,3,1,26,8,0,1,23,1,0,2,25,0,0,115,9,4,0,2,27,0,0,124,9,4,0,135,29,128,0,28,26,23,25,27,0,0,0,1,27,178,3,1,25,9,0,1,23,1,0,2,26,0,0,133,9,4,0,2,28,0,0,142,9,4,0,135,29,128,0,27,25,23,26,28,0,0,0,1,28,179,3,1,26,12,0,1,23,2,0,2,25,0,0,152,9,4,0,2,27,0,0,160,9,4,0,135,29,128,0,28,26,23,25,27,0,0,0,1,27,180,3,1,25,17,0,1,23,3,0,2,26,0,0,171,9,4,0,2,28,0,0,179,9,4,0,135,29,128,0,27,25,23,26,28,0,0,0,1,28,181,3,1,26,16,0,1,23,2,0,2,25,0,0,81,22,4,0,2,27,0,0,187,9,4,0,135,29,128,0,28,26,23,25,27,0,0,0,78,29,8,0,34,29,29,0,121,29,4,0,82,27,13,0,135,29,77,0,27,0,0,0,78,29,9,0,34,29,29,0,121,29,4,0,82,27,15,0,135,29,77,0,27,0,0,0,1,29,0,0,78,27,12,0,49,29,29,27,64,113,0,0,137,19,0,0,139,0,0,0,82,27,14,0,135,29,77,0,27,0,0,0,137,19,0,0,139,0,0,0,140,2,35,0,0,0,0,0,2,28,0,0,62,51,13,0,2,29,0,0,255,0,0,0,1,25,0,0,136,30,0,0,0,27,30,0,136,30,0,0,1,31,112,1,3,30,30,31,137,30,0,0,1,30,152,0,3,20,27,30,1,30,144,0,3,19,27,30,1,30,136,0,3,15,27,30,1,30,128,0,3,14,27,30,25,13,27,120,25,18,27,104,25,22,27,88,25,21,27,72,25,12,27,64,25,8,27,56,25,7,27,48,25,10,27,40,25,9,27,32,25,3,27,24,25,2,27,16,1,30,96,1,3,11,27,30,1,30,84,1,3,5,27,30,1,30,8,1,3,6,27,30,0,4,27,0,1,30,216,0,3,26,27,30,1,30,168,0,3,23,27,30,1,30,156,0,3,24,27,30,1,30,252,0,3,16,27,30,1,30,240,0,3,17,27,30,135,30,129,0,26,0,1,0,135,30,130,0,23,26,0,0,2,30,0,0,248,204,52,0,85,30,23,0,134,30,0,0,172,165,0,0,135,30,131,0,1,30,0,0,85,24,30,0,1,31,0,0,109,24,4,31,1,30,0,0,109,24,8,30,2,31,0,0,248,204,52,0,82,31,31,0,82,31,31,0,2,32,0,0,3,10,4,0,1,33,0,0,135,30,132,0,31,32,24,33,121,30,124,0,1,30,0,0,85,11,30,0,1,33,0,0,109,11,4,33,1,30,0,0,109,11,8,30,1,30,0,0,85,5,30,0,1,33,0,0,109,5,4,33,1,30,0,0,109,5,8,30,135,30,133,0,11,0,0,0,135,30,134,0,5,0,0,0,102,1,5,11,41,30,1,24,42,30,30,24,34,0,30,0,121,0,4,0,82,32,5,0,0,33,32,0,119,0,2,0,0,33,5,0,121,0,4,0,106,31,5,4,0,32,31,0,119,0,3,0,19,31,1,29,0,32,31,0,135,30,135,0,11,33,32,0,25,1,11,11,78,32,1,0,34,32,32,0,121,32,4,0,82,32,11,0,0,30,32,0,119,0,2,0,0,30,11,0,2,32,0,0,212,155,4,0,135,0,136,0,30,32,0,0,120,0,30,0,2,30,0,0,248,204,52,0,82,30,30,0,78,31,1,0,34,31,31,0,121,31,4,0,82,31,11,0,0,33,31,0,119,0,2,0,0,33,11,0,135,32,137,0,30,33,0,0,120,32,19,0,78,33,1,0,34,33,33,0,121,33,4,0,82,33,11,0,0,32,33,0,119,0,2,0,0,32,11,0,85,2,32,0,2,33,0,0,13,10,4,0,135,32,138,0,33,2,0,0,1,33,1,0,135,32,139,0,33,0,0,0,119,0,3,0,135,32,140,0,0,0,0,0,1,32,0,0,85,6,32,0,1,33,0,0,109,6,4,33,1,32,0,0,109,6,8,32,25,0,6,11,2,33,0,0,248,204,52,0,82,33,33,0,82,33,33,0,2,30,0,0,3,10,4,0,1,31,1,0,135,32,132,0,33,30,6,31,120,32,2,0,119,0,22,0,78,31,0,0,34,31,31,0,121,31,4,0,82,31,6,0,0,32,31,0,119,0,2,0,0,32,6,0,0,2,32,0,78,31,1,0,34,31,31,0,121,31,4,0,82,31,11,0,0,32,31,0,119,0,2,0,0,32,11,0,85,3,32,0,1,31,0,0,109,3,4,31,135,31,141,0,2,2,3,0,119,0,225,255,2,32,0,0,45,10,4,0,135,31,142,0,32,0,0,0,1,32,1,0,135,31,139,0,32,0,0,0,2,32,0,0,248,204,52,0,82,32,32,0,82,32,32,0,2,30,0,0,97,10,4,0,1,33,1,0,135,31,132,0,32,30,24,33,121,31,237,0,1,31,0,0,85,11,31,0,1,33,0,0,109,11,4,33,1,31,0,0,109,11,8,31,1,31,0,0,85,5,31,0,1,33,0,0,109,5,4,33,1,31,0,0,109,5,8,31,2,31,0,0,248,204,52,0,82,0,31,0,1,31,0,0,85,6,31,0,1,33,0,0,109,6,4,33,1,31,0,0,109,6,8,31,25,3,6,11,1,31,6,0,83,3,31,0,2,31,0,0,111,10,4,0,78,31,31,0,83,6,31,0,2,33,0,0,112,10,4,0,78,33,33,0,107,6,1,33,2,31,0,0,113,10,4,0,78,31,31,0,107,6,2,31,2,33,0,0,114,10,4,0,78,33,33,0,107,6,3,33,2,31,0,0,115,10,4,0,78,31,31,0,107,6,4,31,2,33,0,0,116,10,4,0,78,33,33,0,107,6,5,33,1,31,0,0,107,6,6,31,135,0,143,0,0,6,0,0,78,31,3,0,34,31,31,0,121,31,4,0,82,33,6,0,135,31,77,0,33,0,0,0,120,0,8,0,2,33,0,0,118,10,4,0,135,31,142,0,33,0,0,0,1,33,1,0,135,31,139,0,33,0,0,0,82,31,0,0,82,3,31,0,1,31,0,0,85,4,31,0,1,33,0,0,109,4,4,33,1,31,0,0,109,4,8,31,25,1,4,11,1,31,8,0,83,1,31,0,0,2,4,0,2,31,0,0,99,97,112,116,85,2,31,0,2,33,0,0,117,114,101,115,109,2,4,33,1,31,0,0,107,4,8,31,19,33,3,29,135,31,144,0,33,6,0,4,135,31,145,0,5,6,0,0,102,31,6,11,34,31,31,0,121,31,4,0,82,33,6,0,135,31,77,0,33,0,0,0,78,31,1,0,34,31,31,0,121,31,4,0,82,33,4,0,135,31,77,0,33,0,0,0,25,0,5,11,78,4,0,0,25,1,5,4,41,33,4,24,42,33,33,24,34,33,33,0,121,33,4,0,82,33,1,0,0,31,33,0,119,0,3,0,19,33,4,29,0,31,33,0,32,31,31,14,121,31,17,0,1,33,0,0,1,30,255,255,2,32,0,0,200,73,4,0,1,34,14,0,135,31,92,0,5,33,30,32,34,0,0,0,120,31,8,0,2,34,0,0,118,10,4,0,135,31,142,0,34,0,0,0,1,34,1,0,135,31,139,0,34,0,0,0,135,31,133,0,11,0,0,0,78,0,0,0,41,31,0,24,42,31,31,24,34,4,31,0,121,4,4,0,82,32,5,0,0,34,32,0,119,0,2,0,0,34,5,0,121,4,4,0,82,30,1,0,0,32,30,0,119,0,3,0,19,30,0,29,0,32,30,0,135,31,135,0,11,34,32,0,135,31,146,0,11,0,0,0,25,0,11,11,78,34,0,0,34,34,34,0,121,34,4,0,82,34,11,0,0,32,34,0,119,0,2,0,0,32,11,0,135,31,147,0,32,6,0,0,121,31,16,0,78,3,0,0,41,31,3,24,42,31,31,24,34,3,31,0,82,4,11,0,125,4,3,4,11,0,0,0,85,9,4,0,2,32,0,0,143,10,4,0,135,31,138,0,32,9,0,0,1,32,1,0,135,31,139,0,32,0,0,0,106,31,6,12,1,32,0,64,19,31,31,32,120,31,17,0,78,7,0,0,41,31,7,24,42,31,31,24,34,7,31,0,82,10,11,0,125,10,7,10,11,0,0,0,85,9,10,0,2,32,0,0,143,10,4,0,135,31,138,0,32,9,0,0,1,32,1,0,135,31,139,0,32,0,0,0,119,0,37,0,25,9,24,11,78,32,9,0,34,32,32,0,121,32,4,0,82,32,24,0,0,31,32,0,119,0,2,0,0,31,24,0,0,6,31,0,78,32,0,0,34,32,32,0,121,32,4,0,82,32,11,0,0,31,32,0,119,0,2,0,0,31,11,0,85,10,31,0,1,32,0,0,109,10,4,32],eb+20480);HEAPU8.set([135,32,141,0,6,6,10,0,78,31,9,0,34,31,31,0,121,31,4,0,82,31,24,0,0,32,31,0,119,0,2,0,0,32,24,0,85,7,32,0,2,31,0,0,184,10,4,0,135,32,138,0,31,7,0,0,1,31,1,0,135,32,139,0,31,0,0,0,2,31,0,0,248,204,52,0,82,31,31,0,82,31,31,0,2,34,0,0,211,10,4,0,1,30,0,0,135,32,148,0,31,34,30,0,121,32,2,0,135,32,149,0,2,30,0,0,248,204,52,0,82,30,30,0,82,30,30,0,2,34,0,0,222,10,4,0,1,31,0,0,135,32,148,0,30,34,31,0,121,32,2,0,135,32,149,0,2,31,0,0,248,204,52,0,82,31,31,0,82,31,31,0,2,34,0,0,233,10,4,0,1,30,0,0,135,32,148,0,31,34,30,0,121,32,2,0,135,32,150,0,2,30,0,0,248,204,52,0,82,30,30,0,82,30,30,0,2,34,0,0,246,10,4,0,1,31,0,0,135,32,148,0,30,34,31,0,121,32,2,0,135,32,150,0,2,31,0,0,248,204,52,0,82,31,31,0,82,31,31,0,2,34,0,0,3,11,4,0,1,30,0,0,135,32,148,0,31,34,30,0,121,32,3,0,1,25,35,0,119,0,155,2,2,30,0,0,248,204,52,0,82,30,30,0,82,30,30,0,2,34,0,0,12,11,4,0,1,31,0,0,135,32,148,0,30,34,31,0,121,32,3,0,1,25,35,0,119,0,143,2,2,31,0,0,248,204,52,0,82,31,31,0,82,31,31,0,2,34,0,0,67,12,4,0,1,30,0,0,135,32,148,0,31,34,30,0,121,32,102,0,1,32,0,0,85,11,32,0,1,30,0,0,109,11,4,30,1,32,0,0,109,11,8,32,1,32,0,0,85,5,32,0,1,30,0,0,109,5,4,30,1,32,0,0,109,5,8,32,135,32,133,0,11,0,0,0,135,32,134,0,5,0,0,0,102,0,5,11,41,32,0,24,42,32,32,24,34,1,32,0,121,1,4,0,82,34,5,0,0,30,34,0,119,0,2,0,0,30,5,0,121,1,4,0,106,31,5,4,0,34,31,0,119,0,3,0,19,31,0,29,0,34,31,0,135,32,135,0,11,30,34,0,25,0,11,11,78,34,0,0,34,34,34,0,121,34,4,0,82,34,11,0,0,32,34,0,119,0,2,0,0,32,11,0,2,34,0,0,212,155,4,0,135,1,136,0,32,34,0,0,121,1,15,0,135,34,140,0,1,0,0,0,78,9,0,0,41,34,9,24,42,34,34,24,34,9,34,0,82,10,11,0,125,10,9,10,11,0,0,0,135,34,142,0,10,0,0,0,1,32,0,0,135,34,139,0,32,0,0,0,2,32,0,0,248,204,52,0,82,32,32,0,78,31,0,0,34,31,31,0,121,31,4,0,82,31,11,0,0,30,31,0,119,0,2,0,0,30,11,0,135,34,137,0,32,30,0,0,121,34,14,0,78,10,0,0,41,34,10,24,42,34,34,24,34,10,34,0,82,12,11,0,125,12,10,12,11,0,0,0,135,34,142,0,12,0,0,0,1,30,0,0,135,34,139,0,30,0,0,0,119,0,16,0,78,30,0,0,34,30,30,0,121,30,4,0,82,30,11,0,0,34,30,0,119,0,2,0,0,34,11,0,85,12,34,0,2,30,0,0,78,12,4,0,135,34,138,0,30,12,0,0,1,30,1,0,135,34,139,0,30,0,0,0,1,30,0,0,135,34,151,0,30,0,0,0,1,30,0,0,1,32,0,0,1,31,1,0,1,33,99,0,135,34,152,0,30,32,31,33,120,34,5,0,2,34,0,0,151,202,203,1,1,33,1,0,83,34,33,0,2,33,0,0,27,14,4,0,85,21,33,0,2,34,0,0,9,14,4,0,135,33,34,0,34,21,0,0,2,34,0,0,75,14,4,0,135,33,34,0,34,22,0,0,2,34,0,0,133,14,4,0,135,33,34,0,34,18,0,0,2,34,0,0,137,14,4,0,135,33,153,0,34,0,0,0,2,34,0,0,32,0,16,0,135,33,154,0,34,0,0,0,34,33,33,0,121,33,7,0,135,33,104,0,85,13,33,0,2,34,0,0,161,14,4,0,135,33,7,0,34,13,0,0,2,33,0,0,16,125,52,0,1,34,1,0,83,33,34,0,135,34,155,0,121,34,2,0,135,34,156,0,1,33,0,2,135,34,157,0,33,0,0,0,34,34,34,0,121,34,5,0,2,33,0,0,179,14,4,0,135,34,34,0,33,14,0,0,2,34,0,0,172,189,52,0,1,33,1,0,83,34,33,0,2,33,0,0,173,189,52,0,1,34,1,0,83,33,34,0,2,34,0,0,168,189,52,0,135,33,158,0,85,34,33,0,1,33,0,0,85,18,33,0,1,34,0,0,109,18,4,34,1,33,0,0,109,18,8,33,1,33,0,0,85,22,33,0,1,34,0,0,109,22,4,34,1,33,0,0,109,22,8,33,135,33,159,0,22,0,0,0,25,6,18,11,2,34,0,0,248,204,52,0,82,34,34,0,82,34,34,0,2,31,0,0,211,14,4,0,1,32,1,0,135,33,148,0,34,31,32,0,121,33,133,0,78,33,6,0,34,33,33,0,121,33,7,0,82,33,18,0,1,32,0,0,83,33,32,0,1,33,0,0,109,18,4,33,119,0,5,0,1,33,0,0,83,18,33,0,1,33,0,0,83,6,33,0,135,33,159,0,22,0,0,0,135,33,134,0,18,0,0,0,78,1,6,0,41,33,1,24,42,33,33,24,34,14,33,0,25,0,18,4,121,14,4,0,82,31,18,0,0,32,31,0,119,0,2,0,0,32,18,0,121,14,4,0,82,34,0,0,0,31,34,0,119,0,3,0,19,34,1,29,0,31,34,0,135,33,135,0,22,32,31,0,25,1,22,11,2,31,0,0,248,204,52,0,82,31,31,0,78,34,1,0,34,34,34,0,121,34,4,0,82,34,22,0,0,32,34,0,119,0,2,0,0,32,22,0,135,33,160,0,31,32,0,0,2,33,0,0,248,204,52,0,82,14,33,0,106,33,14,40,106,32,14,36,45,33,33,32,160,126,0,0,78,33,6,0,34,33,33,0,121,33,7,0,82,33,18,0,1,32,0,0,83,33,32,0,1,32,0,0,85,0,32,0,119,0,5,0,1,32,0,0,83,18,32,0,1,32,0,0,83,6,32,0,135,32,133,0,22,0,0,0,135,32,134,0,18,0,0,0,78,14,6,0,41,32,14,24,42,32,32,24,34,13,32,0,121,13,4,0,82,31,18,0,0,33,31,0,119,0,2,0,0,33,18,0,121,13,4,0,82,34,0,0,0,31,34,0,119,0,3,0,19,34,14,29,0,31,34,0,135,32,135,0,22,33,31,0,2,31,0,0,248,204,52,0,82,31,31,0,78,34,1,0,34,34,34,0,121,34,4,0,82,34,22,0,0,33,34,0,119,0,2,0,0,33,22,0,135,32,137,0,31,33,0,0,121,32,27,0,78,33,1,0,34,33,33,0,121,33,4,0,82,33,22,0,0,32,33,0,119,0,2,0,0,32,22,0,85,15,32,0,2,33,0,0,221,14,4,0,135,32,34,0,33,15,0,0,2,33,0,0,248,204,52,0,82,33,33,0,78,34,1,0,34,34,34,0,121,34,4,0,82,34,22,0,0,31,34,0,119,0,2,0,0,31,22,0,135,32,160,0,33,31,0,0,0,5,18,0,119,0,6,0,0,5,18,0,119,0,4,0,0,5,18,0,119,0,2,0,0,5,18,0,25,0,16,11,2,32,0,0,248,204,52,0,82,32,32,0,82,32,32,0,2,31,0,0,24,15,4,0,1,33,1,0,135,15,132,0,32,31,18,33,2,33,0,0,248,204,52,0,82,2,33,0,120,15,2,0,119,0,32,0,78,32,6,0,34,32,32,0,121,32,4,0,82,32,5,0,0,31,32,0,119,0,2,0,0,31,18,0,135,33,160,0,2,31,0,0,120,33,233,255,2,33,0,0,248,204,52,0,82,15,33,0,135,33,161,0,16,22,18,0,78,32,0,0,34,32,32,0,121,32,4,0,82,32,16,0,0,31,32,0,119,0,2,0,0,31,16,0,135,33,160,0,15,31,0,0,78,33,0,0,34,33,33,0,121,33,216,255,82,31,16,0,135,33,77,0,31,0,0,0,119,0,212,255,106,1,2,40,106,0,2,36,45,33,1,0,152,127,0,0,2,31,0,0,43,37,4,0,135,33,160,0,2,31,0,0,2,33,0,0,248,204,52,0,82,0,33,0,106,1,0,40,106,0,0,36,45,33,1,0,48,128,0,0,78,33,6,0,34,33,33,0,121,33,7,0,82,33,5,0,1,31,0,0,83,33,31,0,1,33,0,0,109,18,4,33,119,0,5,0,1,33,0,0,83,18,33,0,1,33,0,0,83,6,33,0,135,33,134,0,18,0,0,0,2,33,0,0,248,204,52,0,82,15,33,0,135,33,161,0,17,22,18,0,25,16,17,11,78,32,16,0,34,32,32,0,121,32,4,0,82,32,17,0,0,31,32,0,119,0,2,0,0,31,17,0,135,33,160,0,15,31,0,0,78,33,16,0,34,33,33,0,121,33,4,0,82,31,17,0,135,33,77,0,31,0,0,0,2,33,0,0,248,204,52,0,82,17,33,0,106,33,17,40,106,31,17,36,45,33,33,31,132,129,0,0,78,33,6,0,34,33,33,0,121,33,7,0,82,33,5,0,1,31,0,0,83,33,31,0,1,33,0,0,109,18,4,33,119,0,5,0,1,33,0,0,83,18,33,0,1,33,0,0,83,6,33,0,135,33,133,0,22,0,0,0,135,33,134,0,18,0,0,0,78,0,6,0,41,33,0,24,42,33,33,24,34,17,33,0,121,17,4,0,82,32,5,0,0,31,32,0,119,0,2,0,0,31,18,0,121,17,4,0,106,34,18,4,0,32,34,0,119,0,3,0,19,34,0,29,0,32,34,0,135,33,135,0,22,31,32,0,25,0,22,11,2,32,0,0,248,204,52,0,82,32,32,0,78,34,0,0,34,34,34,0,121,34,4,0,82,34,22,0,0,31,34,0,119,0,2,0,0,31,22,0,135,33,137,0,32,31,0,0,121,33,26,0,78,31,0,0,34,31,31,0,121,31,4,0,82,31,22,0,0,33,31,0,119,0,2,0,0,33,22,0,85,19,33,0,2,31,0,0,221,14,4,0,135,33,34,0,31,19,0,0,2,31,0,0,248,204,52,0,82,31,31,0,78,34,0,0,34,34,34,0,121,34,4,0,82,34,22,0,0,32,34,0,119,0,2,0,0,32,22,0,135,33,160,0,31,32,0,0,119,0,6,0,2,32,0,0,30,15,4,0,135,33,34,0,32,20,0,0,119,0,1,0,2,32,0,0,248,204,52,0,82,32,32,0,2,31,0,0,200,199,203,1,82,31,31,0,135,33,162,0,32,31,0,0,2,31,0,0,248,204,52,0,82,31,31,0,134,33,0,0,84,155,1,0,31,0,0,0,2,33,0,0,248,204,52,0,82,0,33,0,25,20,21,4,1,33,0,0,85,20,33,0,1,31,0,0,109,20,4,31,25,20,21,11,1,31,3,0,83,20,31,0,2,31,0,0,40,3,4,0,78,31,31,0,83,21,31,0,2,33,0,0,41,3,4,0,78,33,33,0,107,21,1,33,2,31,0,0,42,3,4,0,78,31,31,0,107,21,2,31,1,33,0,0,107,21,3,33,135,0,143,0,0,21,0,0,78,33,20,0,34,33,33,0,121,33,4,0,82,31,21,0,135,33,77,0,31,0,0,0,2,31,0,0,248,204,52,0,82,31,31,0,82,31,31,0,2,32,0,0,97,15,4,0,1,34,0,0,135,33,148,0,31,32,34,0,121,33,3,0,1,0,1,0,119,0,24,0,25,4,21,11,1,33,10,0,83,4,33,0,0,1,21,0,2,2,0,0,44,3,4,0,25,3,1,10,78,33,2,0,83,1,33,0,25,1,1,1,25,2,2,1,54,33,1,3,140,130,0,0,1,34,0,0,107,21,10,34,135,0,89,0,0,21,0,0,78,34,4,0,34,34,34,0,121,34,4,0,82,33,21,0,135,34,77,0,33,0,0,0,2,34,0,0,92,125,52,0,78,34,34,0,32,34,34,0,19,34,0,34,121,34,11,0,2,34,0,0,92,125,52,0,1,33,1,0,83,34,33,0,2,33,0,0,163,125,52,0,78,33,33,0,120,33,2,0,135,33,101,0,135,33,163,0,135,33,164,0,2,34,0,0,248,204,52,0,82,34,34,0,82,34,34,0,2,32,0,0,109,15,4,0,1,31,0,0,135,33,148,0,34,32,31,0,121,33,3,0,134,33,0,0,252,102,1,0,2,31,0,0,248,204,52,0,82,31,31,0,134,33,0,0,124,157,1,0,31,0,0,0,102,33,22,11,34,33,33,0,121,33,4,0,82,31,22,0,135,33,77,0,31,0,0,0,78,33,6,0,34,33,33,0,121,33,4,0,82,31,5,0,135,33,77,0,31,0,0,0,1,3,0,0,32,33,25,35,121,33,25,0,2,33,0,0,32,77,4,0,85,8,33,0,2,31,0,0,22,11,4,0,135,33,138,0,31,8,0,0,2,31,0,0,77,11,4,0,135,33,142,0,31,0,0,0,2,31,0,0,134,11,4,0,135,33,142,0,31,0,0,0,2,31,0,0,200,11,4,0,135,33,142,0,31,0,0,0,2,31,0,0,9,12,4,0,135,33,142,0,31,0,0,0,1,3,1,0,102,33,24,11,34,33,33,0,121,33,4,0,82,31,24,0,135,33,77,0,31,0,0,0,135,33,165,0,23,0,0,0,25,0,26,12,102,33,0,11,34,33,33,0,121,33,4,0,82,31,0,0,135,33,77,0,31,0,0,0,25,0,26,8,82,33,0,0,121,33,26,0,106,1,26,4,82,33,26,0,25,25,33,4,82,24,1,0,82,31,25,0,109,24,4,31,82,31,25,0,85,31,24,0,1,31,0,0,85,0,31,0,46,31,1,26,160,132,0,0,0,0,1,0,106,1,1,4,25,2,0,8,102,31,2,11,34,31,31,0,121,31,4,0,82,33,2,0,135,31,77,0,33,0,0,0,135,31,77,0,0,0,0,0,53,31,1,26,108,132,0,0,32,31,3,1,121,31,4,0,137,27,0,0,1,31,0,0,139,31,0,0,1,33,0,0,135,31,166,0,33,0,0,0,1,33,1,0,135,31,100,0,33,0,0,0,135,31,167,0,137,27,0,0,1,31,0,0,139,31,0,0,140,2,55,0,0,0,0,0,2,46,0,0,213,82,4,0,2,47,0,0,0,190,50,0,2,48,0,0,0,128,255,255,2,49,0,0,208,82,4,0,2,50,0,0,255,0,0,0,1,43,0,0,136,51,0,0,0,45,51,0,136,51,0,0,1,52,128,4,3,51,51,52,137,51,0,0,1,51,248,3,3,39,45,51,1,51,240,3,3,38,45,51,1,51,232,3,3,37,45,51,1,51,224,3,3,36,45,51,1,51,216,3,3,35,45,51,1,51,208,3,3,34,45,51,1,51,200,3,3,33,45,51,1,51,192,3,3,32,45,51,1,51,184,3,3,14,45,51,1,51,176,3,3,5,45,51,1,51,168,3,3,4,45,51,1,51,160,3,3,3,45,51,1,51,96,4,3,13,45,51,1,51,100,4,3,26,45,51,1,51,92,4,3,27,45,51,1,51,112,4,3,28,45,51,1,51,110,4,3,29,45,51,1,51,127,4,3,30,45,51,1,51,114,4,3,31,45,51,1,51,80,4,3,44,45,51,1,51,64,1,3,11,45,51,1,51,64,4,3,40,45,51,1,51,32,4,3,12,45,51,1,51,48,4,3,41,45,51,1,51,0,4,3,15,45,51,1,51,16,4,3,42,45,51,1,51,240,0,3,18,45,51,1,51,160,0,3,19,45,51,1,51,108,4,3,20,45,51,1,51,106,4,3,21,45,51,25,22,45,80,0,23,45,0,1,51,252,3,3,24,45,51,1,51,104,4,3,25,45,51,85,13,1,0,2,52,0,0,215,76,4,0,135,51,168,0,1,52,0,0,121,51,35,0,2,53,0,0,43,75,4,0,135,52,169,0,53,0,0,0,1,53,144,3,3,53,45,53,135,51,170,0,0,52,53,0,2,51,0,0,136,82,4,0,135,2,169,0,51,0,0,0,2,53,0,0,92,154,4,0,1,52,152,3,3,52,45,52,135,51,170,0,0,53,52,0,2,52,0,0,241,76,4,0,135,51,86,0,52,2,0,0,120,51,8,0,2,52,0,0,161,82,4,0,135,51,170,0,0,52,4,0,137,45,0,0,139,0,0,0,119,0,5,0,135,51,170,0,0,2,3,0,137,45,0,0,139,0,0,0,120,1,3,0,1,1,0,0,119,0,17,0,78,2,1,0,41,51,2,24,42,51,51,24,121,51,13,0,19,52,2,50,135,51,171,0,52,0,0,0,120,51,2,0,119,0,8,0,25,1,1,1,85,13,1,0,78,2,1,0,41,51,2,24,42,51,51,24,33,51,51,0,120,51,245,255,1,51,44,11,135,16,33,0,51,0,0,0,1,52,44,11,2,53,0,0,208,201,203,1,82,53,53,0,135,51,1,0,52,53,0,0,1,51,44,11,135,17,33,0,51,0,0,0,43,51,17,16,41,51,51,4,2,53,0,0,255,255,0,0,19,53,17,53,3,51,51,53,85,26,51,0,1,51,0,0,85,44,51,0,25,17,44,4,1,51,0,0,85,17,51,0,1,53,0,0,109,44,8,53,2,51,0,0,233,159,4,0,135,53,168,0,1,51,0,0,120,53,2,0,119,0,3,0,82,1,13,0,119,0,249,255,82,51,13,0,2,52,0,0,9,160,4,0,135,53,168,0,51,52,0,0,120,53,251,255,82,52,13,0,2,51,0,0,231,159,4,0,135,53,168,0,52,51,0,0,120,53,251,255,82,51,13,0,2,52,0,0,19,160,4,0,135,53,168,0,51,52,0,0,82,52,13,0,2,51,0,0,167,82,4,0,135,53,168,0,52,51,0,0,82,51,13,0,2,52,0,0,13,160,4,0,135,53,168,0,51,52,0,0,82,53,13,0,135,2,172,0,53,0,0,0,120,2,1,3,1,53,255,1,3,4,11,53,25,5,12,11,25,6,40,12,25,7,44,8,25,8,12,8,25,9,12,4,25,10,40,11,135,2,173,0,13,0,0,0,120,2,2,0,119,0,182,0,78,53,2,0,120,53,2,0,119,0,179,0,1,53,43,0,135,1,95,0,2,53,0,0,45,53,1,2,204,136,0,0,82,1,44,0,82,53,17,0,4,3,53,1,120,3,4,0,0,1,2,0,1,43,29,0,119,0,18,0,42,53,3,4,26,53,53,1,41,53,53,4,3,53,1,53,1,52,1,0,107,53,12,52,25,2,2,1,135,52,55,0,2,0,0,0,120,52,2,0,119,0,227,255,1,52,43,0,135,1,95,0,2,52,0,0,1,43,28,0,119,0,2,0,1,43,28,0,32,52,43,28,121,52,6,0,1,43,0,0,120,1,3,0,1,3,0,0,119,0,2,0,1,43,29,0,32,52,43,29,121,52,5,0,1,43,0,0,1,52,0,0,83,1,52,0,25,3,1,1,1,53,255,1,135,52,93,0,11,2,53,0,1,52,0,0,83,4,52,0,135,1,55,0,11,0,0,0,120,1,3,0,1,43,32,0,119,0,6,0,26,52,1,1,90,52,11,52,33,52,52,58,121,52,2,0,1,43,32,0,32,52,43,32,121,52,41,0,1,43,0,0,2,53,0,0,170,82,4,0,135,52,174,0,2,53,0,0,120,52,35,0,1,53,247,255,1,51,0,0,135,52,59,0,2,53,51,0,121,52,30,0,135,52,85,0,26,31,27,28,29,30,0,0,78,52,30,0,38,52,52,16,121,52,24,0,135,52,55,0,11,0,0,0,3,1,11,52,2,52,0,0,173,82,4,0,78,52,52,0,83,1,52,0,2,51,0,0,174,82,4,0,78,51,51,0,107,1,1,51,2,52,0,0,175,82,4,0,78,52,52,0,107,1,2,52,2,51,0,0,176,82,4,0,78,51,51,0,107,1,3,51,2,52,0,0,177,82,4,0,78,52,52,0,107,1,4,52,1,52,0,0,85,12,52,0,1,51,0,0,109,12,4,51,1,52,0,0,109,12,8,52,135,1,55,0,11,0,0,0,1,52,239,255,48,52,52,1,28,138,0,0,1,43,37,0,119,0,67,0,35,52,1,11,121,52,8,0,83,5,1,0,120,1,3,0,0,2,12,0,119,0,16,0,0,2,12,0,1,43,41,0,119,0,13,0,25,52,1,16,38,52,52,240,0,43,52,0,135,2,79,0,43,0,0,0,85,12,2,0,2,52,0,0,0,0,0,128,20,52,43,52,85,8,52,0,85,9,1,0,1,43,41,0,32,52,43,41,121,52,4,0,1,43,0,0,135,52,80,0,2,11,1,0,1,51,0,0,95,2,1,51,135,51,81,0,40,12,0,0,33,51,3,0,38,51,51,1,83,6,51,0,82,2,17,0,82,51,7,0,45,51,2,51,188,138,0,0,135,51,175,0,44,40,0,0,119,0,8,0,135,51,81,0,2,40,0,0,78,52,6,0,107,2,12,52,82,52,17,0,25,52,52,16,85,17,52,0,78,52,10,0,34,52,52,0,121,52,4,0,82,51,40,0,135,52,77,0,51,0,0,0,78,52,5,0,34,52,52,0,121,52,4,0,82,51,12,0,135,52,77,0,51,0,0,0,120,3,2,0,119,0,77,255,78,52,3,0,120,52,2,0,119,0,74,255,0,2,3,0,119,0,79,255,32,52,43,37,121,52,3,0,135,52,87,0,12,0,0,0,82,4,17,0,82,2,44,0,4,13,4,2,42,52,13,4,0,1,52,0,0,3,2,0,120,13,3,0,1,43,56,0,119,0,39,2,102,2,2,11,41,52,2,24,42,52,52,24,34,52,52,0,121,52,3,0,106,2,3,4,119,0,3,0,19,52,2,50,0,2,52,0,120,2,3,0,1,43,56,0,119,0,27,2,1,52,0,0,85,40,52,0,1,51,0,0,109,40,4,51,1,52,0,0,109,40,8,52,1,51,0,0,107,40,12,51,1,51,1,0,48,51,51,1,80,140,0,0,26,51,1,2,41,51,51,4,3,51,3,51,102,51,51,12,120,51,33,0,26,52,4,16,135,51,145,0,40,52,0,0,26,52,4,4,78,52,52,0,107,40,12,52,82,52,17,0,26,2,52,16,102,52,2,11,34,52,52,0,121,52,4,0,82,51,2,0,135,52,77,0,51,0,0,0,85,17,2,0,102,14,40,11,25,1,40,11,41,51,14,24,42,51,51,24,34,51,51,0,121,51,4,0,106,51,40,4,0,52,51,0,119,0,3,0,19,51,14,50,0,52,51,0,120,52,4,0,0,4,40,0,1,43,63,0,119,0,6,0,0,4,40,0,119,0,4,0,1,43,61,0,119,0,2,0,1,43,61,0,32,52,43,61,121,52,4,0,0,4,40,0,25,1,40,11,1,43,63,0,32,52,43,63,121,52,67,0,1,52,0,0,85,15,52,0,1,51,0,0,109,15,4,51,1,52,0,0,109,15,8,52,2,52,0,0,202,82,4,0,135,3,55,0,52,0,0,0,1,52,239,255,48,52,52,3,172,140,0,0,135,52,87,0,15,0,0,0,35,52,3,11,121,52,8,0,107,15,11,3,120,3,3,0,0,2,15,0,119,0,16,0,0,2,15,0,1,43,68,0,119,0,13,0,25,52,3,16,38,52,52,240,0,43,52,0,135,2,79,0,43,0,0,0,85,15,2,0,2,51,0,0,0,0,0,128,20,51,43,51,109,15,8,51,109,15,4,3,1,43,68,0,32,51,43,68,121,51,5,0,2,52,0,0,202,82,4,0,135,51,80,0,2,52,3,0,1,52,0,0,95,2,3,52,135,52,81,0,41,15,0,0,25,14,41,12,1,52,1,0,83,14,52,0,135,52,145,0,4,41,0,0,78,51,14,0,107,40,12,51,102,51,41,11,34,51,51,0,121,51,4,0,82,52,41,0,135,51,77,0,52,0,0,0,102,51,15,11,34,51,51,0,121,51,4,0,82,52,15,0,135,51,77,0,52,0,0,0,82,2,17,0,1,51,0,0,85,41,51,0,1,52,0,0,109,41,4,52,1,51,0,0,109,41,8,51,1,52,0,0,107,41,12,52,1,52,0,0,85,42,52,0,1,51,0,0,109,42,4,51,1,52,0,0,109,42,8,52,1,51,0,0,107,42,12,51,82,51,44,0,45,51,2,51,208,141,0,0,1,2,0,0,1,43,125,0,119,0,106,1,25,8,42,12,25,9,41,12,25,10,40,12,25,2,42,11,1,7,0,0,135,51,145,0,41,42,0,0,78,51,8,0,83,9,51,0,82,3,44,0,135,51,145,0,42,3,0,0,102,51,3,12,83,8,51,0,82,3,44,0,25,5,3,16,82,6,17,0,45,51,5,6,36,142,0,0,1,43,81,0,119,0,13,0,135,51,145,0,3,5,0,0,102,52,5,12,107,3,12,52,25,5,5,16,25,3,3,16,53,52,5,6,36,142,0,0,82,5,17,0,46,52,5,3,84,142,0,0,1,43,81,0,32,52,43,81,121,52,11,0,1,43,0,0,26,5,5,16,102,52,5,11,34,52,52,0,121,52,4,0,82,51,5,0,135,52,77,0,51,0,0,0,53,52,5,3,96,142,0,0,85,17,3,0,78,52,9,0,33,52,52,0,78,51,8,0,32,51,51,0,20,52,52,51,78,51,10,0,32,51,51,0,20,52,52,51,120,52,13,0,135,52,145,0,4,42,0,0,78,52,8,0,83,10,52,0,82,52,17,0,82,51,44,0,45,52,52,51,216,142,0,0,0,2,7,0,1,43,125,0,119,0,40,1,119,0,195,255,78,53,2,0,34,53,53,0,121,53,4,0,82,53,42,0,0,51,53,0,119,0,2,0,0,51,42,0,135,52,71,0,51,18,0,0,120,52,3,0,1,43,88,0,119,0,240,0,1,52,92,0,135,3,84,0,18,52,0,0,121,3,3,0,1,51,0,0,107,3,1,51,78,53,1,0,34,53,53,0,121,53,4,0,82,53,40,0,0,52,53,0,119,0,2,0,0,52,40,0,135,51,71,0,52,19,0,0,120,51,3,0,1,43,92,0,119,0,222,0,2,51,0,0,204,82,4,0,135,3,176,0,19,51,0,0,121,3,3,0,1,51,0,0,83,3,51,0,135,51,55,0,19,0,0,0,26,51,51,1,90,51,19,51,32,51,51,92,121,51,3,0,1,6,0,0,119,0,24,0,1,52,247,255,1,53,0,0,135,51,59,0,19,52,53,0,121,51,18,0,135,51,85,0,26,31,27,28,29,30,0,0,78,51,30,0,38,51,51,16,120,51,3,0,1,6,1,0,119,0,11,0,135,51,55,0,19,0,0,0,3,6,19,51,1,51,92,0,83,6,51,0,1,53,0,0,107,6,1,53,1,6,0,0,119,0,2,0,1,6,1,0,78,52,2,0,34,52,52,0,121,52,4,0,82,52,42,0,0,51,52,0,119,0,2,0,0,51,42,0,1,52,247,255,1,54,0,0,135,53,59,0,51,52,54,0,120,53,3,0,1,43,100,0,119,0,170,0,1,5,0,0,0,3,7,0,135,53,85,0,26,31,27,28,29,30,0,0,78,53,30,0,38,53,53,16,120,53,148,0,135,53,78,0,23,18,0,0,135,53,177,0,23,31,0,0,1,54,0,0,1,52,0,0,135,53,43,0,23,54,20,52,120,53,14,0,135,15,169,0,46,0,0,0,78,52,2,0,34,52,52,0,121,52,4,0,82,52,42,0,0,53,52,0,119,0,2,0,0,53,42,0,85,38,53,0,135,53,170,0,0,15,38,0,119,0,126,0,135,53,78,0,22,19,0,0,135,53,55,0,22,0,0,0,26,53,53,1,90,53,22,53,32,53,53,92,121,53,3,0,135,53,177,0,22,31,0,0,19,53,6,5,0,5,53,0,121,5,5,0,1,53,1,0,83,9,53,0,1,43,110,0,119,0,38,0,78,53,9,0,121,53,3,0,1,43,110,0,119,0,34,0,1,52,0,0,1,54,0,0,135,53,42,0,22,52,21,54,121,53,11,0,78,43,9,0,1,53,0,0,85,24,53,0,41,53,43,24,42,53,53,24,120,53,3,0,1,43,114,0,119,0,21,0,1,43,112,0,119,0,19,0,80,54,20,0,1,52,0,0,135,53,44,0,54,52,0,0,135,5,169,0,46,0,0,0,78,52,1,0,34,52,52,0,121,52,4,0,82,52,40,0,0,53,52,0,119,0,2,0,0,53,40,0,85,37,53,0,135,53,170,0,0,5,37,0,1,5,1,0,119,0,72,0,32,53,43,110,121,53,4,0,1,53,0,0,85,24,53,0,1,43,112,0,32,53,43,112,121,53,31,0,1,43,0,0,1,52,2,0,1,54,0,0,135,53,43,0,22,52,21,54,121,53,9,0,80,54,21,0,1,52,2,0,1,51,0,0,135,53,48,0,54,24,52,51,121,53,3,0,1,43,114,0,119,0,17,0,80,51,20,0,1,52,0,0,135,53,44,0,51,52,0,0,135,15,169,0,46,0,0,0,78,52,1,0,34,52,52,0,121,52,4,0,82,52,40,0,0,53,52,0,119,0,2,0,0,53,40,0,85,36,53,0,135,53,170,0,0,15,36,0,32,53,43,114,121,53,32,0,1,43,0,0,84,25,48,0,80,52,20,0,1,51,0,0,134,53,0,0,120,148,1,0,52,47,25,51,80,51,21,0,1,52,0,0,135,53,3,0,51,47,25,52,80,53,25,0,52,53,53,48,24,146,0,0,80,52,20,0,1,51,0,0,135,53,44,0,52,51,0,0,80,51,21,0,1,52,0,0,135,53,44,0,51,52,0,0,85,35,31,0,135,53,170,0,0,49,35,0,78,53,8,0,32,53,53,0,40,52,5,1,19,53,53,52,38,53,53,1,3,3,3,53,1,5,1,0,78,53,30,0,38,53,53,64,120,53,3,0,135,53,60,0,120,53,99,255,82,53,17,0,82,52,44,0,45,53,53,52,192,146,0,0,0,2,3,0,1,43,125,0,119,0,46,0,0,7,3,0,119,0,200,254,32,53,43,88,121,53,11,0,2,51,0,0,185,78,4,0,135,52,169,0,51,0,0,0,135,53,170,0,0,52,32,0,1,52,44,11,135,53,1,0,52,16,0,0,119,0,32,0,32,53,43,92,121,53,11,0,2,51,0,0,185,78,4,0,135,52,169,0,51,0,0,0,135,53,170,0,0,52,33,0,1,52,44,11,135,53,1,0,52,16,0,0,119,0,20,0,32,53,43,100,121,53,18,0,2,53,0,0,85,77,4,0,135,39,169,0,53,0,0,0,78,52,2,0,34,52,52,0,121,52,4,0,82,52,42,0,0,53,52,0,119,0,2,0,0,53,42,0,85,34,53,0,135,53,170,0,0,39,34,0,1,52,44,11,135,53,1,0,52,16,0,0,32,53,43,125,121,53,12,0,2,53,0,0,236,82,4,0,135,38,169,0,53,0,0,0,85,39,2,0,135,53,170,0,0,38,39,0,1,52,44,11,135,53,1,0,52,16,0,0,25,2,42,11,78,53,2,0,34,53,53,0,121,53,4,0,82,52,42,0,135,53,77,0,52,0,0,0,102,53,41,11,34,53,53,0,121,53,4,0,82,52,41,0,135,53,77,0,52,0,0,0,78,53,1,0,34,53,53,0,121,53,4,0,82,52,40,0,135,53,77,0,52,0,0,0,32,53,43,56,121,53,21,0,2,51,0,0,178,82,4,0,135,52,169,0,51,0,0,0,135,53,170,0,0,52,14,0,1,52,44,11,135,53,1,0,52,16,0,0,119,0,11,0,2,53,0,0,10,79,4,0,135,43,169,0,53,0,0,0,85,5,2,0,135,53,170,0,0,43,5,0,1,52,44,11,135,53,1,0,52,16,0,0,82,1,44,0,121,1,19,0,82,2,17,0,45,53,2,1,100,148,0,0,0,2,1,0,119,0,11,0,26,2,2,16,102,53,2,11,34,53,53,0,121,53,4,0,82,52,2,0,135,53,77,0,52,0,0,0,53,53,2,1,100,148,0,0,82,2,44,0,85,17,1,0,135,53,77,0,2,0,0,0,137,45,0,0,139,0,0,0,140,1,45,0,0,0,0,0,2,36,0,0,255,0,0,0,2,37,0,0,0,4,0,0,2,38,0,0,149,232,3,0,2,39,0,0,115,39,4,0,1,32,0,0,136,40,0,0,0,35,40,0,136,40,0,0,2,41,0,0,144,7,1,0,3,40,40,41,137,40,0,0,2,40,0,0,120,5,1,0,3,18,35,40,2,40,0,0,112,5,1,0,3,24,35,40,2,40,0,0,104,5,1,0,3,23,35,40,2,40,0,0,96,5,1,0,3,22,35,40,2,40,0,0,88,5,1,0,3,21,35,40,2,40,0,0,80,5,1,0,3,17,35,40,2,40,0,0,72,5,1,0,3,16,35,40,2,40,0,0,64,5,1,0,3,15,35,40,2,40,0,0,56,5,1,0,3,13,35,40,2,40,0,0,48,5,1,0,3,12,35,40,2,40,0,0,40,5,1,0,3,11,35,40,2,40,0,0,32,5,1,0,3,10,35,40,2,40,0,0,140,7,1,0,3,19,35,40,2,40,0,0,128,7,1,0,3,34,35,40,2,40,0,0,124,5,1,0,3,20,35,40,1,40,16,5,3,31,35,40,1,40,16,1,3,27,35,40,0,25,35,0,135,40,178,0,0,0,0,0,2,40,0,0,248,204,52,0,82,40,40,0,102,40,40,20,121,40,12,0,2,42,0,0,77,36,4,0,135,41,169,0,42,0,0,0,2,42,0,0,16,5,1,0,3,42,35,42,135,40,170,0,0,41,42,0,137,35,0,0,139,0,0,0,1,40,0,0,85,19,40,0,25,33,34,11,25,8,0,16,1,40,0,0,85,34,40,0,1,42,0,0,109,34,4,42,1,40,0,0,109,34,8,40,82,42,8,0,135,40,179,0,42,0,0,0,120,40,11,0,2,41,0,0,59,218,3,0,135,42,169,0,41,0,0,0,2,41,0,0,24,5,1,0,3,41,35,41,135,40,170,0,0,42,41,0,119,0,206,3,25,1,0,4,25,14,1,11,25,9,0,8,1,3,0,0,1,4,0,0,1,2,0,0,1,5,0,0,1,6,0,0,1,7,65,0,0,30,3,0,0,28,4,0,0,29,5,0,0,26,6,0,82,41,8,0,135,40,179,0,41,0,0,0,50,40,40,2,168,150,0,0,1,32,58,0,119,0,232,0,25,6,2,1,82,41,8,0,135,40,180,0,41,6,1,0,120,40,2,0,119,0,123,0,78,5,14,0,82,4,9,0,19,40,5,36,0,3,40,0,41,41,5,24,42,41,41,24,34,41,41,0,125,40,41,4,3,0,0,0,32,40,40,2,121,40,13,0,1,41,0,0,1,42,255,255,1,43,2,0,135,40,92,0,1,41,42,39,43,0,0,0,120,40,2,0,119,0,171,0,78,5,14,0,19,40,5,36,0,3,40,0,82,4,9,0,41,43,5,24,42,43,43,24,34,43,43,0,125,40,43,4,3,0,0,0,32,40,40,2,121,40,15,0,1,43,0,0,1,42,255,255,2,41,0,0,146,232,3,0,1,44,2,0,135,40,92,0,1,43,42,41,44,0,0,0,120,40,2,0,119,0,150,0,78,5,14,0,19,40,5,36,0,3,40,0,82,4,9,0,41,44,5,24,42,44,44,24,34,44,44,0,125,40,44,4,3,0,0,0,32,40,40,2,121,40,14,0,1,44,0,0,1,41,255,255,1,42,2,0,135,40,92,0,1,44,41,38,42,0,0,0,121,40,8,0,78,5,14,0,19,40,5,36,0,3,40,0,82,4,9,0,1,32,28,0,119,0,2,0,1,32,28,0,32,40,32,28,121,40,18,0,1,32,0,0,41,42,5,24,42,42,42,24,34,42,42,0,125,40,42,4,3,0,0,0,33,40,40,2,120,40,50,0,1,42,0,0,1,41,255,255,2,44,0,0,152,232,3,0,1,43,2,0,135,40,92,0,1,42,41,44,43,0,0,0,120,40,41,0,25,2,2,2,82,43,8,0,135,40,180,0,43,2,1,0,120,40,3,0,1,32,42,0,119,0,135,0,1,6,0,0,78,3,14,0,41,40,3,24,42,40,40,24,34,5,40,0,121,5,3,0,82,3,9,0,119,0,3,0,19,40,3,36,0,3,40,0,57,40,3,6,156,152,0,0,121,5,3,0,82,3,1,0,119,0,2,0,0,3,1,0,90,43,3,6,135,40,72,0,43,0,0,0,19,40,40,36,0,4,40,0,121,5,3,0,82,3,1,0,119,0,2,0,0,3,1,0,95,3,6,4,25,6,6,1,119,0,230,255,135,40,145,0,34,1,0,0,119,0,122,255,0,2,6,0,119,0,120,255,2,40,0,0,178,220,3,0,135,3,169,0,40,0,0,0,78,40,14,0,34,40,40,0,121,40,3,0,82,4,1,0,119,0,2,0,0,4,1,0,85,13,4,0,135,40,170,0,0,3,13,0,78,40,14,0,34,40,40,0,121,40,3,0,82,3,1,0,119,0,2,0,0,3,1,0,1,40,0,0,135,5,181,0,0,3,19,20,40,0,0,0,120,5,3,0,1,32,55,0,119,0,76,0,2,40,0,0,176,161,50,0,41,43,2,2,3,4,40,43,82,2,4,0,121,2,7,0,106,3,2,4,121,3,3,0,135,43,140,0,3,0,0,0,135,43,77,0,2,0,0,0,1,43,36,2,135,2,79,0,43,0,0,0,78,43,14,0,34,43,43,0,121,43,3,0,82,3,1,0,119,0,2,0,0,3,1,0,82,40,19,0,1,44,0,0,135,43,182,0,2,5,3,40,44,0,0,0,85,4,2,0,32,3,30,0,82,4,20,0,125,30,3,5,30,0,0,0,125,28,3,28,5,0,0,0,0,2,6,0,125,29,3,4,29,0,0,0,125,26,3,26,4,0,0,0,119,0,55,255,25,2,2,2,82,44,8,0,135,43,180,0,44,2,1,0,120,43,3,0,1,32,24,0,119,0,30,0,78,43,14,0,34,43,43,0,121,43,3,0,82,3,1,0,119,0,2,0,0,3,1,0,78,43,3,0,135,7,72,0,43,0,0,0,19,43,7,36,41,43,43,24,42,43,43,24,1,44,65,0,1,40,4,0,138,43,44,40,36,154,0,0,28,154,0,0,40,154,0,0,44,154,0,0,1,32,23,0,119,0,9,0,119,0,3,0,119,0,2,0,119,0,1,0,0,3,30,0,0,4,28,0,0,5,29,0,0,6,26,0,119,0,15,255,32,43,32,23,121,43,8,0,2,40,0,0,59,218,3,0,135,44,169,0,40,0,0,0,135,43,170,0,0,44,10,0,119,0,202,2,32,43,32,24,121,43,8,0,2,40,0,0,59,218,3,0,135,44,169,0,40,0,0,0,135,43,170,0,0,44,11,0,119,0,193,2,32,43,32,42,121,43,8,0,2,40,0,0,59,218,3,0,135,44,169,0,40,0,0,0,135,43,170,0,0,44,12,0,119,0,184,2,32,43,32,55,121,43,13,0,2,43,0,0,226,220,3,0,135,2,169,0,43,0,0,0,78,43,14,0,34,43,43,0,121,43,2,0,82,1,1,0,85,15,1,0,135,43,170,0,0,2,15,0,119,0,170,2,32,43,32,58,121,43,168,2,2,43,0,0,248,182,203,1,1,44,0,0,85,43,44,0,135,44,183,0,19,44,7,36,0,1,44,0,2,44,0,0,160,161,50,0,26,43,1,65,41,43,43,2,94,2,44,43,120,2,9,0,2,44,0,0,127,220,3,0,135,32,169,0,44,0,0,0,85,16,1,0,135,44,170,0,0,32,16,0,119,0,147,2,1,43,0,0,1,40,0,0,1,41,1,0,135,44,184,0,2,43,40,41,20,0,0,0,78,44,20,0,32,44,44,80,121,44,24,2,102,44,20,1,32,44,44,67,121,44,19,2,102,44,20,2,32,44,44,106,121,44,14,2,102,44,20,3,32,44,44,114,121,44,9,2,2,44,0,0,252,204,52,0,82,44,44,0,33,44,44,3,121,44,8,0,2,40,0,0,57,221,3,0,135,41,169,0,40,0,0,0,135,44,170,0,0,41,17,0,119,0,4,2,78,32,33,0,25,8,34,4,41,41,32,24,42,41,41,24,34,41,41,0,121,41,4,0,82,41,8,0,0,44,41,0,119,0,3,0,19,41,32,36,0,44,41,0,120,44,15,0,1,41,0,0,1,40,255,255,2,43,0,0,187,202,203,1,1,42,0,0,135,44,92,0,34,41,40,43,42,0,0,0,120,44,4,0,1,1,255,255,1,32,101,0,119,0,4,0,1,32,68,0,119,0,2,0,1,32,68,0,32,44,32,68,121,44,223,0,1,42,0,2,1,43,0,0,135,44,185,0,30,42,43,0,1,43,1,0,1,42,0,2,4,42,29,42,135,44,186,0,31,43,42,30,1,44,0,0,83,27,44,0,102,2,31,6,19,44,2,36,0,1,44,0,78,20,33,0,41,42,20,24,42,42,42,24,34,42,42,0,121,42,4,0,82,42,8,0,0,44,42,0,119,0,3,0,19,42,20,36,0,44,42,0,32,44,44,1,121,44,88,0,1,42,0,0,1,43,255,255,2,40,0,0,215,76,4,0,1,41,1,0,135,44,92,0,34,42,43,40,41,0,0,0,120,44,77,0,41,44,2,24,42,44,44,24,120,44,3,0,1,32,76,0,119,0,45,0,1,2,6,0,25,41,2,1,3,41,31,41,135,44,93,0,25,41,1,0,1,41,0,0,95,25,1,41,135,41,187,0,25,0,0,0,135,41,55,0,27,0,0,0,3,30,27,41,1,41,32,0,83,30,41,0,1,44,0,0,107,30,1,44,135,44,177,0,27,25,0,0,25,44,2,4,3,2,44,1,55,44,37,2,76,157,0,0,90,1,31,2,41,44,1,24,42,44,44,24,120,44,3,0,1,32,74,0,119,0,4,0,19,44,1,36,0,1,44,0,119,0,227,255,32,44,32,74,121,44,5,0,37,44,2,6,121,44,3,0,1,32,76,0,119,0,8,0,2,44,0,0,129,221,3,0,135,31,169,0,44,0,0,0,85,21,27,0,135,44,170,0,0,31,21,0,32,44,32,76,121,44,7,0,2,40,0,0,195,221,3,0,135,41,169,0,40,0,0,0,135,44,170,0,0,41,22,0,1,1,0,0,2,44,0,0,176,161,50,0,41,41,1,2,3,2,44,41,82,3,2,0,121,3,9,0,106,4,3,4,121,4,3,0,135,41,140,0,4,0,0,0,135,41,77,0,3,0,0,0,1,41,0,0,85,2,41,0,25,1,1,1,33,41,1,20,120,41,240,255,119,0,4,0,1,32,83,0,119,0,2,0,1,32,83,0,32,41,32,83,121,41,107,0,41,41,2,24,42,41,41,24,120,41,3,0,1,32,92,0,119,0,76,0,0,2,1,0,1,1,6,0,25,1,1,1,3,44,31,1,135,41,93,0,25,44,2,0,1,44,0,0,95,25,2,44,135,44,187,0,25,0,0,0,135,44,55,0,27,0,0,0,3,22,27,44,1,44,32,0,83,22,44,0,1,41,0,0,107,22,1,41,135,41,177,0,27,25,0,0,3,1,1,2,135,2,55,0,25,0,0,0,78,22,33,0,41,44,22,24,42,44,44,24,34,44,44,0,121,44,4,0,82,44,8,0,0,41,44,0,119,0,3,0,19,44,22,36,0,41,44,0,45,41,2,41,188,158,0,0,1,44,0,0,1,40,255,255,135,41,92,0,34,44,40,25,2,0,0,0,120,41,3,0,1,32,89,0,119,0,13,0,25,1,1,3,55,41,37,1,236,158,0,0,90,2,31,1,41,41,2,24,42,41,41,24,120,41,3,0,1,32,90,0,119,0,4,0,19,41,2,36,0,2,41,0,119,0,205,255,32,41,32,89,121,41,7,0,34,41,1,1,121,41,3,0,1,32,90,0,119,0,3,0,1,32,101,0,119,0,40,0,32,41,32,90,121,41,5,0,37,41,1,6,121,41,3,0,1,32,92,0,119,0,8,0,2,41,0,0,129,221,3,0,135,31,169,0,41,0,0,0,85,23,27,0,135,41,170,0,0,31,23,0,32,41,32,92,121,41,7,0,2,44,0,0,195,221,3,0,135,40,169,0,44,0,0,0,135,41,170,0,0,40,24,0,1,1,0,0,2,41,0,0,176,161,50,0,41,40,1,2,3,2,41,40,82,3,2,0,121,3,9,0,106,4,3,4,121,4,3,0,135,40,140,0,4,0,0,0,135,40,77,0,3,0,0,0,1,40,0,0,85,2,40,0,25,1,1,1,33,40,1,20,120,40,240,255,32,40,32,101,121,40,7,1,135,40,188,0,0,0,0,0,135,40,189,0,121,30,3,1,2,40,0,0,155,232,3,0,1,41,1,0,135,3,181,0,0,40,27,25,41,0,0,0,121,3,30,0,1,40,0,48,1,44,0,0,135,41,185,0,3,40,44,0,1,44,1,0,2,40,0,0,0,176,0,0,135,41,186,0,31,44,40,3],eb+30720);HEAPU8.set([2,40,0,0,0,176,0,0,45,41,41,40,72,160,0,0,1,2,0,0,2,41,0,0,228,5,120,1,82,41,41,0,2,40,0,0,0,48,15,0,3,40,2,40,90,44,31,2,95,41,40,44,25,2,2,1,2,44,0,0,0,176,0,0,53,44,2,44,20,160,0,0,135,44,140,0,3,0,0,0,120,28,6,0,1,44,207,1,3,3,31,44,1,44,206,1,3,2,31,44,119,0,39,0,1,40,0,0,1,41,0,0,135,44,185,0,28,40,41,0,1,41,1,0,1,40,0,2,135,44,186,0,31,41,40,28,1,44,206,1,3,2,31,44,1,44,207,1,3,3,31,44,79,44,3,0,41,44,44,8,79,40,2,0,20,44,44,40,41,44,44,4,0,6,44,0,1,40,0,2,1,41,0,0,135,44,185,0,28,40,41,0,1,44,0,2,4,5,26,44,1,41,1,0,135,44,186,0,31,41,5,28,121,5,11,0,1,4,0,0,2,44,0,0,228,5,120,1,82,44,44,0,3,41,4,6,90,40,31,4,95,44,41,40,25,4,4,1,53,40,4,5,220,160,0,0,1,41,0,0,1,44,0,0,135,40,185,0,30,41,44,0,1,44,1,0,1,41,0,2,135,40,186,0,31,44,41,30,79,40,3,0,41,40,40,8,79,41,2,0,20,40,40,41,0,6,40,0,2,40,0,0,255,255,0,0,19,40,6,40,0,7,40,0,1,41,0,2,1,44,0,0,135,40,185,0,30,41,44,0,1,40,0,2,4,4,29,40,1,44,1,0,135,40,186,0,31,44,4,30,121,4,13,0,41,40,6,4,0,3,40,0,1,2,0,0,2,40,0,0,228,5,120,1,82,40,40,0,3,44,2,3,90,41,31,2,95,40,44,41,25,2,2,1,53,41,2,4,120,161,0,0,1,2,0,0,2,41,0,0,176,161,50,0,41,44,2,2,3,3,41,44,82,4,3,0,121,4,9,0,106,5,4,4,121,5,3,0,135,44,140,0,5,0,0,0,135,44,77,0,4,0,0,0,1,44,0,0,85,3,44,0,25,2,2,1,33,44,2,20,120,44,240,255,78,31,33,0,41,41,31,24,42,41,41,24,34,41,41,0,121,41,4,0,82,41,8,0,0,44,41,0,119,0,3,0,19,41,31,36,0,44,41,0,120,44,65,0,1,41,0,0,1,40,255,255,2,43,0,0,187,202,203,1,1,42,0,0,135,44,92,0,34,41,40,43,42,0,0,0,120,44,54,0,1,44,96,0,135,31,33,0,44,0,0,0,2,44,0,0,10,206,52,0,84,44,7,0,41,44,6,4,0,1,44,0,2,44,0,0,32,206,52,0,85,44,1,0,2,44,0,0,4,206,52,0,84,44,7,0,2,44,0,0,20,206,52,0,85,44,1,0,2,44,0,0,8,206,52,0,1,42,0,128,84,44,42,0,2,42,0,0,28,206,52,0,2,44,0,0,0,0,8,0,85,42,44,0,2,44,0,0,84,205,52,0,2,42,0,0,254,255,0,0,85,44,42,0,1,44,3,0,134,42,0,0,12,154,1,0,7,44,0,0,1,42,96,0,135,1,33,0,42,0,0,0,52,42,31,1,20,163,0,0,43,42,1,16,0,31,42,0,2,42,0,0,6,206,52,0,84,42,31,0,2,42,0,0,24,206,52,0,41,44,31,4,85,42,44,0,2,44,0,0,100,205,52,0,84,44,1,0,119,0,4,0,1,32,125,0,119,0,2,0,1,32,125,0,32,44,32,125,121,44,44,0,1,44,0,0,47,44,44,1,168,163,0,0,1,44,48,11,135,31,0,0,44,0,0,0,2,44,0,0,10,206,52,0,84,44,31,0,2,44,0,0,32,206,52,0,2,42,0,0,255,255,0,0,19,42,31,42,41,42,42,4,85,44,42,0,1,42,48,11,135,31,0,0,42,0,0,0,2,42,0,0,4,206,52,0,84,42,31,0,2,42,0,0,20,206,52,0,2,44,0,0,255,255,0,0,19,44,31,44,41,44,44,4,85,42,44,0,2,42,0,0,255,255,0,0,19,42,1,42,134,44,0,0,12,154,1,0,7,42,0,0,119,0,8,0,1,32,129,0,119,0,6,0,1,32,129,0,119,0,4,0,1,32,129,0,119,0,2,0,1,32,129,0,1,44,129,0,45,44,32,44,136,165,0,0,135,44,188,0,0,0,0,0,135,44,190,0,2,44,0,0,13,221,3,0,135,32,169,0,44,0,0,0,85,18,1,0,135,44,170,0,0,32,18,0,1,1,0,0,1,42,0,124,3,42,1,42,90,43,20,1,135,44,11,0,42,43,0,0,25,1,1,1,1,44,0,2,55,44,1,44,0,164,0,0,2,44,0,0,252,204,52,0,82,44,44,0,39,44,44,1,33,44,44,3,82,43,19,0,33,43,43,0,19,44,44,43,121,44,6,0,1,43,2,0,135,44,191,0,43,0,0,0,1,43,1,0,107,44,23,43,1,44,4,0,2,42,0,0,83,255,0,240,135,43,1,0,44,42,0,0,1,42,12,0,2,44,0,0,83,255,0,240,135,43,1,0,42,44,0,0,2,43,0,0,6,206,52,0,1,44,0,0,84,43,44,0,2,44,0,0,24,206,52,0,1,43,0,0,85,44,43,0,2,43,0,0,100,205,52,0,1,44,0,124,84,43,44,0,2,44,0,0,10,206,52,0,1,43,0,0,84,44,43,0,2,43,0,0,32,206,52,0,1,44,0,0,85,43,44,0,2,44,0,0,4,206,52,0,1,43,0,0,84,44,43,0,2,43,0,0,20,206,52,0,1,44,0,0,85,43,44,0,2,44,0,0,8,206,52,0,1,43,0,112,84,44,43,0,2,43,0,0,28,206,52,0,2,44,0,0,0,0,7,0,85,43,44,0,2,44,0,0,84,205,52,0,1,43,0,1,85,44,43,0,2,43,0,0,92,205,52,0,1,44,0,0,85,43,44,0,2,44,0,0,72,205,52,0,1,43,1,0,85,44,43,0,2,43,0,0,88,205,52,0,1,44,0,0,85,43,44,0,2,44,0,0,68,205,52,0,1,43,0,0,85,44,43,0,2,43,0,0,76,205,52,0,1,44,0,0,85,43,44,0,2,44,0,0,80,205,52,0,1,43,0,124,85,44,43,0,119,0,1,0,78,43,33,0,34,43,43,0,121,43,4,0,82,44,34,0,135,43,77,0,44,0,0,0,137,35,0,0,139,0,0,0,140,0,16,0,0,0,0,0,136,12,0,0,0,11,12,0,136,12,0,0,25,12,12,112,137,12,0,0,25,2,11,80,25,3,11,64,25,7,11,32,0,8,11,0,25,10,11,96,2,12,0,0,248,204,52,0,82,12,12,0,2,13,0,0,40,3,4,0,1,14,174,3,1,15,0,0,135,9,192,0,12,13,14,15,1,14,175,3,1,13,0,0,135,15,193,0,9,14,13,0,25,0,2,11,1,15,10,0,83,0,15,0,0,4,2,0,2,5,0,0,44,3,4,0,25,6,4,10,78,15,5,0,83,4,15,0,25,4,4,1,25,5,5,1,54,15,4,6,44,166,0,0,1,13,0,0,107,2,10,13,1,13,0,0,1,15,0,0,135,1,194,0,9,2,13,15,78,15,0,0,34,15,15,0,121,15,4,0,82,13,2,0,135,15,77,0,13,0,0,0,1,15,80,0,135,0,79,0,15,0,0,0,85,2,0,0,2,13,0,0,80,0,0,128,109,2,8,13,1,15,65,0,109,2,4,15,0,4,0,0,2,5,0,0,55,3,4,0,25,6,4,65,78,15,5,0,83,4,15,0,25,4,4,1,25,5,5,1,54,15,4,6,168,166,0,0,1,13,0,0,107,0,65,13,135,13,195,0,1,2,0,0,102,13,2,11,34,13,13,0,121,13,4,0,82,15,2,0,135,13,77,0,15,0,0,0,1,13,0,0,85,2,13,0,1,15,0,0,109,2,4,15,1,13,0,0,109,2,8,13,25,6,2,11,1,13,5,0,83,6,13,0,2,13,0,0,121,3,4,0,78,13,13,0,83,2,13,0,2,15,0,0,122,3,4,0,78,15,15,0,107,2,1,15,2,13,0,0,123,3,4,0,78,13,13,0,107,2,2,13,2,15,0,0,124,3,4,0,78,15,15,0,107,2,3,15,2,13,0,0,125,3,4,0,78,13,13,0,107,2,4,13,1,15,0,0,107,2,5,15,1,15,0,0,1,13,0,0,135,0,194,0,9,2,15,13,78,13,6,0,34,13,13,0,121,13,4,0,82,15,2,0,135,13,77,0,15,0,0,0,1,13,160,0,135,6,79,0,13,0,0,0,85,2,6,0,2,15,0,0,160,0,0,128,109,2,8,15,1,13,150,0,109,2,4,13,2,15,0,0,127,3,4,0,1,14,150,0,135,13,80,0,6,15,14,0,1,13,150,0,1,14,0,0,95,6,13,14,135,14,195,0,0,2,0,0,102,14,2,11,34,14,14,0,121,14,4,0,82,13,2,0,135,14,77,0,13,0,0,0,1,14,16,0,135,0,79,0,14,0,0,0,85,2,0,0,2,13,0,0,16,0,0,128,109,2,8,13,1,14,14,0,109,2,4,14,0,4,0,0,2,5,0,0,22,4,4,0,25,6,4,14,78,14,5,0,83,4,14,0,25,4,4,1,25,5,5,1,54,14,4,6,36,168,0,0,1,13,0,0,107,0,14,13,1,13,0,0,2,14,0,0,37,4,4,0,135,0,196,0,9,2,13,14,102,14,2,11,34,14,14,0,121,14,4,0,82,13,2,0,135,14,77,0,13,0,0,0,1,14,16,1,135,6,79,0,14,0,0,0,85,2,6,0,2,13,0,0,16,1,0,128,109,2,8,13,1,14,11,1,109,2,4,14,2,13,0,0,41,4,4,0,1,15,11,1,135,14,80,0,6,13,15,0,1,14,11,1,1,15,0,0,95,6,14,15,135,15,195,0,0,2,0,0,102,15,2,11,34,15,15,0,121,15,4,0,82,14,2,0,135,15,77,0,14,0,0,0,1,15,32,0,135,0,79,0,15,0,0,0,85,2,0,0,2,14,0,0,32,0,0,128,109,2,8,14,1,15,16,0,109,2,4,15,0,4,0,0,2,5,0,0,53,5,4,0,25,6,4,16,78,15,5,0,83,4,15,0,25,4,4,1,25,5,5,1,54,15,4,6,8,169,0,0,1,14,0,0,107,0,16,14,1,14,0,0,2,15,0,0,70,5,4,0,135,0,196,0,9,2,14,15,102,15,2,11,34,15,15,0,121,15,4,0,82,14,2,0,135,15,77,0,14,0,0,0,1,15,112,0,135,1,79,0,15,0,0,0,85,2,1,0,2,14,0,0,112,0,0,128,109,2,8,14,1,15,106,0,109,2,4,15,0,4,1,0,2,5,0,0,79,5,4,0,25,6,4,106,78,15,5,0,83,4,15,0,25,4,4,1,25,5,5,1,54,15,4,6,136,169,0,0,1,14,0,0,107,1,106,14,135,14,195,0,0,2,0,0,102,14,2,11,34,14,14,0,121,14,4,0,82,15,2,0,135,14,77,0,15,0,0,0,2,14,0,0,224,24,2,0,82,14,14,0,85,2,14,0,2,15,0,0,228,24,2,0,82,15,15,0,109,2,4,15,2,14,0,0,232,24,2,0,82,14,14,0,109,2,8,14,2,15,0,0,236,24,2,0,82,15,15,0,109,2,12,15,1,15,0,0,85,3,15,0,1,14,0,0,109,3,4,14,1,15,0,0,109,3,8,15,25,6,3,11,1,15,6,0,83,6,15,0,2,15,0,0,186,5,4,0,78,15,15,0,83,3,15,0,2,14,0,0,187,5,4,0,78,14,14,0,107,3,1,14,2,15,0,0,188,5,4,0,78,15,15,0,107,3,2,15,2,14,0,0,189,5,4,0,78,14,14,0,107,3,3,14,2,15,0,0,190,5,4,0,78,15,15,0,107,3,4,15,2,14,0,0,191,5,4,0,78,14,14,0,107,3,5,14,1,15,0,0,107,3,6,15,1,15,0,0,2,14,0,0,11,102,4,0,135,0,196,0,9,3,15,14,78,14,6,0,34,14,14,0,121,14,4,0,82,15,3,0,135,14,77,0,15,0,0,0,1,14,48,0,135,1,79,0,14,0,0,0,85,3,1,0,2,15,0,0,48,0,0,128,109,3,8,15,1,14,36,0,109,3,4,14,0,4,1,0,2,5,0,0,193,5,4,0,25,6,4,36,78,14,5,0,83,4,14,0,25,4,4,1,25,5,5,1,54,14,4,6,244,170,0,0,1,15,0,0,107,1,36,15,135,15,195,0,0,3,0,0,102,15,3,11,34,15,15,0,121,15,4,0,82,14,3,0,135,15,77,0,14,0,0,0,135,15,197,0,0,2,0,0,2,15,0,0,240,24,2,0,82,15,15,0,85,3,15,0,2,14,0,0,244,24,2,0,82,14,14,0,109,3,4,14,2,15,0,0,248,24,2,0,82,15,15,0,109,3,8,15,2,14,0,0,252,24,2,0,82,14,14,0,109,3,12,14,1,14,0,0,85,7,14,0,1,15,0,0,109,7,4,15,1,14,0,0,109,7,8,14,25,6,7,11,1,14,8,0,83,6,14,0,0,0,7,0,2,14,0,0,114,101,110,100,85,0,14,0,2,15,0,0,101,114,101,114,109,0,4,15,1,14,0,0,107,7,8,14,1,14,0,0,2,15,0,0,159,2,4,0,135,0,196,0,9,7,14,15,78,15,6,0,34,15,15,0,121,15,4,0,82,14,7,0,135,15,77,0,14,0,0,0,1,15,112,0,135,1,79,0,15,0,0,0,85,7,1,0,2,14,0,0,112,0,0,128,109,7,8,14,1,15,104,0,109,7,4,15,0,4,1,0,2,5,0,0,230,5,4,0,25,6,4,104,78,15,5,0,83,4,15,0,25,4,4,1,25,5,5,1,54,15,4,6,36,172,0,0,1,14,0,0,107,1,104,14,135,14,195,0,0,7,0,0,102,14,7,11,34,14,14,0,121,14,4,0,82,15,7,0,135,14,77,0,15,0,0,0,135,14,197,0,0,3,0,0,1,14,0,0,85,7,14,0,1,15,0,0,109,7,4,15,1,14,0,0,109,7,8,14,25,6,7,11,1,14,8,0,83,6,14,0,0,0,7,0,2,14,0,0,97,117,116,111,85,0,14,0,2,15,0,0,108,111,99,107,109,0,4,15,1,14,0,0,107,7,8,14,1,14,0,0,1,15,1,0,135,0,194,0,9,7,14,15,78,15,6,0,34,15,15,0,121,15,4,0,82,14,7,0,135,15,77,0,14,0,0,0,1,15,96,0,135,1,79,0,15,0,0,0,85,7,1,0,2,14,0,0,96,0,0,128,109,7,8,14,1,15,85,0,109,7,4,15,0,4,1,0,2,5,0,0,79,6,4,0,25,6,4,85,78,15,5,0,83,4,15,0,25,4,4,1,25,5,5,1,54,15,4,6,16,173,0,0,1,14,0,0,107,1,85,14,135,14,195,0,0,7,0,0,102,14,7,11,34,14,14,0,121,14,4,0,82,15,7,0,135,14,77,0,15,0,0,0,1,14,16,0,135,0,79,0,14,0,0,0,85,7,0,0,2,15,0,0,16,0,0,128,109,7,8,15,1,14,11,0,109,7,4,14,0,4,0,0,2,5,0,0,165,6,4,0,25,6,4,11,78,14,5,0,83,4,14,0,25,4,4,1,25,5,5,1,54,14,4,6,132,173,0,0,1,15,0,0,107,0,11,15,1,15,0,0,1,14,100,0,135,0,198,0,9,7,15,14,102,14,7,11,34,14,14,0,121,14,4,0,82,15,7,0,135,14,77,0,15,0,0,0,1,14,0,0,85,7,14,0,1,15,1,0,109,7,8,15,1,14,3,0,109,7,24,14,1,14,0,0,85,8,14,0,1,15,232,3,109,8,8,15,1,14,3,0,109,8,24,14,135,14,199,0,0,7,8,0,135,14,200,0,8,0,0,0,135,14,200,0,7,0,0,0,1,14,32,0,135,1,79,0,14,0,0,0,85,7,1,0,2,15,0,0,32,0,0,128,109,7,8,15,1,14,18,0,109,7,4,14,0,4,1,0,2,5,0,0,177,6,4,0,25,6,4,18,78,14,5,0,83,4,14,0,25,4,4,1,25,5,5,1,54,14,4,6,72,174,0,0,1,15,0,0,107,1,18,15,135,15,195,0,0,7,0,0,102,15,7,11,34,15,15,0,121,15,4,0,82,14,7,0,135,15,77,0,14,0,0,0,1,15,16,0,135,0,79,0,15,0,0,0,85,7,0,0,2,14,0,0,16,0,0,128,109,7,8,14,1,15,11,0,109,7,4,15,0,4,0,0,2,5,0,0,196,6,4,0,25,6,4,11,78,15,5,0,83,4,15,0,25,4,4,1,25,5,5,1,54,15,4,6,188,174,0,0,1,14,0,0,107,0,11,14,1,14,0,0,1,15,1,0,135,0,194,0,9,7,14,15,102,15,7,11,34,15,15,0,121,15,4,0,82,14,7,0,135,15,77,0,14,0,0,0,1,15,64,0,135,1,79,0,15,0,0,0,85,7,1,0,2,14,0,0,64,0,0,128,109,7,8,14,1,15,55,0,109,7,4,15,0,4,1,0,2,5,0,0,208,6,4,0,25,6,4,55,78,15,5,0,83,4,15,0,25,4,4,1,25,5,5,1,54,15,4,6,56,175,0,0,1,14,0,0,107,1,55,14,135,14,195,0,0,7,0,0,102,14,7,11,34,14,14,0,121,14,4,0,82,15,7,0,135,14,77,0,15,0,0,0,1,14,0,0,85,7,14,0,1,15,0,0,109,7,4,15,1,14,0,0,109,7,8,14,25,0,7,11,1,14,8,0,83,0,14,0,0,6,7,0,2,14,0,0,112,114,105,111,85,6,14,0,2,15,0,0,114,105,116,121,109,6,4,15,1,14,0,0,107,7,8,14,1,14,0,0,85,8,14,0,1,15,0,0,109,8,4,15,1,14,0,0,109,8,8,14,25,6,8,11,1,14,1,0,83,6,14,0,1,14,44,0,83,8,14,0,1,15,0,0,107,8,1,15,1,15,0,0,135,2,201,0,9,7,15,8,78,15,6,0,34,15,15,0,121,15,4,0,82,14,8,0,135,15,77,0,14,0,0,0,78,15,0,0,34,15,15,0,121,15,4,0,82,14,7,0,135,15,77,0,14,0,0,0,82,15,2,0,82,0,15,0,1,15,16,0,135,1,79,0,15,0,0,0,85,7,1,0,2,14,0,0,16,0,0,128,109,7,8,14,1,15,13,0,109,7,4,15,0,4,1,0,2,5,0,0,8,7,4,0,25,6,4,13,78,15,5,0,83,4,15,0,25,4,4,1,25,5,5,1,54,15,4,6,108,176,0,0,1,14,0,0,107,1,13,14,1,15,255,0,19,15,0,15,135,14,13,0,15,2,7,0,102,14,7,11,34,14,14,0,121,14,4,0,82,15,7,0,135,14,77,0,15,0,0,0,1,14,160,0,135,6,79,0,14,0,0,0,85,7,6,0,2,15,0,0,160,0,0,128,109,7,8,15,1,14,146,0,109,7,4,14,2,15,0,0,22,7,4,0,1,13,146,0,135,14,80,0,6,15,13,0,1,14,146,0,1,13,0,0,95,6,14,13,135,13,195,0,2,7,0,0,102,13,7,11,34,13,13,0,121,13,4,0,82,14,7,0,135,13,77,0,14,0,0,0,2,13,0,0,0,25,2,0,82,13,13,0,85,7,13,0,2,14,0,0,4,25,2,0,82,14,14,0,109,7,4,14,2,13,0,0,8,25,2,0,82,13,13,0,109,7,8,13,2,14,0,0,12,25,2,0,82,14,14,0,109,7,12,14,2,13,0,0,16,25,2,0,82,13,13,0,109,7,16,13,2,14,0,0,20,25,2,0,82,14,14,0,109,7,20,14,2,13,0,0,24,25,2,0,82,13,13,0,109,7,24,13,25,0,2,100,82,1,0,0,1,13,0,0,85,8,13,0,1,14,0,0,109,8,4,14,1,13,0,0,109,8,8,13,25,6,8,11,1,13,6,0,83,6,13,0,2,13,0,0,169,7,4,0,78,13,13,0,83,8,13,0,2,14,0,0,170,7,4,0,78,14,14,0,107,8,1,14,2,13,0,0,171,7,4,0,78,13,13,0,107,8,2,13,2,14,0,0,172,7,4,0,78,14,14,0,107,8,3,14,2,13,0,0,173,7,4,0,78,13,13,0,107,8,4,13,2,14,0,0,174,7,4,0,78,14,14,0,107,8,5,14,1,13,0,0,107,8,6,13,1,13,0,0,2,14,0,0,176,7,4,0,135,1,196,0,1,8,13,14,78,14,6,0,34,14,14,0,121,14,4,0,82,13,8,0,135,14,77,0,13,0,0,0,135,14,197,0,1,7,0,0,2,14,0,0,0,25,2,0,82,14,14,0,85,8,14,0,2,13,0,0,4,25,2,0,82,13,13,0,109,8,4,13,2,14,0,0,8,25,2,0,82,14,14,0,109,8,8,14,2,13,0,0,12,25,2,0,82,13,13,0,109,8,12,13,2,14,0,0,16,25,2,0,82,14,14,0,109,8,16,14,2,13,0,0,20,25,2,0,82,13,13,0,109,8,20,13,2,14,0,0,24,25,2,0,82,14,14,0,109,8,24,14,82,0,0,0,1,14,0,0,85,10,14,0,1,13,0,0,109,10,4,13,1,14,0,0,109,10,8,14,25,7,10,11,1,14,8,0,83,7,14,0,0,6,10,0,2,14,0,0,105,110,97,99,85,6,14,0,2,13,0,0,116,105,118,101,109,6,4,13,1,14,0,0,107,10,8,14,1,14,0,0,2,13,0,0,183,7,4,0,135,0,196,0,0,10,14,13,78,13,7,0,34,13,13,0,121,13,4,0,82,14,10,0,135,13,77,0,14,0,0,0,135,13,197,0,0,8,0,0,25,0,10,11,1,13,10,0,83,0,13,0,0,4,10,0,2,5,0,0,61,27,4,0,25,6,4,10,78,13,5,0,83,4,13,0,25,4,4,1,25,5,5,1,54,13,4,6,92,179,0,0,1,14,0,0,107,10,10,14,1,14,0,0,2,13,0,0,190,7,4,0,135,1,202,0,9,10,14,13,78,13,0,0,34,13,13,0,121,13,4,0,82,14,10,0,135,13,77,0,14,0,0,0,1,13,112,0,135,0,79,0,13,0,0,0,85,10,0,0,2,14,0,0,112,0,0,128,109,10,8,14,1,13,98,0,109,10,4,13,0,4,0,0,2,5,0,0,205,7,4,0,25,6,4,98,78,13,5,0,83,4,13,0,25,4,4,1,25,5,5,1,54,13,4,6,220,179,0,0,1,14,0,0,107,0,98,14,135,14,195,0,1,10,0,0,1,14,0,0,102,13,10,11,49,14,14,13,28,180,0,0,137,11,0,0,139,0,0,0,82,13,10,0,135,14,77,0,13,0,0,0,137,11,0,0,139,0,0,0,140,2,64,0,0,0,0,0,2,54,0,0,138,83,4,0,2,55,0,0,176,202,203,1,2,56,0,0,220,84,4,0,2,57,0,0,251,84,4,0,2,58,0,0,0,202,154,59,2,59,0,0,3,85,4,0,1,52,0,0,136,60,0,0,0,53,60,0,136,60,0,0,1,61,240,3,3,60,60,61,137,60,0,0,1,60,160,3,3,50,53,60,1,60,152,3,3,46,53,60,1,60,144,3,3,45,53,60,1,60,128,3,3,51,53,60,1,60,112,3,3,47,53,60,1,60,104,3,3,44,53,60,1,60,96,3,3,40,53,60,1,60,88,3,3,39,53,60,1,60,72,3,3,38,53,60,1,60,56,3,3,37,53,60,1,60,48,3,3,35,53,60,1,60,16,3,3,34,53,60,1,60,8,3,3,33,53,60,1,60,0,3,3,32,53,60,1,60,240,2,3,31,53,60,1,60,224,2,3,30,53,60,1,60,216,2,3,29,53,60,1,60,184,2,3,28,53,60,1,60,176,2,3,27,53,60,1,60,168,2,3,26,53,60,1,60,160,2,3,25,53,60,1,60,152,2,3,10,53,60,1,60,144,2,3,7,53,60,1,60,136,2,3,8,53,60,1,60,128,2,3,5,53,60,1,60,120,2,3,3,53,60,1,60,112,2,3,2,53,60,1,60,80,2,3,48,53,60,1,60,0,2,3,6,53,60,1,60,208,3,3,49,53,60,0,9,53,0,1,60,196,3,3,36,53,60,1,60,180,3,3,41,53,60,1,60,168,3,3,42,53,60,1,60,222,3,3,43,53,60,1,60,220,3,3,23,53,60,1,60,224,3,3,24,53,60,2,61,0,0,215,76,4,0,135,60,168,0,1,61,0,0,121,60,35,0,2,62,0,0,176,74,4,0,135,61,169,0,62,0,0,0,1,62,96,2,3,62,53,62,135,60,170,0,0,61,62,0,2,60,0,0,92,84,4,0,135,1,169,0,60,0,0,0,2,62,0,0,92,154,4,0,1,61,104,2,3,61,53,61,135,60,170,0,0,62,61,0,2,61,0,0,241,76,4,0,135,60,86,0,61,1,0,0,120,60,8,0,2,61,0,0,116,84,4,0,135,60,170,0,0,61,3,0,137,53,0,0,139,0,0,0,119,0,5,0,135,60,170,0,0,1,2,0,137,53,0,0,139,0,0,0,1,60,0,0,85,49,60,0,1,61,0,0,109,49,4,61,1,60,0,0,109,49,8,60,2,61,0,0,121,84,4,0,135,60,203,0,0,61,49,0,121,60,89,0,1,62,61,0,1,63,0,0,135,61,204,0,49,62,63,0,25,61,61,1,1,63,255,255,135,60,205,0,9,49,61,63,49,0,0,0,1,60,0,0,85,42,60,0,1,63,0,0,109,42,4,63,1,60,0,0,109,42,8,60,135,3,55,0,1,0,0,0,1,60,239,255,48,60,60,3,200,182,0,0,135,60,87,0,42,0,0,0,35,60,3,11,121,60,8,0,107,42,11,3,120,3,3,0,0,1,42,0,119,0,16,0,0,2,42,0,1,52,11,0,119,0,13,0,25,60,3,16,38,60,60,240,0,52,60,0,135,2,79,0,52,0,0,0,85,42,2,0,2,63,0,0,0,0,0,128,20,63,52,63,109,42,8,63,109,42,4,3,1,52,11,0,32,63,52,11,121,63,4,0,135,63,80,0,2,1,3,0,0,1,2,0,1,60,0,0,95,1,3,60,135,60,206,0,41,42,54,0,135,60,161,0,36,41,9,0,135,60,145,0,49,36,0,0,102,60,36,11,34,60,60,0,121,60,4,0,82,63,36,0,135,60,77,0,63,0,0,0,102,60,41,11,34,60,60,0,121,60,4,0,82,63,41,0,135,60,77,0,63,0,0,0,102,60,42,11,34,60,60,0,121,60,4,0,82,63,42,0,135,60,77,0,63,0,0,0,102,63,49,11,34,63,63,0,121,63,4,0,82,63,49,0,0,60,63,0,119,0,2,0,0,60,49,0,0,1,60,0,102,60,9,11,34,60,60,0,121,60,4,0,82,63,9,0,135,60,77,0,63,0,0,0,2,60,0,0,15,160,4,0,135,2,168,0,1,60,0,0,2,63,0,0,7,160,4,0,135,60,168,0,1,63,0,0,2,60,0,0,1,160,4,0,135,3,168,0,1,60,0,0,2,63,0,0,128,84,4,0,135,60,168,0,1,63,0,0,121,60,3,0,1,52,23,0,119,0,7,0,2,63,0,0,131,84,4,0,135,60,168,0,1,63,0,0,121,60,2,0,1,52,23,0,32,60,52,23,121,60,3,0,1,2,1,0,1,3,1,0,2,60,0,0,233,159,4,0,135,20,168,0,1,60,0,0,2,60,0,0,134,84,4,0,135,21,168,0,1,60,0,0,135,4,172,0,1,0,0,0,120,4,138,2,135,4,207,0,1,0,0,0,135,1,55,0,4,0,0,0,120,1,4,0,0,1,4,0,1,52,29,0,119,0,46,0,26,60,1,1,90,60,4,60,1,63,58,0,1,61,35,0,138,60,63,61,52,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,48,185,0,0,56,185,0,0,119,0,5,0,119,0,2,0,119,0,1,0,3,1,4,1,1,52,29,0,32,60,52,29,121,60,9,0,1,60,42,0,83,1,60,0,1,63,46,0,107,1,1,63,1,60,42,0,107,1,2,60,1,63,0,0,107,1,3,63,78,63,4,0,32,63,63,46,121,63,113,0,102,63,4,1,1,61,0,0,1,60,93,0,138,63,61,60,24,187,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,40,187,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,252,186,0,0,52,187,0,0,1,60,42,0,83,9,60,0,1,61,0,0,107,9,1,61,135,61,177,0,9,4,0,0,119,0,11,0,2,60,0,0,42,46,42,0,85,9,60,0,119,0,7,0,135,60,78,0,9,4,0,0,119,0,4,0,119,0,253,255,135,63,78,0,9,4,0,0,1,61,42,0,135,63,84,0,9,61,0,0,120,63,36,0,1,61,63,0,135,63,84,0,9,61,0,0,120,63,32,0,1,63,0,0,84,36,63,0,135,63,49,0,9,36,0,0,121,63,27,0,80,63,36,0,38,63,63,16,121,63,24,0,135,63,55,0,9,0,0,0,3,22,9,63,2,63,0,0,173,82,4,0,78,63,63,0,83,22,63,0,2,61,0,0,174,82,4,0,78,61,61,0,107,22,1,61,2,63,0,0,175,82,4,0,78,63,63,0,107,22,2,63,2,61,0,0,176,82,4,0,78,61,61,0,107,22,3,61,2,63,0,0,177,82,4,0,78,63,63,0,107,22,4,63,1,61,46,0,135,63,84,0,9,61,0,0,120,63,16,0,135,63,55,0,9,0,0,0,3,22,9,63,2,63,0,0,137,84,4,0,78,63,63,0,83,22,63,0,2,61,0,0,138,84,4,0,78,61,61,0,107,22,1,61,2,63,0,0,139,84,4,0,78,63,63,0,107,22,2,63,135,63,71,0,9,6,0,0,121,63,146,1,1,61,92,0,135,63,84,0,6,61,0,0,1,61,0,0,107,63,1,61,120,20,8,0,2,61,0,0,140,84,4,0,135,22,169,0,61,0,0,0,85,7,6,0,135,61,170,0,0,22,7,0,1,61,44,11,135,22,33,0,61,0,0,0,1,63,44,11,2,60,0,0,208,201,203,1,82,60,60,0,135,61,1,0,63,60,0,0,1,61,44,11,135,19,33,0,61,0,0,0,43,61,19,16,41,61,61,4,2,60,0,0,255,255,0,0,19,60,19,60,3,61,61,60,85,36,61,0,1,60,247,255,1,63,0,0,135,61,59,0,9,60,63,0,121,61,97,1,1,61,110,0,1,63,22,0,125,19,2,61,63,0,0,0,38,63,2,1,0,18,63,0,1,17,0,0,1,5,0,0,1,6,0,0,1,7,0,0,1,1,0,0,135,63,85,0,36,41,42,43,23,24,0,0,121,21,8,0,78,63,24,0,38,63,63,16,120,63,3,0,0,4,17,0,119,0,4,0,1,52,55,0,119,0,2,0,1,52,55,0,32,63,52,55,121,63,180,0,1,52,0,0,121,20,22,0,2,61,0,0,199,171,4,0,135,63,86,0,61,41,0,0,120,63,3,0,0,4,17,0,119,0,164,0,2,61,0,0,114,85,4,0,135,63,86,0,61,41,0,0,120,63,3,0,0,4,17,0,119,0,157,0,85,25,41,0,2,61,0,0,215,73,4,0,135,63,170,0,0,61,25,0,0,4,17,0,119,0,150,0,78,63,41,0,32,63,63,46,20,63,2,63,121,63,4,0,2,4,0,0,176,202,203,1,119,0,11,0,1,63,46,0,135,4,84,0,41,63,0,0,120,4,4,0,2,4,0,0,176,202,203,1,119,0,4,0,1,63,0,0,83,4,63,0,25,4,4,1,81,10,43,0,38,63,10,31,0,8,63,0,43,63,10,5,38,63,63,15,0,9,63,0,43,63,10,9,1,61,188,7,3,10,63,61,80,12,23,0,2,61,0,0,255,255,0,0,19,61,12,61,43,61,61,11,2,63,0,0,255,255,0,0,19,61,61,63,0,11,61,0,2,61,0,0,255,255,0,0,19,61,12,61,43,61,61,5,38,61,61,63,0,12,61,0,78,61,24,0,38,61,61,16,120,61,68,0,121,2,7,0,85,29,41,0,2,63,0,0,214,84,4,0,135,61,170,0,0,63,29,0,119,0,57,0,82,13,42,0,1,61,232,3,7,15,13,61,1,61,232,3,5,61,15,61,4,14,13,61,1,61,232,3,9,15,15,61,2,61,0,0,64,66,15,0,7,61,13,61,1,63,232,3,9,16,61,63,2,63,0,0,255,201,154,59,48,63,63,13,184,190,0,0,7,63,13,58,85,30,63,0,109,30,4,16,109,30,8,15,109,30,12,14,135,63,208,0,48,56,30,0,119,0,20,0,121,16,9,0,85,31,16,0,109,31,4,15,109,31,8,14,2,61,0,0,238,84,4,0,135,63,208,0,48,61,31,0,119,0,11,0,120,15,5,0,85,33,14,0,135,63,208,0,48,59,33,0,119,0,6,0,85,32,15,0,109,32,4,14,135,63,208,0,48,57,32,0,119,0,1,0,85,34,41,0,109,34,4,4,109,34,8,48,109,34,12,8,109,34,16,9,109,34,20,10,109,34,24,11,109,34,28,12,2,61,0,0,6,85,4,0,135,63,170,0,0,61,34,0,82,63,42,0,3,4,63,17,25,5,5,1,119,0,38,0,121,2,21,0,85,26,41,0,2,61,0,0,160,84,4,0,135,63,170,0,0,61,26,0,135,4,55,0,41,0,0,0,1,63,15,0,57,63,63,4,208,191,0,0,1,63,14,0,4,4,63,4,120,4,2,0,119,0,21,0,135,63,170,0,0,54,27,0,26,4,4,1,33,63,4,0,120,63,252,255,119,0,15,0,85,28,41,0,109,28,4,4,2,61,0,0,208,84,4,0,109,28,8,61,109,28,12,8,109,28,16,9,109,28,20,10,109,28,24,11,109,28,28,12,2,63,0,0,165,84,4,0,135,61,170,0,0,63,28,0,0,4,17,0,25,6,6,1,3,7,7,18,121,3,7,0,25,1,1,1,9,61,1,19,120,61,4,0,134,61,0,0,144,149,1,0,0,55,0,0,135,61,60,0,121,61,3,0,0,17,4,0,119,0,60,255,31,61,7,5,32,61,61,0,40,63,2,1,20,61,61,63,120,61,5,0,2,63,0,0,92,154,4,0,135,61,170,0,0,63,35,0,120,20,131,0,1,61,232,3,7,2,4,61,1,61,232,3,5,61,2,61,4,1,4,61,1,61,232,3,9,2,2,61,2,61,0,0,64,66,15,0,7,61,4,61,1,63,232,3,9,3,61,63,2,63,0,0,255,201,154,59,48,63,63,4,144,192,0,0,7,63,4,58,85,37,63,0,109,37,4,3,109,37,8,2,109,37,12,1,135,63,208,0,48,56,37,0,119,0,20,0,121,3,9,0,85,38,3,0,109,38,4,2,109,38,8,1,2,61,0,0,238,84,4,0,135,63,208,0,48,61,38,0,119,0,11,0,120,2,5,0,85,40,1,0,135,63,208,0,48,59,40,0,119,0,6,0,85,39,2,0,109,39,4,1,135,63,208,0,48,57,39,0,119,0,1,0,2,63,0,0,48,85,4,0,135,1,169,0,63,0,0,0,85,44,5,0,109,44,4,48,135,63,170,0,0,1,44,0,2,63,0,0,96,206,5,0,135,61,209,0,36,0,0,0,1,60,255,0,19,61,61,60,41,61,61,2,94,1,63,61,120,1,6,0,1,3,104,0,1,2,89,3,1,1,88,2,1,52,100,0,119,0,49,0,82,61,1,0,106,61,61,48,38,61,61,63,135,63,210,0,61,1,44,41,42,43,0,0,79,63,41,0,81,61,44,0,5,4,63,61,81,61,43,0,5,4,4,61,1,61,232,3,7,2,4,61,1,61,232,3,5,61,2,61,4,1,4,61,1,61,232,3,9,2,2,61,2,61,0,0,64,66,15,0,7,61,4,61,1,63,232,3,9,3,61,63,2,63,0,0,255,201,154,59,48,63,63,4,192,193,0,0,7,63,4,58,85,47,63,0,109,47,4,3,109,47,8,2,109,47,12,1,135,63,208,0,48,56,47,0,119,0,14,0,121,3,3,0,1,52,100,0,119,0,11,0,120,2,5,0,85,46,1,0,135,63,208,0,48,59,46,0,119,0,6,0,85,45,2,0,109,45,4,1,135,63,208,0,48,57,45,0,119,0,1,0,32,63,52,100,121,63,8,0,85,51,3,0,109,51,4,2,109,51,8,1,2,61,0,0,238,84,4,0,135,63,208,0,48,61,51,0,2,63,0,0,73,85,4,0,135,52,169,0,63,0,0,0,85,50,6,0,109,50,4,48,135,63,170,0,0,52,50,0,1,61,44,11,135,63,1,0,61,22,0,0,119,0,27,0,120,20,8,0,2,63,0,0,85,77,4,0,135,52,169,0,63,0,0,0,85,10,9,0,135,63,170,0,0,52,10,0,1,61,44,11,135,63,1,0,61,22,0,0,119,0,15,0,2,60,0,0,185,78,4,0,135,61,169,0,60,0,0,0,135,63,170,0,0,61,8,0,119,0,8,0,2,63,0,0,10,79,4,0,135,52,169,0,63,0,0,0,85,5,4,0,135,63,170,0,0,52,5,0,102,63,49,11,34,63,63,0,121,63,4,0,82,61,49,0,135,63,77,0,61,0,0,0,137,53,0,0,139,0,0,0,140,3,22,0,0,0,0,0,2,15,0,0,144,244,7,0,2,16,0,0,121,1,94,0,2,17,0,0,255,255,0,0,1,12,0,0,136,18,0,0,0,14,18,0,136,18,0,0,1,19,32,4,3,18,18,19,137,18,0,0,1,18,24,4,3,11,14,18,1,18,16,4,3,8,14,18,1,18,8,4,3,7,14,18,1,18,0,4,3,0,14,18,1,18,0,2,3,4,14,18,0,5,14,0,1,18,30,4,3,9,14,18,1,18,28,4,3,10,14,18,135,18,78,0,4,1,0,0,2,19,0,0,134,29,4,0,135,18,86,0,4,19,0,0,120,18,4,0,1,2,0,0,137,14,0,0,139,2,0,0,2,18,0,0,176,201,203,1,81,18,18,0,45,18,18,2,144,195,0,0,1,2,0,0,137,14,0,0,139,2,0,0,2,19,0,0,159,2,4,0,135,18,86,0,4,19,0,0,120,18,147,18,1,18,91,3,47,18,2,18,40,208,0,0,1,19,113,0,1,18,234,2,138,2,19,18,108,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0],eb+40960);HEAPU8.set([100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,116,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,148,207,0,0,156,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,160,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,168,207,0,0,212,207,0,0,220,207,0,0,224,207,0,0,228,207,0,0,232,207,0,0,100,207,0,0,240,207,0,0,244,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,248,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,252,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,100,207,0,0,0,208,0,0,8,208,0,0,12,208,0,0,16,208,0,0,20,208,0,0,24,208,0,0,100,207,0,0,28,208,0,0,100,207,0,0,32,208,0,0,36,208,0,0,1,12,15,0,119,0,73,15,1,12,10,0,119,0,71,15,0,6,4,0,2,18,0,0,69,71,65,46,85,6,18,0,2,19,0,0,67,80,73,0,109,6,4,19,119,0,151,15,1,12,14,0,119,0,61,15,119,0,254,255,1,12,9,0,119,0,58,15,0,0,4,0,2,1,0,0,173,237,3,0,25,3,0,9,78,19,1,0,83,0,19,0,25,0,0,1,25,1,1,1,54,19,0,3,184,207,0,0,119,0,135,15,1,12,7,0,119,0,45,15,119,0,254,255,119,0,242,255,119,0,241,255,1,12,6,0,119,0,40,15,119,0,238,255,119,0,237,255,119,0,231,255,119,0,246,255,1,12,8,0,119,0,34,15,119,0,254,255,119,0,218,255,119,0,228,255,119,0,216,255,119,0,215,255,119,0,238,255,119,0,213,255,119,0,212,255,1,19,93,4,47,19,2,19,192,212,0,0,1,19,91,3,1,18,2,1,138,2,19,18,80,212,0,0,88,212,0,0,92,212,0,0,72,212,0,0,96,212,0,0,72,212,0,0,100,212,0,0,104,212,0,0,112,212,0,0,72,212,0,0,120,212,0,0,72,212,0,0,72,212,0,0,128,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,132,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,140,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,72,212,0,0,144,212,0,0,1,12,15,0,119,0,16,14,1,12,6,0,119,0,14,14,119,0,15,0,119,0,14,0,119,0,13,0,119,0,12,0,1,12,7,0,119,0,8,14,1,12,14,0,119,0,6,14,1,12,9,0,119,0,4,14,119,0,250,255,1,12,10,0,119,0,1,14,119,0,249,255,119,0,240,255,0,0,4,0,2,1,0,0,182,237,3,0,25,3,0,9,78,19,1,0,83,0,19,0,25,0,0,1,25,1,1,1,54,19,0,3,164,212,0,0,119,0,76,14,2,19,0,0,98,231,0,0,47,19,2,19,36,220,0,0,2,19,0,0,181,225,0,0,47,19,2,19,68,213,0,0,1,19,93,4,1,18,15,0,138,2,19,18,48,213,0,0,40,213,0,0,40,213,0,0,40,213,0,0,40,213,0,0,40,213,0,0,40,213,0,0,40,213,0,0,56,213,0,0,40,213,0,0,40,213,0,0,40,213,0,0,40,213,0,0,40,213,0,0,64,213,0,0,1,12,15,0,119,0,216,13,1,12,6,0,119,0,214,13,1,12,8,0,119,0,212,13,119,0,254,255,2,19,0,0,181,225,0,0,1,18,174,1,138,2,19,18,20,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,28,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,12,220,0,0,32,220,0,0,1,12,15,0,119,0,31,12,1,12,14,0,119,0,29,12,119,0,17,12,119,0,16,12,2,19,0,0,98,231,0,0,1,18,1,12,138,2,19,18,64,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,68,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,76,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0],eb+51200);HEAPU8.set([56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,80,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,84,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,56,12,1,0,92,12,1,0,1,12,15,0,119,0,20,0,119,0,8,0,1,12,10,0,119,0,17,0,119,0,5,0,119,0,253,255,1,12,8,0,119,0,13,0,119,0,1,0,0,0,4,0,2,1,0,0,164,237,3,0,25,3,0,9,78,19,1,0,83,0,19,0,25,0,0,1,25,1,1,1,54,19,0,3,112,12,1,0,119,0,89,0,32,19,12,6,121,19,12,0,0,0,4,0,2,1,0,0,119,237,3,0,25,3,0,9,78,19,1,0,83,0,19,0,25,0,0,1,25,1,1,1,54,19,0,3,164,12,1,0,119,0,76,0,32,19,12,7,121,19,12,0,0,0,4,0,2,1,0,0,128,237,3,0,25,3,0,9,78,19,1,0,83,0,19,0,25,0,0,1,25,1,1,1,54,19,0,3,216,12,1,0,119,0,63,0,32,19,12,8,121,19,12,0,0,0,4,0,2,1,0,0,137,237,3,0,25,3,0,9,78,19,1,0,83,0,19,0,25,0,0,1,25,1,1,1,54,19,0,3,12,13,1,0,119,0,50,0,32,19,12,9,121,19,12,0,0,0,4,0,2,1,0,0,146,237,3,0,25,3,0,9,78,19,1,0,83,0,19,0,25,0,0,1,25,1,1,1,54,19,0,3,64,13,1,0,119,0,37,0,32,19,12,10,121,19,12,0,0,0,4,0,2,1,0,0,155,237,3,0,25,3,0,9,78,19,1,0,83,0,19,0,25,0,0,1,25,1,1,1,54,19,0,3,116,13,1,0,119,0,24,0,32,19,12,14,121,19,12,0,0,0,4,0,2,1,0,0,191,237,3,0,25,3,0,10,78,19,1,0,83,0,19,0,25,0,0,1,25,1,1,1,54,19,0,3,168,13,1,0,119,0,11,0,32,19,12,15,121,19,9,0,85,0,2,0,2,18,0,0,201,237,3,0,135,19,34,0,18,0,0,0,1,2,4,0,137,14,0,0,139,2,0,0,135,18,55,0,4,0,0,0,25,18,18,1,135,19,80,0,5,4,18,0,135,0,211,0,5,0,0,0,120,0,4,2,135,0,55,0,5,0,0,0,121,0,34,0,26,19,0,1,3,1,5,19,79,18,1,0,135,19,72,0,18,0,0,0,41,19,19,24,0,0,19,0,2,19,0,0,0,0,0,88,47,19,0,19,100,14,1,0,2,19,0,0,0,0,0,73,1,18,1,0,138,0,19,18,92,14,1,0,119,0,17,0,1,0,88,0,119,0,9,0,2,19,0,0,0,0,0,88,1,18,1,0,138,0,19,18,124,14,1,0,119,0,9,0,119,0,1,0,1,0,73,0,83,1,0,0,135,0,211,0,5,0,0,0,121,0,3,0,1,12,25,0,119,0,225,1,1,19,181,1,1,20,180,1,138,2,19,20,128,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,160,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,196,21,1,0,232,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,236,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,240,21,1,0,244,21,1,0,248,21,1,0,252,21,1,0,120,21,1,0,0,22,1,0,120,21,1,0,4,22,1,0,8,22,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,120,21,1,0,12,22,1,0,120,21,1,0,120,21,1,0,16,22,1,0,120,21,1,0,120,21,1,0,20,22,1,0,1,13,4,0,119,0,40,0,1,18,112,124,1,20,178,24,135,19,80,0,15,18,20,0,1,1,178,24,1,0,41,0,1,12,42,0,119,0,32,0,2,18,0,0,128,170,0,0,1,20,88,22,135,19,80,0,15,18,20,0,1,1,88,22,1,0,41,0,1,12,42,0,119,0,23,0,2,20,0,0,48,149,0,0,1,18,79,21,135,19,80,0,15,20,18,0,1,1,79,21,1,0,41,0,1,12,42,0,119,0,14,0,119,0,247,255,119,0,246,255,119,0,228,255,119,0,235,255,119,0,226,255,119,0,225,255,119,0,241,255,119,0,223,255,119,0,222,255,119,0,238,255,119,0,228,255,119,0,236,255,1,12,25,0,32,19,12,25,121,19,181,0,1,20,1,0,1,18,5,0,135,19,186,0,15,20,18,0,35,19,19,5,121,19,3,0,1,13,4,0,119,0,173,0,78,1,15,0,2,19,0,0,145,244,7,0,78,3,19,0,2,19,0,0,146,244,7,0,78,4,19,0,2,19,0,0,147,244,7,0,78,5,19,0,2,19,0,0,148,244,7,0,78,6,19,0,41,19,1,24,42,19,19,24,32,19,19,255,41,18,3,24,42,18,18,24,32,18,18,70,19,19,19,18,41,18,4,24,42,18,18,24,32,18,18,79,19,19,19,18,41,18,5,24,42,18,18,24,32,18,18,78,19,19,19,18,41,18,6,24,42,18,18,24,32,18,18,84,19,19,19,18,121,19,12,0,1,18,0,0,1,20,0,0,135,19,185,0,0,18,20,0,1,20,1,0,2,18,0,0,0,0,1,0,135,19,186,0,15,20,18,0,1,12,45,0,119,0,129,0,41,19,1,24,42,19,19,24,33,19,19,127,41,18,3,24,42,18,18,24,32,18,18,68,20,19,19,18,41,18,4,24,42,18,18,24,32,18,18,82,20,19,19,18,41,18,5,24,42,18,18,24,32,18,18,70,20,19,19,18,41,18,6,24,42,18,18,24,32,18,18,95,20,19,19,18,121,19,108,0,1,19,0,0,83,9,19,0,1,1,5,0,1,5,0,0,1,18,1,0,1,20,1,0,135,19,186,0,9,18,20,0,25,19,1,1,41,19,19,16,42,19,19,16,0,1,19,0,78,19,9,0,32,19,19,85,121,19,47,0,0,4,1,0,1,20,1,0,1,18,1,0,135,19,186,0,9,20,18,0,25,19,4,1,41,19,19,16,42,19,19,16,0,1,19,0,78,3,9,0,41,19,3,24,42,19,19,24,32,19,19,80,121,19,27,0,1,18,1,0,1,20,1,0,135,19,186,0,9,18,20,0,25,19,4,2,41,19,19,16,42,19,19,16,0,1,19,0,78,3,9,0,41,19,3,24,42,19,19,24,32,19,19,88,121,19,14,0,1,20,1,0,1,18,1,0,135,19,186,0,9,20,18,0,78,3,9,0],eb+61440);HEAPU8.set([41,19,3,24,42,19,19,24,32,19,19,33,120,19,18,0,25,19,4,3,41,19,19,16,42,19,19,16,0,1,19,0,41,19,3,24,42,19,19,24,32,19,19,85,121,19,3,0,0,4,1,0,119,0,212,255,25,5,5,1,1,19,100,0,50,19,19,5,80,24,1,0,1,12,38,0,119,0,2,0,119,0,193,255,32,19,12,38,121,19,3,0,1,13,4,0,119,0,37,0,1,18,1,0,1,20,1,0,135,19,186,0,9,18,20,0,79,19,9,0,34,19,19,10,121,19,5,0,2,20,0,0,238,237,3,0,135,19,7,0,20,7,0,0,1,20,0,0,1,18,0,0,135,19,185,0,0,20,18,0,1,19,1,0,2,18,0,0,0,0,1,0,135,1,186,0,15,19,18,0,2,18,0,0,0,254,0,0,48,18,18,1,216,24,1,0,2,19,0,0,31,238,3,0,135,18,7,0,19,8,0,0,119,0,8,0,25,18,4,4,41,18,18,16,42,18,18,16,0,0,18,0,1,12,42,0,119,0,2,0,1,13,4,0,32,18,12,42,121,18,112,0,25,18,0,19,19,18,18,17,1,19,203,255,95,15,18,19,1,19,0,0,84,9,19,0,1,19,0,21,84,10,19,0,135,19,56,0,9,10,0,0,121,19,97,0,81,18,9,0,41,18,18,4,1,20,0,1,3,18,18,20,135,19,37,0,18,15,1,0,2,19,0,0,10,206,52,0,80,10,19,0,2,19,0,0,4,206,52,0,80,11,19,0,2,19,0,0,8,206,52,0,80,13,19,0,2,19,0,0,84,205,52,0,82,12,19,0,80,8,9,0,2,19,0,0,10,206,52,0,84,19,8,0,19,19,8,17,0,7,19,0,41,19,7,4,0,6,19,0,2,19,0,0,32,206,52,0,85,19,6,0,2,19,0,0,4,206,52,0,84,19,8,0,2,19,0,0,20,206,52,0,85,19,6,0,2,19,0,0,8,206,52,0,1,18,0,16,3,18,7,18,84,19,18,0,2,18,0,0,28,206,52,0,1,19,0,16,3,19,8,19,19,19,19,17,41,19,19,4,85,18,19,0,2,19,0,0,84,205,52,0,2,18,0,0,254,255,0,0,85,19,18,0,1,19,0,1,134,18,0,0,12,154,1,0,8,19,0,0,2,18,0,0,10,206,52,0,84,18,10,0,2,18,0,0,32,206,52,0,19,19,10,17,41,19,19,4,85,18,19,0,2,19,0,0,4,206,52,0,84,19,11,0,2,19,0,0,20,206,52,0,19,18,11,17,41,18,18,4,85,19,18,0,2,18,0,0,8,206,52,0,84,18,13,0,2,18,0,0,28,206,52,0,19,19,13,17,41,19,19,4,85,18,19,0,2,19,0,0,84,205,52,0,85,19,12,0,81,18,9,0,41,18,18,4,1,20,0,1,3,18,18,20,2,20,0,0,0,0,1,0,135,19,46,0,18,15,20,0,80,20,9,0,135,19,57,0,20,0,0,0,1,12,45,0,119,0,5,0,2,20,0,0,67,238,3,0,135,19,7,0,20,11,0,0,32,19,12,45,121,19,17,1,2,19,0,0,164,244,7,0,79,19,19,0,41,19,19,8,2,20,0,0,163,244,7,0,79,20,20,0,20,19,19,20,2,20,0,0,165,244,7,0,79,20,20,0,41,20,20,16,20,19,19,20,2,20,0,0,166,244,7,0,79,20,20,0,41,20,20,24,20,19,19,20,0,0,19,0,3,3,15,0,103,19,3,1,41,19,19,8,79,20,3,0,20,19,19,20,19,19,19,17,0,3,19,0,41,19,3,16,42,19,19,16,120,19,3,0,1,13,4,0,119,0,242,0,25,0,0,4,1,1,0,0,25,19,0,4,3,12,15,19,25,19,0,14,3,11,15,19,25,19,0,22,3,4,15,19,103,19,4,1,41,19,19,8,79,20,4,0,20,19,19,20,103,20,4,2,41,20,20,16,20,19,19,20,103,20,4,3,41,20,20,24,20,19,19,20,0,4,19,0,3,13,15,4,103,19,11,1,41,19,19,8,79,20,11,0,20,19,19,20,13,19,19,2,103,18,12,1,41,18,18,8,79,21,12,0,20,18,18,21,32,18,18,1,121,18,8,0,103,18,13,1,41,18,18,8,79,21,13,0,20,18,18,21,32,18,18,1,0,20,18,0,119,0,3,0,1,18,0,0,0,20,18,0,19,19,19,20,120,19,24,0,3,0,15,0,25,19,1,1,41,19,19,16,42,19,19,16,0,1,19,0,19,19,3,17,19,20,1,17,49,19,19,20,16,28,1,0,1,13,4,0,119,0,189,0,103,19,0,1,41,19,19,8,79,20,0,0,20,19,19,20,103,20,0,2,41,20,20,16,20,19,19,20,103,20,0,3,41,20,20,24,20,19,19,20,25,0,19,2,119,0,194,255,25,19,4,2,3,8,15,19,103,19,8,1,41,19,19,8,79,20,8,0,20,19,19,20,19,19,19,17,0,8,19,0,41,19,8,16,42,19,19,16,120,19,5,0,2,19,0,0,176,201,203,1,84,19,2,0,119,0,160,0,1,7,0,0,25,4,4,6,1,0,0,0,90,13,15,4,25,5,4,6,1,19,255,0,19,19,13,19,0,6,19,0,41,19,13,24,42,19,19,24,1,18,8,0,1,21,9,0,138,19,18,21,216,28,1,0,212,28,1,0,212,28,1,0,212,28,1,0,212,28,1,0,212,28,1,0,128,29,1,0,212,28,1,0,4,30,1,0,119,0,109,0,2,20,0,0,240,201,203,1,82,1,20,0,43,20,1,16,41,20,20,4,19,18,1,17,3,1,20,18,1,0,0,0,2,18,0,0,228,5,120,1,82,18,18,0,3,20,1,0,3,21,0,5,90,21,15,21,95,18,20,21,25,0,0,1,1,21,0,4,53,21,0,21,248,28,1,0,2,21,0,0,244,201,203,1,82,3,21,0,43,21,3,16,41,21,21,4,19,20,3,17,3,3,21,20,1,20,6,4,3,1,4,20,1,0,0,0,2,20,0,0,228,5,120,1,82,20,20,0,3,21,3,0,3,18,1,0,90,18,15,18,95,20,21,18,25,0,0,1,1,18,0,4,53,18,0,18,76,29,1,0,1,0,1,0,119,0,67,0,2,18,0,0,248,201,203,1,82,1,18,0,43,18,1,16,41,18,18,4,19,20,1,17,3,1,18,20,1,0,0,0,2,20,0,0,228,5,120,1,82,20,20,0,3,18,1,0,3,21,0,5,90,21,15,21,95,20,18,21,25,0,0,1,1,21,0,14,53,21,0,21,160,29,1,0,2,21,0,0,0,202,203,1,82,0,21,0,2,21,0,0,228,5,120,1,82,21,21,0,43,18,0,16,41,18,18,4,19,20,0,17,3,18,18,20,1,20,0,0,95,21,18,20,1,0,1,0,119,0,34,0,2,20,0,0,252,201,203,1,82,1,20,0,43,20,1,16,41,20,20,4,19,18,1,17,3,1,20,18,1,0,0,0,2,18,0,0,228,5,120,1,82,18,18,0,3,20,1,0,3,21,0,5,90,21,15,21,95,18,20,21,25,0,0,1,1,21,0,16,53,21,0,21,36,30,1,0,2,21,0,0,4,202,203,1,82,0,21,0,2,21,0,0,228,5,120,1,82,21,21,0,43,20,0,16,41,20,20,4,19,18,0,17,3,20,20,18,1,18,0,0,95,21,20,18,1,0,1,0,119,0,1,0,25,19,7,1,41,19,19,16,42,19,19,16,0,7,19,0,19,19,8,17,19,18,7,17,56,19,19,18,180,30,1,0,41,19,6,8,3,4,19,5,119,0,118,255,2,19,0,0,176,201,203,1,84,19,2,0,121,0,14,0,2,19,0,0,208,182,203,1,82,19,19,0,106,19,19,4,32,19,19,9,121,19,8,0,2,19,0,0,252,204,52,0,82,19,19,0,39,19,19,1,32,19,19,5,121,19,2,0,135,19,212,0,135,19,213,0,1,13,0,0,0,2,13,0,137,14,0,0,139,2,0,0,140,3,20,0,0,0,0,0,2,12,0,0,255,255,0,0,2,13,0,0,250,0,0,0,2,14,0,0,0,1,0,0,1,4,0,0,136,15,0,0,0,11,15,0,136,15,0,0,1,16,80,18,3,15,15,16,137,15,0,0,1,15,200,17,3,5,11,15,1,15,112,17,3,7,11,15,1,15,112,1,3,3,11,15,1,15,16,1,3,8,11,15,1,15,208,17,3,6,11,15,0,9,11,0,1,15,204,17,3,10,11,15,78,15,2,0,1,17,0,0,1,16,33,0,138,15,17,16,60,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,16,32,1,0,72,32,1,0,1,17,32,0,83,3,17,0,1,16,0,0,107,3,1,16,1,17,254,15,135,16,214,0,3,2,17,0,1,16,255,15,1,17,0,0,95,3,16,17,119,0,11,0,1,16,0,0,83,3,16,0,119,0,8,0,1,17,255,15,135,16,93,0,3,2,17,0,1,16,255,15,1,17,0,0,95,3,16,17,119,0,1,0,25,2,1,1,2,17,0,0,132,85,4,0,135,15,86,0,2,17,0,0,120,15,3,0,1,4,7,0,119,0,7,0,2,17,0,0,134,85,4,0,135,15,86,0,2,17,0,0,120,15,2,0,1,4,7,0,32,15,4,7,121,15,30,0,78,2,1,0,135,15,215,0,2,0,0,0,121,15,26,0,135,17,72,0,2,0,0,0,1,16,191,0,3,17,17,16,1,16,255,0,19,17,17,16,135,15,216,0,17,0,0,0,121,15,4,0,1,10,1,0,137,11,0,0,139,10,0,0,2,15,0,0,137,85,4,0,135,10,169,0,15,0,0,0,78,17,1,0,135,15,72,0,17,0,0,0,85,5,15,0,135,15,170,0,0,10,5,0,1,10,1,0,137,11,0,0,139,10,0,0,135,2,217,0,0,1,0,0,120,2,4,0,1,10,0,0,137,11,0,0,139,10,0,0,135,15,78,0,7,2,0,0,1,15,46,0,135,2,84,0,7,15,0,0,120,2,111,0,1,15,79,0,135,17,55,0,7,0,0,0,48,15,15,17,104,33,1,0,1,10,0,0,137,11,0,0,139,10,0,0,135,15,78,0,8,7,0,0,135,15,55,0,8,0,0,0,3,2,8,15,2,15,0,0,122,85,4,0,78,15,15,0,83,2,15,0,2,17,0,0,123,85,4,0,78,17,17,0,107,2,1,17,2,15,0,0,124,85,4,0,78,15,15,0,107,2,2,15,2,17,0,0,125,85,4,0,78,17,17,0,107,2,3,17,2,15,0,0,126,85,4,0,78,15,15,0,107,2,4,15,135,2,217,0,0,8,0,0,120,2,71,0,135,15,78,0,8,7,0,0,135,15,55,0,8,0,0,0,3,2,8,15,2,15,0,0,127,85,4,0,78,15,15,0,83,2,15,0,2,17,0,0,128,85,4,0,78,17,17,0,107,2,1,17,2,15,0,0,129,85,4,0,78,15,15,0,107,2,2,15,2,17,0,0,130,85,4,0,78,17,17,0,107,2,3,17,2,15,0,0,131,85,4,0,78,15,15,0,107,2,4,15,135,2,217,0,0,8,0,0,121,2,6,0,135,15,78,0,7,2,0,0,2,2,0,0,172,85,4,0,119,0,42,0,135,15,78,0,8,7,0,0,135,15,55,0,8,0,0,0,3,2,8,15,2,15,0,0,117,85,4,0,78,15,15,0,83,2,15,0,2,17,0,0,118,85,4,0,78,17,17,0,107,2,1,17,2,15,0,0,119,85,4,0,78,15,15,0,107,2,2,15,2,17,0,0,120,85,4,0,78,17,17,0,107,2,3,17,2,15,0,0,121,85,4,0,78,15,15,0,107,2,4,15,135,2,217,0,0,8,0,0,121,2,6,0,135,15,78,0,7,2,0,0,2,2,0,0,167,85,4,0,119,0,9,0,1,10,0,0,137,11,0,0,139,10,0,0,119,0,5,0,135,15,78,0,7,2,0,0,2,2,0,0,177,85,4,0,2,17,0,0,167,85,4,0,135,15,218,0,2,17,0,0,120,15,25,0,25,2,0,60,78,4,2,0,25,5,0,56,82,6,5,0,121,6,9,0,102,15,0,62,120,15,7,0,82,17,6,0,106,17,17,4,1,16,255,7,19,17,17,16,135,15,219,0,17,6,0,0,1,15,40,0,135,10,79,0,15,0,0,0,135,15,220,0,10,0,7,1,3,0,0,0,85,5,10,0,83,2,4,0,1,10,1,0,137,11,0,0,139,10,0,0,2,17,0,0,177,85,4,0,135,15,218,0,2,17,0,0,121,15,9,0,2,17,0,0,172,85,4,0,135,15,218,0,2,17,0,0,121,15,4,0,1,10,0,0,137,11,0,0,139,10,0,0,2,15,0,0,84,205,52,0,80,0,15,0,2,15,0,0,84,205,52,0,19,17,0,12,2,16,0,0,0,254,0,0,3,17,17,16,84,15,17,0,2,17,0,0,28,206,52,0,82,17,17,0,1,15,0,2,4,15,0,15,19,15,15,12,3,17,17,15,85,8,17,0,135,17,221,0,8,0,0,0,2,17,0,0,84,205,52,0,80,17,17,0,25,17,17,32,41,17,17,16,42,17,17,16,0,0,17,0,2,17,0,0,8,206,52,0,81,17,17,0,41,17,17,4,19,15,0,12,3,2,17,15,135,17,55,0,7,0,0,0,25,17,17,1,135,15,37,0,2,7,17,0,2,17,0,0,44,185,203,1,135,15,222,0,17,3,0,0,25,2,6,1,0,4,6,0,1,15,128,0,3,5,4,15,1,15,0,0,83,4,15,0,25,4,4,1,54,15,4,5,96,36,1,0,1,15,126,0,135,17,55,0,3,0,0,0,48,15,15,17,144,36,1,0,1,17,0,0,107,3,126,17,135,4,55,0,3,0,0,0,83,6,4,0,135,17,80,0,2,3,4,0,25,17,6,1,1,15,13,0,95,17,4,15,2,17,0,0,28,206,52,0,82,17,17,0,3,17,17,14,2,16,0,0,84,205,52,0,81,16,16,0,3,17,17,16,1,16,128,0,135,15,37,0,17,6,16,0,1,16,0,0,1,17,2,1,135,15,223,0,9,16,17,0,0,4,9,0,78,2,3,0,41,15,2,24,42,15,15,24,1,17,0,0,1,16,62,0,138,15,17,16,4,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,8,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,12,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,16,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,0,38,1,0,20,38,1,0,0,38,1,0,24,38,1,0,119,0,8,0,119,0,11,0,119,0,4,0,119,0,3,0,119,0,2,0,119,0,1,0,1,2,0,0,119,0,1,0,83,4,2,0,25,4,4,1,25,3,3,1,119,0,177,255,0,5,9,0,0,2,9,0,78,15,2,0,32,15,15,47,121,15,28,0,1,15,0,0,83,2,15,0,25,3,2,1,4,15,3,5,15,4,15,13,78,15,3,0,32,15,15,0,19,15,15,4,121,15,3,0,0,2,3,0,119,0,248,255,121,4,15,0,25,3,2,2,4,7,3,5,25,17,2,3,4,16,13,7,135,15,82,0,17,3,16,0,47,15,7,13,164,38,1,0,1,15,0,0,83,3,15,0,0,2,3,0,119,0,4,0,0,2,3,0,119,0,2,0,0,2,3,0,25,2,2,1,4,15,2,5,54,15,15,13,56,38,1,0,1,15,1,1,1,16,0,0,95,9,15,16,1,15,0,0,95,9,14,15,1,15,255,0,1,16,0,0,95,9,15,16,1,3,0,0,1,2,0,0,25,16,3,1,41,16,16,16,42,16,16,16,0,3,16,0,90,16,9,2,120,16,6,0,19,16,3,12,0,2,16,0,19,16,3,12,54,16,16,14,232,38,1,0,1,17,48,11,135,15,0,0,17,0,0,0,1,17,92,0,1,18,1,0,3,19,9,2,135,16,32,0,15,17,18,19,10,0,0,0,79,16,10,0,3,16,2,16,19,16,16,12,0,3,16,0,19,16,3,12,0,2,16,0,90,16,9,2,120,16,2,0,119,0,6,0,25,16,3,1,41,16,16,16,42,16,16,16,0,3,16,0,119,0,247,255,19,16,3,12,47,16,16,14,168,39,1,0,25,16,3,1,41,16,16,16,42,16,16,16,0,3,16,0,19,16,3,12,0,2,16,0,19,16,3,12,56,16,14,16,168,39,1,0,90,16,9,2,121,16,246,255,1,18,48,11,135,19,0,0,18,0,0,0,1,18,108,0,1,17,1,0,3,15,9,2,135,16,32,0,19,18,17,15,10,0,0,0,1,15,48,11,135,16,0,0,15,0,0,0,19,16,16,12,41,16,16,16,39,16,16,92,0,10,16,0,25,9,8,10,84,9,10,0,43,15,10,16,108,9,2,15,1,16,48,11,135,15,0,0,16,0,0,0,19,15,15,12,41,15,15,16,39,15,15,108,0,9,15,0,25,10,8,14,84,10,9,0,43,16,9,16,108,10,2,16,2,16,0,0,8,206,52,0,81,16,16,0,41,16,16,16,2,15,0,0,84,205,52,0,80,15,15,0,3,15,15,14,19,15,15,12,20,16,16,15,0,10,16,0,25,9,8,6,84,9,10,0,43,15,10,16,108,9,2,15,135,15,224,0,8,0,0,0,2,15,0,0,68,205,52,0,1,16,0,75,84,15,16,0,2,16,0,0,8,206,52,0,80,9,16,0,2,16,0,0,10,206,52,0,84,16,9,0,19,16,9,12,41,16,16,4,0,10,16,0,2,16,0,0,32,206,52,0,85,16,10,0,2,16,0,0,76,205,52,0,84,16,0,0,2,16,0,0,4,206,52,0,84,16,9,0,2,16,0,0,20,206,52,0,85,16,10,0,2,16,0,0,80,205,52,0,2,15,0,0,84,205,52,0,80,15,15,0,84,16,15,0,2,15,0,0,104,205,52,0,2,16,0,0,104,205,52,0,82,16,16,0,1,17,255,253,19,16,16,17,85,15,16,0,1,15,33,0,134,16,0,0,68,156,1,0,15,0,0,0,2,16,0,0,84,205,52,0,2,15,0,0,84,205,52,0,81,15,15,0,1,17,0,2,3,15,15,17,84,16,15,0,1,10,1,0,137,11,0,0,139,10,0,0,140,2,14,0,0,0,0,0,2,8,0,0,172,74,4,0,2,9,0,0,167,74,4,0,2,10,0,0,162,74,4,0,1,6,0,0,136,11,0,0,0,7,11,0,136,11,0,0,1,12,16,16,3,11,11,12,137,11,0,0,1,11,0,16,3,4,7,11,0,3,7,0,0,2,3,0,135,5,207,0,1,0,0,0,78,1,5,0,41,11,1,24,42,11,11,24,1,12,0,0,1,13,93,0,138,11,12,13,36,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,40,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,44,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,48,43,1,0,104,47,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,108,47,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,32,43,1,0,112,47,1,0,119,0,21,1,119,0,24,1,119,0,23,1,119,0,22,1,1,12,0,0,83,2,12,0,2,13,0,0,235,73,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,0,0,1,6,4,0,119,0,12,1,2,13,0,0,239,73,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,1,0,1,6,4,0,119,0,4,1,2,13,0,0,19,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,2,0,1,6,4,0,119,0,252,0,2,13,0,0,26,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,3,0,1,6,4,0,119,0,244,0,2,13,0,0,31,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,4,0,1,6,4,0,119,0,236,0,2,13,0,0,34,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,5,0,1,6,4,0,119,0,228,0,2,13,0,0,41,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,6,0,1,6,4,0,119,0,220,0,2,13,0,0,45,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,7,0,1,6,4,0,119,0,212,0,2,13,0,0,50,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,8,0,1,6,4,0,119,0,204,0,2,13,0,0,55,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,9,0,1,6,4,0,119,0,196,0,2,13,0,0,59,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,10,0,1,6,4,0,119,0,188,0,2,13,0,0,66,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,11,0,1,6,4,0,119,0,180,0,2,13,0,0,72,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,12,0,1,6,4,0,119,0,172,0,2,13,0,0,77,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,13,0,1,6,4,0,119,0,164,0,2,13,0,0,82,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,14,0,1,6,4,0,119,0,156,0,2,13,0,0,87,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,15,0,1,6,4,0,119,0,148,0,2,13,0,0,92,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,16,0,1,6,4,0,119,0,140,0,2,13,0,0,95,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,17,0,1,6,4,0,119,0,132,0,2,13,0,0,104,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,18,0,1,6,4,0,119,0,124,0,2,13,0,0,107,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,19,0,1,6,4,0,119,0,116,0,2,13,0,0,113,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,20,0,1,6,4,0,119,0,108,0,2,13,0,0,182,85,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,21,0,1,6,4,0,119,0,100,0,2,13,0,0,116,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,22,0,1,6,4,0,119,0,92,0,2,13,0,0,122,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,23,0,1,6,4,0,119,0,84,0,2,13,0,0,128,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,24,0,1,6,4,0,119,0,76,0,2,13,0,0,131,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,25,0,1,6,4,0,119,0,68,0,2,13,0,0,135,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,26,0,1,6,4,0,119,0,60,0,2,13,0,0,142,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,27,0,1,6,4,0,119,0,52,0,2,13,0,0,146,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,28,0,1,6,4,0,119,0,44,0,2,13,0,0,150,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,29,0,1,6,4,0,119,0,36,0,2,13,0,0,156,74,4,0,135,12,218,0,13,3,0,0,120,12,4,0,1,1,30,0,1,6,4,0,119,0,28,0,135,12,218,0,10,3,0,0,120,12,4,0,1,1,31,0,1,6,4,0,119,0,22,0,135,12,218,0,9,3,0,0,120,12,4,0,1,1,32,0,1,6,4,0,119,0,16,0,135,12,218,0,8,3,0,0,120,12,4,0,1,1,33,0,1,6,4,0,119,0,10,0,78,1,5,0,119,0,4,0,119,0,7,0,119,0,6,0,119,0,240,254,83,2,1,0,25,2,2,1,25,5,5,1,119,0,133,254,32,11,6,4,121,11,15,0,2,11,0,0,144,135,2,0,27,12,1,20,3,6,11,12,106,11,6,8,1,13,255,0,19,11,11,13,106,13,6,12,42,13,13,1,3,13,0,13,135,12,225,0,11,13,5,0,137,7,0,0,139,0,0,0,1,12,0,0,83,2,12,0,135,12,55,0,3,0,0,0,120,12,3,0,137,7,0,0,139,0,0,0,2,11,0,0,235,73,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,0,0,119,0,246,0,2,11,0,0,239,73,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,1,0,119,0,239,0,2,11,0,0,19,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,2,0,119,0,232,0,2,11,0,0,26,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,3,0,119,0,225,0,2,11,0,0,31,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,4,0,119,0,218,0,2,11,0,0,34,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,5,0,119,0,211,0,2,11,0,0,41,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,6,0,119,0,204,0,2,11,0,0,45,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,7,0,119,0,197,0,2,11,0,0,50,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,8,0,119,0,190,0,2,11,0,0,55,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,9,0,119,0,183,0,2,11,0,0,59,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,10,0,119,0,176,0,2,11,0,0,66,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,11,0,119,0,169,0,2,11,0,0,72,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,12,0,119,0,162,0,2,11,0,0,77,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,13,0,119,0,155,0,2,11,0,0,82,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,14,0,119,0,148,0,2,11,0,0,87,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,15,0,119,0,141,0,2,11,0,0,92,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,16,0,119,0,134,0,2,11,0,0,95,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,17,0,119,0,127,0,2,11,0,0,104,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,18,0,119,0,120,0,2,11,0,0,107,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,19,0,119,0,113,0,2,11,0,0,113,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,20,0,119,0,106,0,2,11,0,0,182,85,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,21,0,119,0,99,0,2,11,0,0,116,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,22,0,119,0,92,0,2,11,0,0,122,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,23,0,119,0,85,0,2,11,0,0,128,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,24,0,119,0,78,0,2,11,0,0,131,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,25,0,119,0,71,0,2,11,0,0,135,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,26,0,119,0,64,0,2,11,0,0,142,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,27,0,119,0,57,0,2,11,0,0,146,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,28,0,119,0,50,0,2,11,0,0,150,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,29,0,119,0,43,0,2,11,0,0,156,74,4,0,135,12,218,0,11,3,0,0,120,12,3,0,1,1,30,0,119,0,36,0,135,12,218,0,10,3,0,0,120,12,3,0,1,1,31,0,119,0,31,0,135,12,218,0,9,3,0,0,120,12,3,0,1,1,32,0,119,0,26,0,135,12,218,0,8,3,0,0,120,12,3,0,1,1,33,0,119,0,21,0,134,12,0,0,12,31,1,0,0,3,5,0,121,12,3,0,137,7,0,0,139,0,0,0,135,12,226,0,0,3,5,0,121,12,3,0,137,7,0,0,139,0,0,0,2,12,0,0,245,73,4,0,135,6,169,0,12,0,0,0,85,4,3,0,135,12,170,0,0,6,4,0,137,7,0,0,139,0,0,0,2,12,0,0,144,135,2,0,27,11,1,20,3,6,12,11,106,12,6,8,1,13,255,0,19,12,12,13,106,13,6,12,42,13,13,1,3,13,0,13,135,11,225,0,12,13,5,0,137,7,0,0,139,0,0,0,140,0,11,0,0,0,0,0,136,5,0,0,0,4,5,0,136,5,0,0,1,6,144,0,3,5,5,6,137,5,0,0,0,0,4,0,25,2,4,8,25,1,4,16,2,6,0,0,185,78,4,0,2,7,0,0,34,52,4,0,135,5,227,0,6,7,0,0,2,7,0,0,212,80,4,0,2,6,0,0,49,52,4,0,135,5,227,0,7,6,0,0,2,6,0,0,93,81,4,0,2,7,0,0,169,52,4,0,135,5,227,0,6,7,0,0,2,7,0,0,111,81,4,0,2,6,0,0,182,52,4,0,135,5,227,0,7,6,0,0,2,6,0,0,10,79,4,0,2,7,0,0,196,52,4,0,135,5,227,0,6,7,0,0,2,7,0,0,178,82,4,0,2,6,0,0,217,52,4,0,135,5,227,0,7,6,0,0,2,6,0,0,70,84,4,0,2,7,0,0,246,52,4,0,135,5,227,0,6,7,0,0,2,7,0,0,0,84,4,0,2,6,0,0,16,53,4,0,135,5,227,0,7,6,0,0,2,6,0,0,24,84,4,0,2,7,0,0,70,53,4,0,135,5,227,0,6,7,0,0,2,7,0,0,47,84,4,0,2,6,0,0,156,53,4,0,135,5,227,0,7,6,0,0,2,6,0,0,63,75,4,0,2,7,0,0,228,53,4,0,135,5,227,0,6,7,0,0,2,7,0,0,15,82,4,0,2,6,0,0,12,54,4,0,135,5,227,0,7,6,0,0,2,6,0,0,36,82,4,0,2,7,0,0,48,54,4,0,135,5,227,0,6,7,0,0,2,7,0,0,56,82,4,0,2,6,0,0,71,54,4,0,135,5,227,0,7,6,0,0,2,6,0,0,107,82,4,0,2,7,0,0,86,54,4,0,135,5,227,0,6,7,0,0,2,7,0,0,75,82,4,0,2,6,0,0,121,54,4,0,135,5,227,0,7,6,0,0,2,6,0,0,231,81,4,0,2,7,0,0,127,54,4,0,135,5,227,0,6,7,0,0,2,7,0,0,156,76,4,0,2,6,0,0,133,55,4,0,135,5,227,0,7,6,0,0,2,6,0,0,151,77,4,0,2,7,0,0,162,55,4,0,135,5,227,0,6,7,0,0,2,7,0,0,110,77,4,0,2,6,0,0,177,55,4,0,135,5,227,0,7,6,0,0,2,6,0,0,188,79,4,0,2,7,0,0,7,56,4,0,135,5,227,0,6,7,0,0,2,7,0,0,31,79,4,0,2,6,0,0,28,56,4,0,135,5,227,0,7,6,0,0,2,6,0,0,211,81,4,0,2,7,0,0,51,56,4,0,135,5,227,0,6,7,0,0,2,7,0,0,67,77,4,0,2,6,0,0,74,56,4,0,135,5,227,0,7,6,0,0,2,6,0,0,83,78,4,0,2,7,0,0,115,56,4,0,135,5,227,0,6,7,0,0,2,7,0,0,105,78,4,0,2,6,0,0,153,56,4,0,135,5,227,0,7,6,0,0,2,6,0,0,120,80,4,0,2,7,0,0,189,56,4,0,135,5,227,0,6,7,0,0,2,7,0,0,35,80,4,0,2,6,0,0,218,56,4,0,135,5,227,0,7,6,0,0,2,6,0,0,74,80,4,0,2,7,0,0,250,56,4,0,135,5,227,0,6,7,0,0,2,7,0,0,2,81,4,0,2,6,0,0,26,57,4,0,135,5,227,0,7,6,0,0,2,6,0,0,31,81,4,0,2,7,0,0,62,57,4,0,135,5,227,0,6,7,0,0,2,7,0,0,85,77,4,0,2,6,0,0,89,57,4,0,135,5,227,0,7,6,0,0,2,6,0,0,109,57,4,0,2,7,0,0,131,57,4,0,135,5,227,0,6,7,0,0,2,7,0,0,140,84,4,0,2,6,0,0,156,57,4,0,135,5,227,0,7,6,0,0,2,6,0,0,48,85,4,0,2,7,0,0,174,57,4,0,135,5,227,0,6,7,0,0,2,7,0,0,73,85,4,0,2,6,0,0,199,57,4,0,135,5,227,0,7,6,0,0,2,6,0,0,137,85,4,0,2,7,0,0,229,57,4,0,135,5,227,0,6,7,0,0,2,7,0,0,245,73,4,0,2,6,0,0,103,58,4,0,135,5,227,0,7,6,0,0,2,6,0,0,86,79,4,0,2,7,0,0,125,58,4,0,135,5,227,0,6,7,0,0,2,7,0,0,12,76,4,0,2,6,0,0,153,58,4,0,135,5,227,0,7,6,0,0,2,6,0,0,213,82,4,0,2,7,0,0,189,58,4,0,135,5,227,0,6,7,0,0,2,7,0,0,236,82,4,0,2,6,0,0,209,58,4,0,135,5,227,0,7,6,0,0,2,6,0,0,232,58,4,0,2,7,0,0,2,59,4,0,135,5,227,0,6,7,0,0,2,7,0,0,39,59,4,0,2,6,0,0,63,59,4,0,135,5,227,0,7,6,0,0,2,6,0,0,109,50,4,0,2,7,0,0,207,59,4,0,135,5,227,0,6,7,0,0,2,7,0,0,129,50,4,0,2,6,0,0,223,62,4,0,135,5,227,0,7,6,0,0,2,6,0,0,147,50,4,0,2,7,0,0,26,64,4,0,135,5,227,0,6,7,0,0,2,7,0,0,179,64,4,0,2,6,0,0,199,64,4,0,135,5,227,0,7,6,0,0,2,6,0,0,166,50,4,0,2,7,0,0,106,65,4,0,135,5,227,0,6,7,0,0,2,7,0,0,184,50,4,0,2,6,0,0,93,66,4,0,135,5,227,0,7,6,0,0,2,6,0,0,195,74,4,0,2,7,0,0,132,66,4,0,135,5,227,0,6,7,0,0,2,7,0,0,215,83,4,0,2,6,0,0,173,66,4,0,135,5,227,0,7,6,0,0,2,6,0,0,24,75,4,0,2,7,0,0,187,67,4,0,135,5,227,0,6,7,0,0,2,7,0,0,176,74,4,0,2,6,0,0,202,67,4,0,135,5,227,0,7,6,0,0,2,6,0,0,105,75,4,0,2,7,0,0,219,67,4,0,135,5,227,0,6,7,0,0,2,7,0,0,125,75,4,0,2,6,0,0,17,68,4,0,135,5,227,0,7,6,0,0,2,6,0,0,165,75,4,0,2,7,0,0,39,68,4,0,135,5,227,0,6,7,0,0,2,7,0,0,227,75,4,0,2,6,0,0,51,68,4,0,135,5,227,0,7,6,0,0,2,6,0,0,155,79,4,0,2,7,0,0,68,68,4,0,135,5,227,0,6,7,0,0,2,7,0,0,33,76,4,0,2,6,0,0,108,68,4,0,135,5,227,0,7,6,0,0,2,6,0,0,233,78,4,0,2,7,0,0,127,68,4,0,135,5,227,0,6,7,0,0,2,7,0,0,95,76,4,0,2,6,0,0,167,68,4,0,135,5,227,0,7,6,0,0,2,6,0,0,185,75,4,0,2,7,0,0,198,68,4,0,135,5,227,0,6,7,0,0,2,7,0,0,145,75,4,0,2,6,0,0,250,68,4,0,135,5,227,0,7,6,0,0,2,6,0,0,114,76,4,0,2,7,0,0,37,69,4,0,135,5,227,0,6,7,0,0,2,7,0,0,176,76,4,0,2,6,0,0,90,69,4,0,135,5,227,0,7,6,0,0,2,6,0,0,36,77,4,0,2,7,0,0,128,69,4,0,135,5,227,0,6,7,0,0,2,7,0,0,54,76,4,0,2,6,0,0,159,69,4,0,135,5,227,0,7,6,0,0,2,6,0,0,204,78,4,0,2,7,0,0,190,69,4,0,135,5,227,0,6,7,0,0,2,7,0,0,167,78,4,0,2,6,0,0,205,69,4,0,135,5,227,0,7,6,0,0,2,6,0,0,73,76,4,0,2,7,0,0,13,70,4,0,135,5,227,0,6,7,0,0,2,7,0,0,132,78,4,0,2,6,0,0,41,70,4,0,135,5,227,0,7,6,0,0,2,6,0,0,83,75,4,0,2,7,0,0,201,70,4,0,135,5,227,0,6,7,0,0,2,7,0,0,43,75,4,0,2,6,0,0,229,70,4,0,135,5,227,0,7,6,0,0,2,6,0,0,238,74,4,0,2,7,0,0,242,70,4,0,135,5,227,0,6,7,0,0,2,7,0,0,135,76,4,0,2,6,0,0,38,71,4,0,135,5,227,0,7,6,0,0,2,6,0,0,203,75,4,0,2,7,0,0,80,71,4,0,135,5,227,0,6,7,0,0,2,7,0,0,2,75,4,0,2,6,0,0,145,71,4,0,135,5,227,0,7,6,0,0,2,6,0,0,100,83,4,0,2,7,0,0,188,71,4,0,135,5,227,0,6,7,0,0,2,7,0,0,216,74,4,0,2,6,0,0,184,72,4,0,135,5,227,0,7,6,0,0,2,6,0,0,248,75,4,0,2,7,0,0,227,72,4,0,135,5,227,0,6,7,0,0,2,7,0,0,196,76,4,0,2,6,0,0,0,73,4,0,135,5,227,0,7,6,0,0,2,6,0,0,14,77,4,0,2,7,0,0,40,73,4,0,135,5,227,0,6,7,0,0,135,3,228,0,2,5,0,0,6,206,52,0,1,7,0,240,84,5,7,0,2,7,0,0,24,206,52,0,2,5,0,0,0,0,15,0,85,7,5,0,2,5,0,0,100,205,52,0,41,7,3,5,1,6,0,16,3,7,7,6,84,5,7,0,1,5,38,7,1,6,3,0,2,8,0,0,90,73,4,0,135,7,229,0,3,5,6,8,2,8,0,0,101,73,4,0,1,6,199,3,135,7,230,0,8,6,0,0,1,7,128,0,135,3,231,0,7,0,0,0,2,7,0,0,8,206,52,0,84,7,3,0,2,7,0,0,28,206,52,0,2,6,0,0,255,255,0,0,19,6,3,6,41,6,6,4,85,7,6,0,2,6,0,0,84,205,52,0,1,7,254,7,84,6,7,0,1,6,144,18,1,8,234,255,135,7,11,0,6,8,0,0,1,8,145,18,1,5,144,0,135,6,33,0,5,0,0,0,135,7,1,0,8,6,0,0,1,6,144,0,2,8,0,0,16,1,24,1,135,7,1,0,6,8,0,0,1,8,140,0,2,6,0,0,0,0,24,1,135,7,1,0,8,6,0,0,135,6,228,0,1,8,39,7,1,5,5,0,1,9,152,18,2,10,0,0,113,73,4,0,135,7,232,0,6,8,5,9,10,0,0,0,1,10,184,0,2,9,0,0,8,0,41,1,135,7,1,0,10,9,0,0,1,9,113,17,1,10,24,1,135,7,61,0,9,10,0,0,1,10,115,17,1,9,18,0,135,7,61,0,10,9,0,0,1,9,112,17,1,10,77,0,135,7,11,0,9,10,0,0,1,10,161,18,1,9,24,1,135,7,61,0,10,9,0,0,1,9,163,18,1,10,68,0,135,7,61,0,9,10,0,0,1,10,160,18,1,9,77,0,135,7,11,0,10,9,0,0,1,9,176,18,2,10,0,0,126,73,4,0,1,5,9,0,135,7,37,0,9,10,5,0,1,5,185,18,2,10,0,0,135,73,4,0,1,9,23,0,135,7,37,0,5,10,9,0,1,9,208,18,1,10,0,0,135,7,11,0,9,10,0,0,1,10,209,18,1,9,1,0,135,7,61,0,10,9,0,0,1,9,211,18,2,10,0,0,158,73,4,0,1,5,15,0,135,7,37,0,9,10,5,0,1,7,128,17,85,0,7,0,1,5,24,1,108,0,4,5,1,7,0,0,135,5,233,0,0,7,0,0,1,7,48,11,1,10,24,1,135,5,61,0,7,10,0,0,1,5,0,0,84,2,5,0,2,10,0,0,173,73,4,0,1,7,2,0,1,9,0,0,135,5,43,0,10,7,2,9,2,9,0,0,173,73,4,0,1,7,2,0,1,10,0,0,135,5,43,0,9,7,2,10,1,10,0,0,1,7,0,0,135,5,44,0,10,7,0,0,1,7,1,0,1,10,0,0,135,5,53,0,7,10,0,0,1,10,1,0,1,7,2,0,135,5,53,0,10,7,0,0,2,7,0,0,173,73,4,0,1,10,2,0,1,9,0,0,135,5,43,0,7,10,2,9,2,9,0,0,177,73,4,0,1,10,2,0,1,7,0,0,135,5,43,0,9,10,2,7,82,7,0,0,25,7,7,22,1,10,24,1,135,5,61,0,7,10,0,0,82,10,0,0,25,10,10,44,1,7,43,1,135,5,61,0,10,7,0,0,1,5,18,0,83,1,5,0,25,0,1,1,25,2,1,20,25,3,2,108,1,5,0,0,83,2,5,0,25,2,2,1,54,5,2,3,252,62,1,0,0,2,0,0,2,0,0,0,181,73,4,0,25,3,2,19,78,5,0,0,83,2,5,0,25,2,2,1,25,0,0,1,54,5,2,3,32,63,1,0,1,7,0,18,1,10,128,0,135,5,37,0,7,1,10,0,1,10,44,11,2,7,0,0,128,0,24,1,135,5,1,0,10,7,0,0,1,7,48,11,1,10,24,1,135,5,61,0,7,10,0,0,1,5,64,0,135,0,79,0,5,0,0,0,135,5,234,0,0,0,0,0,2,5,0,0,228,136,3,0,85,0,5,0,25,3,0,24,85,3,3,0,109,0,28,3,1,10,0,0,109,0,32,10,25,3,0,36,85,3,3,0,109,0,40,3,1,5,0,0,109,0,44,5,1,10,0,0,108,0,54,10,1,5,1,0,107,0,60,5,1,10,0,0,107,0,61,10,1,5,0,0,109,0,56,5,1,10,0,0,107,0,62,10,1,5,0,0,109,0,48,5,2,5,0,0,36,185,203,1,85,5,0,0,134,5,0,0,112,99,1,0,0,0,0,0,2,5,0,0],eb+71680);HEAPU8.set([36,185,203,1,82,0,5,0,120,0,7,0,2,5,0,0,36,185,203,1,1,10,0,0,85,5,10,0,137,4,0,0,139,0,0,0,82,5,0,0,106,5,5,4,1,7,255,7,19,5,5,7,135,10,219,0,5,0,0,0,2,10,0,0,36,185,203,1,1,5,0,0,85,10,5,0,137,4,0,0,139,0,0,0,140,2,27,0,0,0,0,0,136,24,0,0,0,23,24,0,136,24,0,0,1,25,192,0,3,24,24,25,137,24,0,0,1,24,160,0,3,22,23,24,1,24,152,0,3,21,23,24,1,24,144,0,3,17,23,24,1,24,136,0,3,16,23,24,1,24,128,0,3,15,23,24,25,14,23,120,25,13,23,112,25,20,23,104,25,12,23,96,25,11,23,88,25,10,23,80,25,9,23,72,25,19,23,56,25,5,23,48,25,8,23,32,25,7,23,24,25,6,23,16,1,24,176,0,3,2,23,24,1,24,172,0,3,3,23,24,1,24,168,0,3,4,23,24,1,24,180,0,3,18,23,24,2,25,0,0,215,76,4,0,135,24,168,0,1,25,0,0,121,24,32,0,2,26,0,0,63,75,4,0,135,25,169,0,26,0,0,0,135,24,170,0,0,25,23,0,2,24,0,0,231,81,4,0,135,2,169,0,24,0,0,0,2,25,0,0,92,154,4,0,25,26,23,8,135,24,170,0,0,25,26,0,2,26,0,0,241,76,4,0,135,24,86,0,26,2,0,0,120,24,8,0,2,26,0,0,0,82,4,0,135,24,170,0,0,26,7,0,137,23,0,0,139,0,0,0,119,0,5,0,135,24,170,0,0,2,6,0,137,23,0,0,139,0,0,0,2,26,0,0,243,159,4,0,135,24,168,0,1,26,0,0,121,24,32,0,1,26,0,0,135,24,235,0,26,0,0,0,85,2,24,0,135,0,236,0,2,0,0,0,2,24,0,0,72,205,52,0,106,26,0,20,1,25,108,7,3,26,26,25,84,24,26,0,2,26,0,0,77,205,52,0,106,24,0,16,25,24,24,1,83,26,24,0,2,24,0,0,76,205,52,0,106,26,0,12,83,24,26,0,2,26,0,0,69,205,52,0,1,24,43,0,83,26,24,0,1,26,33,0,134,24,0,0,68,156,1,0,26,0,0,0,137,23,0,0,139,0,0,0,85,8,3,0,109,8,4,2,109,8,8,4,2,26,0,0,6,82,4,0,135,24,237,0,1,26,8,0,32,24,24,3,121,24,33,0,2,24,0,0,72,205,52,0,82,26,4,0,84,24,26,0,2,26,0,0,77,205,52,0,82,24,3,0,83,26,24,0,2,24,0,0,76,205,52,0,82,26,2,0,83,24,26,0,2,26,0,0,69,205,52,0,1,24,43,0,83,26,24,0,1,26,33,0,134,24,0,0,68,156,1,0,26,0,0,0,2,24,0,0,68,205,52,0,78,24,24,0,32,24,24,255,121,24,243,0,2,25,0,0,15,82,4,0,135,26,169,0,25,0,0,0,135,24,170,0,0,26,5,0,119,0,236,0,2,24,0,0,69,205,52,0,1,26,42,0,83,24,26,0,1,24,33,0,134,26,0,0,68,156,1,0,24,0,0,0,2,26,0,0,36,82,4,0,135,5,169,0,26,0,0,0,1,26,0,0,83,18,26,0,1,24,0,0,107,18,1,24,1,26,0,0,107,18,2,26,1,24,0,0,107,18,3,24,1,26,0,0,107,18,4,26,1,24,0,0,107,18,5,24,85,19,8,0,2,26,0,0,217,90,4,0,135,24,237,0,5,26,19,0,33,7,24,0,82,3,8,0,35,24,3,5,19,24,7,24,121,24,21,0,135,24,55,0,5,0,0,0,27,26,3,7,25,26,26,1,13,24,24,26,33,26,3,0,19,24,24,26,121,24,13,0,2,24,0,0,68,205,52,0,79,24,24,0,5,4,3,24,1,2,0,0,0,8,2,0,25,2,2,1,3,26,2,4,90,26,5,26,95,18,8,26,53,26,2,3,108,67,1,0,2,26,0,0,9,160,4,0,135,6,168,0,1,26,0,0,120,6,7,0,2,25,0,0,56,82,4,0,135,24,169,0,25,0,0,0,135,26,170,0,0,24,9,0,2,26,0,0,75,82,4,0,135,5,169,0,26,0,0,0,135,26,55,0,5,0,0,0,32,26,26,5,121,26,163,0,0,2,19,0,25,3,2,15,1,26,0,0,83,2,26,0,25,2,2,1,54,26,2,3,220,67,1,0,78,3,5,0,41,26,3,24,42,26,26,24,32,26,26,77,121,26,11,0,2,26,0,0,77,205,52,0,79,26,26,0,85,10,26,0,2,26,0,0,97,82,4,0,135,2,208,0,19,26,10,0,78,3,5,0,119,0,2,0,1,2,0,0,41,26,3,24,42,26,26,24,32,26,26,68,121,26,12,0,2,26,0,0,76,205,52,0,79,26,26,0,85,11,26,0,3,24,19,2,2,25,0,0,97,82,4,0,135,26,208,0,24,25,11,0,3,2,26,2,78,3,5,0,41,26,3,24,42,26,26,24,32,26,26,89,121,26,11,0,2,26,0,0,72,205,52,0,81,26,26,0,85,12,26,0,3,25,19,2,2,24,0,0,102,82,4,0,135,26,208,0,25,24,12,0,3,2,26,2,102,24,5,1,95,19,2,24,25,2,2,1,25,4,5,2,78,3,4,0,41,24,3,24,42,24,24,24,32,24,24,77,121,24,12,0,2,24,0,0,77,205,52,0,79,24,24,0,85,13,24,0,3,26,19,2,2,25,0,0,97,82,4,0,135,24,208,0,26,25,13,0,3,2,24,2,78,3,4,0,41,24,3,24,42,24,24,24,32,24,24,68,121,24,12,0,2,24,0,0,76,205,52,0,79,24,24,0,85,14,24,0,3,25,19,2,2,26,0,0,97,82,4,0,135,24,208,0,25,26,14,0,3,2,24,2,78,3,4,0,41,24,3,24,42,24,24,24,32,24,24,89,121,24,11,0,2,24,0,0,72,205,52,0,81,24,24,0,85,15,24,0,3,26,19,2,2,25,0,0,102,82,4,0,135,24,208,0,26,25,15,0,3,2,24,2,102,25,5,3,95,19,2,25,25,3,2,1,25,4,5,4,78,2,4,0,41,25,2,24,42,25,25,24,32,25,25,77,121,25,12,0,2,25,0,0,77,205,52,0,79,25,25,0,85,16,25,0,3,24,19,3,2,26,0,0,97,82,4,0,135,25,208,0,24,26,16,0,3,3,25,3,78,2,4,0,41,25,2,24,42,25,25,24,32,25,25,68,121,25,12,0,2,25,0,0,76,205,52,0,79,25,25,0,85,17,25,0,3,26,19,3,2,24,0,0,97,82,4,0,135,25,208,0,26,24,17,0,3,3,25,3,78,2,4,0,41,25,2,24,42,25,25,24,32,25,25,89,121,25,10,0,2,25,0,0,72,205,52,0,81,25,25,0,85,21,25,0,3,24,19,3,2,26,0,0,102,82,4,0,135,25,208,0,24,26,21,0,85,22,18,0,109,22,4,19,2,26,0,0,129,82,4,0,135,25,170,0,0,26,22,0,120,6,7,0,2,24,0,0,107,82,4,0,135,26,169,0,24,0,0,0,135,25,170,0,0,26,20,0,137,23,0,0,139,0,0,0,140,1,25,0,0,0,0,0,2,20,0,0,255,255,0,0,1,16,0,0,136,21,0,0,0,17,21,0,136,21,0,0,1,22,176,0,3,21,21,22,137,21,0,0,25,5,17,48,25,13,17,32,25,12,17,24,25,6,17,16,25,3,17,8,1,21,156,0,3,14,17,21,1,21,144,0,3,15,17,21,25,4,17,56,1,21,170,0,3,10,17,21,1,21,168,0,3,11,17,21,2,21,0,0,248,204,52,0,82,21,21,0,102,21,21,20,121,21,9,0,2,23,0,0,77,36,4,0,135,22,169,0,23,0,0,0,135,21,170,0,0,22,17,0,137,17,0,0,139,0,0,0,135,21,178,0,0,0,0,0,1,21,0,0,85,14,21,0,1,22,0,0,109,14,4,22,1,21,0,0,109,14,8,21,1,21,0,0,85,15,21,0,1,22,0,0,109,15,4,22,1,21,0,0,109,15,8,21,25,1,0,16,82,21,1,0,2,22,0,0,197,191,3,0,1,23,1,0,135,2,132,0,21,22,14,23,82,22,1,0,135,23,179,0,22,0,0,0,32,23,23,1,121,23,225,0,82,22,1,0,1,21,1,0,135,23,180,0,22,21,15,0,121,23,218,0,120,2,39,0,1,23,47,0,1,21,255,255,135,1,238,0,15,23,21,0,32,21,1,255,121,21,4,0,135,21,145,0,14,15,0,0,119,0,14,0,25,23,1,1,1,22,255,255,135,21,205,0,4,15,23,22,15,0,0,0,135,21,145,0,14,4,0,0,102,21,4,11,34,21,21,0,121,21,4,0,82,22,4,0,135,21,77,0,22,0,0,0,102,9,14,11,41,22,9,24,42,22,22,24,34,22,22,0,121,22,4,0,106,22,14,4,0,21,22,0,119,0,4,0,1,22,255,0,19,22,9,22,0,21,22,0,120,21,5,0,2,22,0,0,222,191,3,0,135,21,222,0,14,22,0,0,135,21,239,0,4,0,0,0,2,21,0,0,71,69,84,0,85,4,21,0,1,22,1,0,109,4,48,22,1,21,105,3,109,4,36,21,1,22,106,3,109,4,40,22,2,22,0,0,131,202,203,1,1,21,0,0,83,22,21,0,25,1,15,11,78,22,1,0,34,22,22,0,121,22,4,0,82,22,15,0,0,21,22,0,119,0,2,0,0,21,15,0,135,9,240,0,4,21,0,0,2,21,0,0,131,202,203,1,78,21,21,0,120,21,8,0,1,22,10,0,135,21,241,0,22,0,0,0,2,21,0,0,131,202,203,1,78,21,21,0,121,21,250,255,2,21,0,0,130,202,203,1,78,21,21,0,120,21,18,0,2,21,0,0,47,192,3,0,135,13,169,0,21,0,0,0,105,12,9,42,78,22,1,0,34,22,22,0,121,22,4,0,82,22,15,0,0,21,22,0,119,0,2,0,0,21,15,0,85,5,21,0,109,5,4,12,135,21,170,0,0,13,5,0,119,0,119,0,25,8,14,11,78,23,8,0,34,23,23,0,121,23,4,0,82,23,14,0,0,22,23,0,119,0,2,0,0,22,14,0,1,23,1,0,1,24,0,0,135,21,42,0,22,23,10,24,121,21,92,0,25,7,9,16,0,2,7,0,82,3,2,0,106,2,2,4,32,21,3,0,32,24,2,0,19,21,21,24,121,21,3,0,1,16,25,0,119,0,53,0,106,6,9,12,35,21,2,0,32,24,2,0,16,23,3,20,19,24,24,23,20,21,21,24,0,4,21,0,125,5,4,3,20,0,0,0,19,21,5,20,0,18,21,0,84,11,18,0,80,21,10,0,1,24,0,0,135,19,3,0,21,6,11,24,80,24,11,0,41,21,18,16,42,21,21,16,13,24,24,21,19,24,19,24,120,24,2,0,119,0,16,0,1,21,0,0,125,24,4,2,21,0,0,0,135,3,242,0,3,2,5,24,128,24,0,0,0,2,24,0,32,24,3,0,32,21,2,0,19,24,24,21,121,24,3,0,1,16,25,0,119,0,17,0,3,6,6,5,119,0,220,255,2,24,0,0,0,192,3,0,135,19,169,0,24,0,0,0,78,21,8,0,34,21,21,0,121,21,4,0,82,21,14,0,0,24,21,0,119,0,2,0,0,24,14,0,85,12,24,0,135,24,170,0,0,19,12,0,32,24,16,25,121,24,23,0,2,24,0,0,23,192,3,0,135,19,169,0,24,0,0,0,0,6,7,0,106,7,6,4,106,12,9,8,78,21,8,0,34,21,21,0,121,21,4,0,82,21,14,0,0,24,21,0,119,0,2,0,0,24,14,0,0,18,24,0,0,11,13,0,116,11,6,0,109,11,4,7,109,13,8,12,109,13,12,18,135,24,170,0,0,19,13,0,80,21,10,0,1,23,0,0,135,24,44,0,21,23,0,0,119,0,15,0,2,24,0,0,232,191,3,0,135,19,169,0,24,0,0,0,78,23,8,0,34,23,23,0,121,23,4,0,82,23,14,0,0,24,23,0,119,0,2,0,0,24,14,0,85,6,24,0,135,24,170,0,0,19,6,0,135,24,243,0,9,0,0,0,119,0,4,0,1,16,5,0,119,0,2,0,1,16,5,0,32,24,16,5,121,24,8,0,2,21,0,0,200,191,3,0,135,23,169,0,21,0,0,0,135,24,170,0,0,23,3,0,25,1,15,11,78,24,1,0,34,24,24,0,121,24,4,0,82,23,15,0,135,24,77,0,23,0,0,0,102,24,14,11,34,24,24,0,121,24,4,0,82,23,14,0,135,24,77,0,23,0,0,0,137,17,0,0,139,0,0,0,140,0,17,0,0,0,0,0,2,10,0,0,72,51,13,0,2,11,0,0,75,51,13,0,2,12,0,0,255,7,0,0,136,13,0,0,0,9,13,0,136,13,0,0,25,13,13,16,137,13,0,0,0,2,9,0,135,0,121,0,2,13,0,0,24,205,52,0,82,1,13,0,1,13,10,0,4,13,13,0,3,13,13,1,34,13,13,1,121,13,46,0,2,13,0,0,12,205,52,0,82,13,13,0,120,13,9,0,2,13,0,0,24,205,52,0,85,13,0,0,1,14,1,0,135,13,241,0,14,0,0,0,135,2,121,0,119,0,35,0,1,13,208,7,4,13,13,0,3,13,13,1,34,13,13,1,121,13,27,0,1,13,200,0,4,13,13,0,2,14,0,0,28,205,52,0,82,14,14,0,3,13,13,14,34,13,13,1,121,13,3,0,0,2,0,0,119,0,20,0,2,14,0,0,165,177,3,0,135,13,34,0,14,2,0,0,2,13,0,0,20,205,52,0,1,14,1,0,85,13,14,0,135,14,244,0,1,13,47,0,1,15,0,0,1,16,1,0,135,14,245,0,13,15,16,0,0,2,0,0,119,0,4,0,0,2,0,0,119,0,2,0,0,2,0,0,2,14,0,0,28,205,52,0,85,14,2,0,134,14,0,0,116,145,1,0,121,14,29,0,2,14,0,0,64,206,52,0,82,14,14,0,19,14,14,12,135,0,246,0,14,0,0,0,34,14,0,0,121,14,4,0,1,0,1,0,1,1,43,0,119,0,34,0,121,0,242,255,1,14,127,0,47,14,14,0,184,76,1,0,1,0,0,0,1,1,43,0,119,0,27,0,2,14,0,0,16,200,4,0,41,16,0,2,94,14,14,16,19,14,14,12,135,0,246,0,14,0,0,0,121,0,228,255,1,1,43,0,119,0,17,0,135,14,247,0,2,14,0,0,32,205,52,0,82,14,14,0,120,14,3,0,1,1,16,0,119,0,10,0,135,14,248,0,2,14,0,0,32,205,52,0,2,16,0,0,32,205,52,0,82,16,16,0,26,16,16,1,85,14,16,0,119,0,210,255,32,16,1,16,121,16,63,1,2,16,0,0,114,202,203,1,78,16,16,0,121,16,24,0,2,16,0,0,32,205,52,0,1,14,5,0,85,16,14,0,2,14,0,0,36,205,52,0,135,16,121,0,85,14,16,0,2,16,0,0,40,205,52,0,1,14,0,0,85,16,14,0,2,14,0,0,4,205,52,0,1,16,0,0,85,14,16,0,2,16,0,0,8,205,52,0,1,14,0,0,85,16,14,0,1,8,0,0,137,9,0,0,139,8,0,0,135,1,121,0,2,14,0,0,8,205,52,0,82,14,14,0,2,16,0,0,40,205,52,0,82,16,16,0,3,8,14,16,2,16,0,0,8,205,52,0,85,16,8,0,2,16,0,0,36,205,52,0,82,0,16,0,50,16,1,0,80,78,1,0,2,16,0,0,40,205,52,0,1,14,0,0,85,16,14,0,2,14,0,0,12,205,52,0,82,14,14,0,120,14,7,0,2,14,0,0,24,205,52,0,85,14,1,0,1,16,1,0,135,14,241,0,16,0,0,0,135,8,121,0,2,14,0,0,4,205,52,0,82,14,14,0,4,16,1,8,3,8,14,16,2,16,0,0,4,205,52,0,1,15,0,0,15,15,15,8,1,13,0,0,125,14,15,8,13,0,0,0,85,16,14,0,1,8,0,0,137,9,0,0,139,8,0,0,4,0,1,0,2,14,0,0,32,205,52,0,85,14,0,0,2,14,0,0,36,205,52,0,85,14,1,0,2,14,0,0,4,205,52,0,82,14,14,0,4,16,1,2,3,4,14,16,2,16,0,0,4,205,52,0,85,16,4,0,1,16,25,0,48,16,16,0,244,78,1,0,26,16,0,25,2,14,0,0,44,205,52,0,82,14,14,0,3,7,16,14,2,14,0,0,44,205,52,0,85,14,7,0,2,14,0,0,32,205,52,0,1,16,25,0,85,14,16,0,1,16,50,0,48,16,16,7,236,78,1,0,2,16,0,0,44,205,52,0,1,14,50,0,85,16,14,0,1,0,25,0,119,0,30,0,1,0,25,0,119,0,28,0,2,14,0,0,44,205,52,0,82,1,14,0,121,1,24,0,1,14,25,0,4,2,14,0,48,14,1,2,56,79,1,0,3,0,1,0,2,14,0,0,32,205,52,0,85,14,0,0,2,14,0,0,44,205,52,0,1,16,0,0,85,14,16,0,119,0,11,0,2,16,0,0,44,205,52,0,4,14,1,2,85,16,14,0,2,14,0,0,32,205,52,0,1,16,25,0,85,14,16,0,1,0,25,0,119,0,1,0,2,16,0,0,40,205,52,0,85,16,0,0,2,16,0,0,116,202,203,1,78,16,16,0,33,16,16,0,2,14,0,0,117,202,203,1,78,14,14,0,32,14,14,0,19,16,16,14,120,16,4,0,1,8,0,0,137,9,0,0,139,8,0,0,1,16,249,0,16,6,16,8,1,16,249,0,15,16,16,4,20,16,6,16,120,16,26,0,1,16,18,0,16,0,16,0,1,16,4,0,16,16,16,8,19,16,16,0,120,16,20,0,120,0,4,0,1,8,0,0,137,9,0,0,139,8,0,0,2,16,0,0,88,8,3,0,82,16,16,0,28,8,16,3,2,16,0,0,88,8,3,0,1,13,232,3,15,13,13,8,1,15,232,3,125,14,13,8,15,0,0,0,85,16,14,0,1,8,0,0,137,9,0,0,139,8,0,0,34,14,4,1,121,14,7,0,2,14,0,0,4,205,52,0,1,16,1,0,85,14,16,0,1,7,1,0,119,0,2,0,0,7,4,0,2,14,0,0,96,8,3,0,82,14,14,0,2,15,0,0,0,240,0,0,5,14,14,15,1,15,16,39,6,14,14,15,5,16,14,8,7,1,16,7,2,16,0,0,88,8,3,0,82,0,16,0,34,16,0,0,41,16,16,31,42,16,16,31,0,5,16,0,1,16,0,0,135,2,249,0,0,5,8,16,128,16,0,0,0,4,16,0,1,16,0,0,15,16,16,4,32,14,4,0,1,15,0,0,16,15,15,2,19,14,14,15,20,16,16,14,121,16,47,0,2,8,0,0,192,84,51,0,82,16,8,0,77,16,16,0,61,14,0,0,0,0,128,79,106,15,8,4,76,15,15,0,65,14,14,15,63,16,16,14,77,14,2,0,61,15,0,0,0,0,128,79,76,13,4,0,65,15,15,13,63,14,14,15,66,3,16,14,59,14,1,0,71,14,3,14,121,14,27,0,59,14,1,0,64,14,14,3,76,16,1,0,65,14,14,16,75,1,14,0,34,14,7,10,19,14,6,14,1,16,0,80,15,16,16,1,19,14,14,16,1,16,0,80,125,1,14,16,1,0,0,0,34,16,1,0,41,16,16,31,42,16,16,31,135,8,249,0,1,16,0,5,128,16,0,0,1,14,0,8,1,15,0,0,135,8,250,0,8,16,14,15,42,15,0,1,25,15,15,1,3,0,15,8,1,15,232,3,15,15,15,0,1,14,232,3,125,0,15,0,14,0,0,0,1,14,10,0,47,14,14,1,216,81,1,0,1,14,188,2,15,14,7,14,1,15,120,0,15,15,15,1,20,14,14,15,121,14,13,0,2,14,0,0,100,8,3,0,82,8,14,0,2,14,0,0,88,8,3,0,1,16,0,0,15,16,16,8,15,13,8,0,19,16,16,13,125,15,16,8,0,0,0,0,85,14,15,0,2,8,0,0,192,84,51,0,1,15,0,0,85,8,15,0,1,14,0,0,109,8,4,14,2,14,0,0,4,205,52,0,1,15,0,0,85,14,15,0,2,15,0,0,8,205,52,0,1,14,0,0,85,15,14,0,1,8,0,0,137,9,0,0,139,8,0,0,119,0,5,0,32,14,1,43,121,14,3,0,137,9,0,0,139,0,0,0,1,14,0,0,139,14,0,0,140,2,22,0,0,0,0,0,2,18,0,0,255,0,0,0,1,7,0,0,136,19,0,0,0,17,19,0,136,19,0,0,25,19,19,80,137,19,0,0,25,13,17,72,25,12,17,64,25,11,17,56,25,10,17,48,25,9,17,40,25,5,17,32,25,3,17,24,25,2,17,16,25,15,17,78,25,16,17,76,2,20,0,0,215,76,4,0,135,19,168,0,1,20,0,0,121,19,32,0,2,21,0,0,2,75,4,0,135,20,169,0,21,0,0,0,135,19,170,0,0,20,17,0,2,19,0,0,100,83,4,0,135,1,169,0,19,0,0,0,2,20,0,0,92,154,4,0,25,21,17,8,135,19,170,0,0,20,21,0,2,21,0,0,241,76,4,0,135,19,86,0,21,1,0,0,120,19,8,0,2,21,0,0,127,83,4,0,135,19,170,0,0,21,3,0,137,17,0,0,139,0,0,0,119,0,5,0,135,19,170,0,0,1,2,0,137,17,0,0,139,0,0,0,2,19,0,0,253,159,4,0,135,8,168,0,1,19,0,0,2,19,0,0,7,160,4,0,135,14,168,0,1,19,0,0,2,21,0,0,9,160,4,0,135,19,168,0,1,21,0,0,120,1,4,0,1,1,0,0,1,7,19,0,119,0,71,0,135,19,55,0,1,0,0,0,3,6,1,19,78,2,1,0,41,19,2,24,42,19,19,24,121,19,12,0,19,21,2,18,135,19,171,0,21,0,0,0,120,19,2,0,119,0,7,0,25,1,1,1,78,2,1,0,41,19,2,24,42,19,19,24,33,19,19,0,120,19,246,255,135,3,172,0,1,0,0,0,33,4,3,0,121,4,17,0,78,19,3,0,121,19,15,0,102,21,3,1,135,19,251,0,21,0,0,0,33,19,19,99,121,19,10,0,2,19,0,0,10,79,4,0,135,16,169,0,19,0,0,0,85,5,3,0,135,19,170,0,0,16,5,0,137,17,0,0,139,0,0,0,45,19,1,3,8,84,1,0,135,19,55,0,1,0,0,0,3,19,1,19,25,1,19,1,25,2,3,2,121,4,19,0,78,21,2,0,32,21,21,58,121,21,4,0,25,21,3,3,0,19,21,0,119,0,2,0,0,19,2,0,0,2,19,0,16,19,6,1,1,21,0,0,125,1,19,21,1,0,0,0,78,21,2,0,120,21,3,0,1,7,19,0,119,0,9,0,0,4,2,0,119,0,7,0,16,21,6,1,1,19,0,0,125,1,21,19,1,0,0,0,1,7,19,0,119,0,1,0,32,19,7,19,121,19,3,0,2,4,0,0,135,83,4,0,120,14,18,0,78,2,4,0,83,15,2,0,41,19,2,24,42,19,19,24,121,19,13,0,0,3,4,0,19,21,2,18,135,19,72,0,21,0,0,0,83,3,19,0,25,3,3,1,78,2,3,0,83,15,2,0,41,19,2,24,42,19,19,24,33,19,19,0,120,19,246,255,120,1,3,0,1,1,0,0,119,0,36,0,78,2,1,0,41,19,2,24,42,19,19,24,121,19,32,0,19,21,2,18,135,19,171,0,21,0,0,0,120,19,2,0,119,0,8,0,25,1,1,1,78,2,1,0,41,19,2,24,42,19,19,24,120,19,247,255,1,2,0,0,119,0,1,0,135,3,55,0,1,0,0,0,1,19,1,0,16,19,19,3,41,21,2,24,42,21,21,24,32,21,21,34,19,19,19,21,121,19,9,0,26,19,3,1,3,2,1,19,78,19,2,0,32,19,19,34,121,19,4,0,1,19,0,0,83,2,19,0,25,1,1,1,135,19,170,0,0,1,9,0,120,8,35,0,121,1,7,0,78,19,1,0,121,19,5,0,2,21,0,0,138,83,4,0,135,19,170,0,0,21,10,0,2,21,0,0,81,160,4,0,135,19,170,0,0,21,11,0,135,2,55,0,4,0,0,0,1,19,1,0,48,19,19,2,208,85,1,0,1,1,1,0,26,19,1,1,90,19,4,19,85,13,19,0,2,21,0,0,145,83,4,0,135,19,170,0,0,21,13,0,25,1,1,1,53,19,1,2,168,85,1,0,26,19,2,1,90,19,4,19,85,12,19,0,2,21,0,0,140,83,4,0,135,19,170,0,0,21,12,0,1,19,1,0,84,16,19,0,121,14,16,0,1,21,0,0,1,20,0,0,134,19,0,0,120,148,1,0,21,15,16,20,78,1,15,0,41,19,1,24,42,19,19,24,121,19,248,255,19,19,1,18,0,3,19,0,135,2,95,0,4,3,0,0,121,2,243,255,119,0,18,0,1,20,0,0,1,21,0,0,134,19,0,0,120,148,1,0,20,15,16,21,78,1,15,0,41,19,1,24,42,19,19,24,121,19,248,255,19,19,1,18,0,3,19,0,135,19,72,0,3,0,0,0,135,2,95,0,4,19,0,0,121,2,241,255,119,0,1,0,120,14,5,0,135,19,72,0,3,0,0,0,19,19,19,18,0,1,19,0,83,15,1,0,1,21,1,0,1,20,0,0,135,19,3,0,21,15,16,20,2,19,0,0,156,201,203,1,1,20,1,0,4,20,20,4,3,20,20,2,83,19,20,0,137,17,0,0,139,0,0,0,140,1,21,0,0,0,0,0,136,17,0,0,0,16,17,0,136,17,0,0,1,18,96,1,3,17,17,18,137,17,0,0,1,17,72,1,3,5,16,17,1,17,64,1,3,4,16,17,1,17,56,1,3,11,16,17,1,17,48,1,3,10,16,17,1,17,40,1,3,9,16,17,1,17,32,1,3,14,16,17,1,17,24,1,3,13,16,17,1,17,16,1,3,12,16,17,1,17,8,1,3,8,16,17,1,17,0,1,3,2,16,17,1,17,84,1,3,15,16,17,1,17,80,1,3,7,16,17,0,6,16,0,25,3,0,16,25,1,0,4,82,18,3,0,1,19,1,0,135,17,180,0,18,19,1,0,120,17,29,0,135,1,252,0,120,1,14,0,2,17,0,0,148,191,3,0,135,15,169,0,17,0,0,0,2,17,0,0,176,201,203,1,81,17,17,0,85,4,17,0,135,17,170,0,0,15,4,0,137,16,0,0,139,0,0,0,119,0,14,0,2,17,0,0,166,191,3,0,135,15,169,0,17,0,0,0,2,17,0,0,176,201,203,1,81,17,17,0,85,5,17,0,109,5,4,1,135,17,170,0,0,15,5,0,137,16,0,0,139,0,0,0,82,19,3,0,2,18,0,0,215,76,4,0,1,20,0,0,135,17,132,0,19,18,1,20,121,17,9,0,2,18,0,0,3,191,3,0,135,20,169,0,18,0,0,0,135,17,170,0,0,20,2,0,137,16,0,0,139,0,0,0,1,17,0,0,85,15,17,0,1,20,0,0,109,15,4,20,1,17,0,0,109,15,8,17,1,17,255,255,85,7,17,0,82,20,3,0,1,18,2,0,135,17,180,0,20,18,15,0,121,17,58,0,25,2,15,11,78,20,2,0,34,20,20,0,121,20,4,0,82,20,15,0,0,18,20,0,119,0,2,0,0,18,15,0,135,17,96,0,18,0,0,0,85,7,17,0,82,18,3,0,1,20,3,0,135,17,180,0,18,20,15,0,121,17,11,0,78,18,2,0,34,18,18,0,121,18,4,0,82,18,15,0,0,20,18,0,119,0,2,0,0,20,15,0,135,17,78,0,6,20,0,0,119,0,21,0,2,17,0,0,159,2,4,0,78,17,17,0,83,6,17,0,2,20,0,0,160,2,4,0,78,20,20,0,107,6,1,20,2,17,0,0,161,2,4,0,78,17,17,0,107,6,2,17,2,20,0,0,162,2,4,0,78,20,20,0,107,6,3,20,2,17,0,0,163,2,4,0,78,17,17,0,107,6,4,17,102,17,1,11,34,17,17,0,121,17,3,0,82,2,1,0,119,0,2,0,0,2,1,0,82,17,7,0,134,2,0,0,72,125,1,0,2,17,6,0,119,0,10,0,102,17,1,11,34,17,17,0,121,17,3,0,82,2,1,0,119,0,2,0,0,2,1,0,134,2,0,0,148,147,1,0,2,7,0,0,1,17,0,0,1,20,5,0,138,2,17,20,108,89,1,0,172,89,1,0,244,89,1,0,36,90,1,0,92,90,1,0,119,0,79,0,2,17,0,0,25,191,3,0,135,2,169,0,17,0,0,0,102,17,1,11,34,17,17,0,121,17,2,0,82,1,1,0,2,17,0,0,176,201,203,1,81,14,17,0,85,8,1,0,109,8,4,14,135,17,170,0,0,2,8,0,119,0,63,0,2,17,0,0,46,191,3,0,135,2,169,0,17,0,0,0,102,17,1,11,34,17,17,0,121,17,2,0,82,1,1,0,85,12,1,0,135,17,170,0,0,2,12,0,2,18,0,0,3,191,3,0,135,20,169,0,18,0,0,0,135,17,170,0,0,20,13,0,119,0,45,0,2,17,0,0,72,191,3,0,135,2,169,0,17,0,0,0,102,17,1,11,34,17,17,0,121,17,2,0,82,1,1,0,85,14,1,0,135,17,170,0,0,2,14,0,119,0,33,0,2,17,0,0,97,191,3,0,135,2,169,0,17,0,0,0,102,17,1,11,34,17,17,0,121,17,2,0,82,1,1,0,82,14,7,0,85,9,1,0,109,9,4,14,135,17,170,0,0,2,9,0,119,0,19,0,2,17,0,0,125,191,3,0,135,2,169,0,17,0,0,0,102,17,1,11,34,17,17,0,121,17,2,0,82,1,1,0,85,10,1,0,135,17,170,0,0,2,10,0,2,18,0,0,3,191,3,0,135,20,169,0,18,0,0,0,135,17,170,0,0,20,11,0,119,0,1,0,102,17,15,11,34,17,17,0,121,17,4,0,82,20,15,0,135,17,77,0,20,0,0,0,137,16,0,0,139,0,0,0,140,4,18,0,0,0,0,0,2,12,0,0,156,16,0,0,2,13,0,0,160,17,0,0,2,14,0,0,90,8,0,0,1,9,0,0,136,15,0,0,0,11,15,0,136,15,0,0,1,16,0,1,3,15,15,16,137,15,0,0,0,6,11,0,2,16,0,0,109,238,3,0,1,17,2,0,135,15,83,0,1,16,17,0,120,15,14,0,3,4,0,13,78,15,4,0,120,15,4,0,1,10,0,0,137,11,0,0,139,10,0,0,1,15,0,0,83,4,15,0,1,17,0,0,96,0,12,17,1,10,0,0,137,11,0,0,139,10,0,0,135,17,78,0,6,1,0,0,135,7,55,0,6,0,0,0,1,17,168,17,94,8,0,17,120,8,3,0,1,9,8,0,119,0,23,0,1,17,164,17,94,5,0,17,1,4,0,0,41,15,4,2,94,15,5,15,135,17,83,0,6,15,7,0,120,17,2,0,119,0,7,0,25,4,4,1,50,17,8,4,172,91,1,0,1,9,8,0,119,0,9,0,119,0,245,255,3,4,0,13,78,17,4,0,120,17,5,0,1,17,1,0,83,4,17,0,1,15,0,0,96,0,12,15,32,15,9,8,121,15,209,0,1,15,172,17,135,10,79,0,15,0,0,0,1,17,0,0,135,15,223,0,10,17,14,0,1,17,255,255,96,10,14,17,1,17,92,8,1,15,0,0,96,10,17,15,1,15,94,8,1,17,255,255,96,10,15,17,1,17,96,8,1,15,0,0,96,10,17,15,1,15,98,8,1,17,255,255,96,10,15,17,1,17,100,8,1,15,0,0,96,10,17,15,1,15,102,8,1,17,255,255,96,10,15,17,1,17,104,8,1,15,0,0,96,10,17,15,1,15,106,8,1,17,255,255,96,10,15,17,1,17,108,8,1,15,0,0,96,10,17,15,1,15,110,8,1,17,255,255,96,10,15,17,1,17,112,8,1,15,0,0,96,10,17,15,1,15,114,8,1,17,255,255,96,10,15,17,1,17,116,8,1,15,0,0,96,10,17,15,1,15,118,8,1,17,255,255,96,10,15,17,1,17,120,8,1,15,0,0,96,10,17,15,1,15,122,8,1,17,255,255,96,10,15,17,1,17,124,8,1,15,0,0,96,10,17,15,1,15,126,8,1,17,255,255,96,10,15,17,1,17,128,8,1,15,0,0,96,10,17,15,1,15,130,8,1,17,255,255,96,10,15,17,1,17,132,8,1,15,0,0,96,10,17,15,1,15,134,8,1,17,255,255,96,10,15,17,1,17,136,8,1,15,0,0,96,10,17,15,1,15,138,8,1,17,255,255,96,10,15,17,1,17,140,8,1,15,0,0,96,10,17,15,1,15,142,8,1,17,255,255,96,10,15,17,1,17,144,8,1,15,0,0,96,10,17,15,1,15,146,8,1,17,255,255,96,10,15,17,1,17,148,8,1,15,0,0,96,10,17,15,1,15,150,8,1,17,255,255,96,10,15,17,1,17,153,8,1,15,15,0,95,10,17,15,1,15,154,16,1,17,0,0,96,10,15,17,1,15,0,0,96,10,12,15,1,15,158,16,1,17,0,0,96,10,15,17,1,17,168,17,3,9,10,17,1,17,0,0,85,9,17,0,1,17,164,17,3,0,10,17,1,17,0,0,85,0,17,0,1,15,0,0,95,10,13,15,1,15,160,16,3,5,10,15,2,15,0,0,134,29,4,0,78,15,15,0,83,5,15,0,2,17,0,0,135,29,4,0,78,17,17,0,107,5,1,17,2,15,0,0,136,29,4,0,78,15,15,0,107,5,2,15,2,17,0,0,137,29,4,0,78,17,17,0,107,5,3,17,2,15,0,0,138,29,4,0,78,15,15,0,107,5,4,15,1,17,0,0,135,15,253,0,17,1,0,0,2,17,0,0,255,255,0,0,19,15,15,17,0,5,15,0,85,3,5,0,1,15,255,255,135,4,254,0,10,1,15,5,120,4,32,0,1,15,0,0,2,17,0,0,159,2,4,0,134,4,0,0,208,194,0,0,15,17,5,0,120,4,3,0,85,2,10,0,119,0,47,0,82,5,0,0,121,5,18,0,82,6,9,0,121,6,14,0,1,8,0,0,41,17,8,2,94,7,5,17,121,7,5,0,135,17,127,0,7,0,0,0,82,5,0,0,82,6,9,0,25,8,8,1,55,17,8,6,112,94,1,0,120,5,2,0,119,0,3,0,135,17,127,0,5,0,0,0,135,17,77,0,10,0,0,0,119,0,22,0,82,5,0,0,121,5,18,0,82,6,9,0,121,6,14,0,1,8,0,0,41,17,8,2,94,7,5,17,121,7,5,0,135,17,127,0,7,0,0,0,82,5,0,0,82,6,9,0,25,8,8,1,55,17,8,6,200,94,1,0,120,5,2,0,119,0,3,0,135,17,127,0,5,0,0,0,135,17,77,0,10,0,0,0,0,10,4,0,137,11,0,0,139,10,0,0,1,10,0,0,137,11,0,0,139,10,0,0,140,1,19,0,0,0,0,0,2,15,0,0,255,255,0,0,1,4,0,0,136,16,0,0,0,14,16,0,136,16,0,0,25,16,16,80,137,16,0,0,25,13,14,48,25,9,14,40,25,10,14,24,25,3,14,16,25,2,14,8,0,6,14,0,25,5,14,54,25,11,14,52,25,12,14,56,2,17,0,0,92,154,4,0,135,16,170,0,0,17,6,0,2,16,0,0,92,212,118,1,135,1,255,0,16,0,0,0,2,16,0,0,92,212,118,1,135,7,68,0,16,0,0,0,135,8,66,0,41,16,1,16,42,16,16,16,33,1,16,255,121,1,9,0,38,16,7,1,121,16,4,0,1,17,0,0,135,16,69,0,17,0,0,0,1,17,0,0,135,16,67,0,17,0,0,0,1,16,255,255,84,5,16,0,135,16,56,0,6,5,0,0,2,16,0,0,252,204,52,0,82,16,16,0,32,16,16,3,121,16,40,0,2,17,0,0,0,0,2,0,135,16,10,0,17,0,0,0,41,16,16,24,42,16,16,24,32,16,16,90,121,16,30,0,2,17,0,0,1,0,2,0,135,16,0,0,17,0,0,0,41,16,16,16,42,16,16,16,120,16,21,0,2,17,0,0,3,0,2,0,135,16,0,0,17,0,0,0,41,16,16,16,42,16,16,16,1,17,254,127,45,16,16,17,120,96,1,0,2,16,0,0,56,199,3,0,135,3,169,0,16,0,0,0,1,16,255,1,85,2,16,0,135,16,170,0,0,3,2,0,119,0,8,0,1,4,10,0,119,0,6,0,1,4,10,0,119,0,4,0,1,4,10,0,119,0,2,0,1,4,10,0,32,16,4,10,121,16,11,0,2,16,0,0,56,199,3,0,135,4,169,0,16,0,0,0,81,16,5,0,43,16,16,6,19,16,16,15,85,3,16,0,135,16,170,0,0,4,3,0,121,1,81,0,1,17,1,0,135,16,69,0,17,0,0,0,1,17,64,0,135,16,67,0,17,0,0,0,1,16,255,255,84,5,16,0,135,16,56,0,6,5,0,0,80,2,5,0,41,16,2,16,42,16,16,16,120,16,5,0,1,3,0,0,1,2,0,0,1,1,0,0,119,0,34,0,1,4,0,0,1,1,0,0,1,3,0,0,19,16,4,15,19,17,2,15,3,4,16,17,19,17,3,15,19,16,2,15,15,17,17,16,125,3,17,2,3,0,0,0,135,17,56,0,6,5,0,0,25,17,1,1,41,17,17,16,42,17,17,16,0,1,17,0,1,17,255,255,84,5,17,0,135,17,56,0,6,5,0,0,80,2,5,0,41,17,2,16,42,17,17,16,33,17,17,0,120,17,234,255,19,17,3,15,43,17,17,6,0,3,17,0,43,17,4,6,1,16,255,3,19,17,17,16,0,2,17,0,2,16,0,0,92,212,118,1,135,17,68,0,16,0,0,0,21,17,17,7,38,17,17,1,121,17,5,0,1,16,255,0,19,16,7,16,135,17,69,0,16,0,0,0,1,16,255,0,19,16,8,16,135,17,67,0,16,0,0,0,41,17,1,16,42,17,17,16,121,17,12,0,2,17,0,0,207,199,3,0,135,8,169,0,17,0,0,0,85,10,2,0,19,16,1,15,109,10,4,16,19,17,3,15,109,10,8,17,135,17,170,0,0,8,10,0,2,17,0,0,68,205,52,0,1,16,0,67,84,17,16,0,1,17,47,0,134,16,0,0,68,156,1,0,17,0,0,0,2,16,0,0,68,205,52,0,78,16,16,0,32,16,16,128,121,16,36,0,2,16,0,0,68,205,52,0,1,17,16,67,84,16,17,0,1,16,47,0,134,17,0,0,68,156,1,0,16,0,0,0,2,17,0,0,4,206,52,0,80,8,17,0,2,17,0,0,80,205,52,0,80,10,17,0,2,17,0,0,69,205,52,0,1,16,8,0,83,17,16,0,134,16,0,0,12,154,1,0,8,10,0,0,2,16,0,0,80,205,52,0,78,16,16,0,120,16,11,0,2,16,0,0,109,199,3,0,135,10,169,0,16,0,0,0,2,16,0,0,76,205,52,0,81,16,16,0,85,9,16,0,135,16,170,0,0,10,9,0,0,1,12,0,2,2,0,0,42,31,4,0,25,3,1,9,78,16,2,0,83,1,16,0,25,1,1,1,25,2,2,1,54,16,1,3,216,98,1,0,1,17,0,0,1,18,0,0,135,16,43,0,12,17,11,18,120,16,3,0,137,14,0,0,139,0,0,0,80,18,11,0,1,17,0,0,135,16,44,0,18,17,0,0,2,16,0,0,69,205,52,0,1,17,66,0,83,16,17,0,1,16,103,0,134,17,0,0,68,156,1,0,16,0,0,0,2,17,0,0,158,199,3,0,135,12,169,0,17,0,0,0,2,17,0,0,80,205,52,0,81,17,17,0,41,17,17,4,85,13,17,0,135,17,170,0,0,12,13,0,137,14,0,0,139,0,0,0,140,1,17,0,0,0,0,0,2,12,0,0,92,154,4,0,136,13,0,0,0,11,13,0,136,13,0,0,1,14,128,16,3,13,13,14,137,13,0,0,1,13,40,16,3,8,11,13,1,13,32,16,3,3,11,13,1,13,24,16,3,7,11,13,1,13,16,16,3,6,11,13,1,13,8,16,3,4,11,13,1,13,0,16,3,2,11,13,0,9,11,0,1,13,112,16,3,10,11,13,1,13,48,16,3,5,11,13,1,14,0,0,1,15,0,16,135,13,223,0,9,14,15,0,1,13,0,0,85,10,13,0,1,15,0,0,109,10,4,15,1,13,0,0,109,10,8,13,25,1,0,16,82,15,1,0,2,14,0,0,97,50,4,0,135,13,0,1,15,14,10,0,121,13,53,0,25,1,10,11,78,15,1,0,34,15,15,0,121,15,4,0,82,15,10,0,0,14,15,0,119,0,2,0,0,14,10,0,135,13,78,0,9,14,0,0,2,13,0,0,100,50,4,0,135,2,174,0,9,13,0,0,121,2,3,0,1,13,0,0,83,2,13,0,135,13,234,0,5,0,0,0,2,13,0,0,228,136,3,0,85,5,13,0,25,8,5,24,85,8,8,0,109,5,28,8,1,14,0,0,109,5,32,14,25,8,5,36,85,8,8,0,109,5,40,8,1,13,0,0,109,5,44,13,1,14,0,0,108,5,54,14,1,13,0,0,107,5,61,13,1,14,0,0,109,5,56,14,1,13,0,0,107,5,62,13,1,14,0,0,109,5,48,14,102,13,0,60,107,5,60,13,134,13,0,0,64,108,1,0,5,9,0,0,135,13,1,1,5,0,0,0,135,13,2,1,5,0,0,0,119,0,121,0,82,14,1,0,2,15,0,0,103,50,4,0,1,16,1,0,135,13,132,0,14,15,10,16,121,13,54,0,2,13,0,0,109,50,4,0,135,1,169,0,13,0,0,0,2,13,0,0,32,77,4,0,85,2,13,0,135,13,170,0,0,1,2,0,2,13,0,0,252,204,52,0,82,1,13,0,32,13,1,1,121,13,10,0,2,15,0,0,129,50,4,0,135,16,169,0,15,0,0,0,135,13,170,0,0,16,4,0,2,13,0,0,252,204,52,0,82,1,13,0,120,1,7,0,2,15,0,0,147,50,4,0,135,16,169,0,15,0,0,0,135,13,170,0,0,16,6,0,2,15,0,0,166,50,4,0,135,16,169,0,15,0,0,0,135,13,170,0,0,16,7,0,102,15,10,11,34,15,15,0,121,15,4,0,82,15,10,0,0,16,15,0,119,0,2,0,0,16,10,0,135,13,78,0,9,16,0,0,1,16,0,0,1,15,255,255,135,13,3,1,10,16,15,0,134,13,0,0,64,108,1,0,0,9,0,0,119,0,10,0,2,13,0,0,184,50,4,0,135,7,169,0,13,0,0,0,2,13,0,0,32,77,4,0,85,3,13,0,135,13,170,0,0,7,3,0,25,1,0,56,25,2,0,60,25,3,0,61,82,4,1,0,120,4,18,0,78,13,2,0,121,13,3,0,135,13,4,1,0,0,0,0,134,13,0,0,4,58,0,0,0,9,0,0,134,13,0,0,64,108,1,0,0,9,0,0,78,13,2,0,121,13,32,0,82,13,1,0,120,13,30,0,135,13,5,1,0,12,0,0,119,0,27,0,82,15,4,0,106,15,15,8,1,16,255,0,19,15,15,16,135,13,13,0,15,4,9,0,121,13,20,0,78,13,2,0,32,13,13,0,78,15,9,0,32,15,15,64,20,13,13,15,120,13,7,0,135,13,4,1,0,0,0,0,135,13,5,1,0,9,0,0,135,13,5,1,0,12,0,0,134,13,0,0,64,108,1,0,0,9,0,0,78,13,2,0,121,13,3,0,135,13,170,0,0,12,8,0,78,13,3,0,121,13,210,255,25,1,10,11,1,13,0,0,78,15,1,0,49,13,13,15,232,102,1,0,137,11,0,0,139,0,0,0,82,15,10,0,135,13,77,0,15,0,0,0,137,11,0,0,139,0,0,0,140,0,22,0,0,0,0,0,2,9,0,0,229,168,94,0,2,10,0,0,255,7,0,0,2,11,0,0,247,168,94,0,136,12,0,0,0,8,12,0,136,12,0,0,25,12,12,48,137,12,0,0,25,5,8,24,25,4,8,16,25,3,8,8,0,2,8,0,25,0,8,32,1,12,255,255,135,7,100,0,12,0,0,0,1,13,1,0,135,12,100,0,13,0,0,0,2,12,0,0,150,202,203,1,78,12,12,0,120,12,3,0,1,6,0,0,119,0,3,0,135,12,101,0,1,6,1,0,1,13,0,0,135,12,6,1,13,0,0,0,1,12,128,2,1,13,224,1,135,1,7,1,12,13,0,0,2,13,0,0,192,163,122,1,85,13,1,0,120,1,7,0,135,13,104,0,85,2,13,0,2,12,0,0,35,17,4,0,135,13,7,0,12,2,0,0,135,2,105,0,1,0,0,0,2,13,0,0,216,163,122,1,85,13,2,0,120,2,7,0,135,13,104,0,85,3,13,0,2,12,0,0,35,17,4,0,135,13,7,0,12,3,0,0,2,13,0,0,220,163,122,1,1,14,0,0,1,15,128,2],eb+81920);HEAPU8.set([1,16,224,1,1,17,8,0,1,18,0,0,1,19,0,0,1,20,0,0,1,21,0,0,135,12,113,0,14,15,16,17,18,19,20,21,85,13,12,0,2,12,0,0,212,163,122,1,1,21,0,0,1,20,128,2,1,19,224,1,1,18,32,0,2,17,0,0,0,255,0,0,2,16,0,0,0,0,255,0,2,15,0,0,0,0,0,255,1,14,0,0,135,13,113,0,21,20,19,18,17,16,15,14,85,12,13,0,1,12,128,2,1,14,224,1,135,13,8,1,0,12,14,0,2,13,0,0,196,163,122,1,82,14,0,0,85,13,14,0,2,14,0,0,200,163,122,1,106,13,0,4,85,14,13,0,2,13,0,0,204,163,122,1,106,14,0,8,85,13,14,0,2,14,0,0,208,163,122,1,106,13,0,12,85,14,13,0,1,13,0,1,135,1,9,1,13,0,0,0,2,14,0,0,32,25,2,0,1,12,0,0,1,15,6,0,135,13,10,1,1,14,12,15,2,15,0,0,220,163,122,1,82,15,15,0,135,13,11,1,15,1,0,0,2,13,0,0,48,164,122,1,82,0,13,0,121,0,10,0,82,15,0,0,106,15,15,16,19,15,15,10,135,13,219,0,15,0,0,0,2,13,0,0,48,164,122,1,1,15,0,0,85,13,15,0,2,15,0,0,224,163,122,1,1,13,0,0,83,15,13,0,2,13,0,0,228,163,122,1,1,15,0,0,85,13,15,0,2,15,0,0,240,163,122,1,1,13,1,0,83,15,13,0,2,13,0,0,241,163,122,1,1,15,0,0,83,13,15,0,2,15,0,0,52,164,122,1,82,3,15,0,2,15,0,0,134,29,4,0,85,4,15,0,2,13,0,0,189,16,4,0,135,15,12,1,3,13,4,0,2,15,0,0,56,164,122,1,82,4,15,0,2,15,0,0,187,202,203,1,85,5,15,0,2,13,0,0,0,17,4,0,135,15,12,1,4,13,5,0,2,15,0,0,56,164,122,1,82,15,15,0,1,13,2,0,107,15,20,13,2,13,0,0,60,164,122,1,82,13,13,0,1,15,0,0,107,13,21,15,2,15,0,0,232,163,122,1,1,13,0,0,85,15,13,0,2,13,0,0,64,164,122,1,82,13,13,0,1,15,0,0,107,13,21,15,2,15,0,0,68,164,122,1,82,15,15,0,1,13,0,0,107,15,21,13,2,13,0,0,72,164,122,1,82,13,13,0,1,15,0,0,107,13,21,15,2,15,0,0,76,164,122,1,82,15,15,0,1,13,0,0,107,15,21,13,2,13,0,0,80,164,122,1,82,13,13,0,1,15,0,0,107,13,21,15,2,15,0,0,84,164,122,1,82,15,15,0,1,13,0,0,107,15,21,13,2,13,0,0,88,164,122,1,82,13,13,0,1,15,0,0,107,13,21,15,2,15,0,0,240,163,122,1,1,13,1,0,83,15,13,0,1,15,1,0,135,13,13,1,15,0,0,0,2,13,0,0,224,163,122,1,78,13,13,0,120,13,76,0,2,13,0,0,240,163,122,1,78,13,13,0,120,13,7,0,2,15,0,0,192,163,122,1,82,15,15,0,135,13,126,0,15,0,0,0,119,0,58,0,2,13,0,0,240,163,122,1,1,15,0,0,83,13,15,0,2,13,0,0,220,163,122,1,82,13,13,0,1,12,0,0,1,14,0,0,135,15,116,0,13,12,14,0,2,15,0,0,144,163,122,1,82,0,15,0,2,15,0,0,148,163,122,1,82,15,15,0,46,15,0,15,76,107,1,0,82,5,0,0,82,14,5,0,106,14,14,8,19,14,14,10,135,15,219,0,14,5,0,0,25,0,0,4,2,15,0,0,148,163,122,1,82,15,15,0,53,15,0,15,28,107,1,0,2,14,0,0,220,163,122,1,82,14,14,0,1,12,0,0,2,13,0,0,212,163,122,1,82,13,13,0,1,16,0,0,135,15,14,1,14,12,13,16,2,16,0,0,212,163,122,1,82,16,16,0,1,13,0,0,2,12,0,0,216,163,122,1,82,12,12,0,2,14,0,0,196,163,122,1,135,15,125,0,16,13,12,14,2,14,0,0,192,163,122,1,82,14,14,0,135,15,126,0,14,0,0,0,135,15,15,1,1,14,1,0,135,15,123,0,14,0,0,0,2,15,0,0,224,163,122,1,78,15,15,0,121,15,182,255,2,14,0,0,220,163,122,1,82,14,14,0,135,15,118,0,14,0,0,0,2,14,0,0,212,163,122,1,82,14,14,0,135,15,118,0,14,0,0,0,135,15,16,1,1,0,0,0,1,14,0,0,135,15,13,1,14,0,0,0,120,6,6,0,135,15,100,0,7,0,0,0,135,15,163,0,137,8,0,0,139,0,0,0,135,15,101,0,135,15,100,0,7,0,0,0,135,15,163,0,137,8,0,0,139,0,0,0,140,2,21,0,0,0,0,0,1,15,0,0,136,17,0,0,0,16,17,0,136,17,0,0,25,17,17,48,137,17,0,0,25,5,16,16,25,4,16,8,25,2,16,28,25,3,16,24,25,14,16,34,25,9,16,32,25,10,16,20,25,11,16,36,78,17,1,0,32,17,17,64,121,17,3,0,1,17,32,0,83,1,17,0,135,12,207,0,1,0,0,0,1,17,0,0,85,2,17,0,1,17,0,0,85,3,17,0,1,17,0,0,85,10,17,0,1,17,1,0,1,19,0,0,135,18,17,1,19,12,2,3,11,0,0,0,48,17,17,18,224,108,1,0,2,18,0,0,202,50,4,0,135,17,34,0,18,16,0,0,82,13,2,0,33,1,13,0,82,6,3,0,33,17,6,0,20,17,1,17,120,17,6,0,134,17,0,0,64,41,1,0,0,12,0,0,137,16,0,0,139,0,0,0,25,8,0,20,82,18,8,0,1,19,0,0,135,17,12,0,18,19,0,0,41,17,17,24,42,17,17,24,33,7,17,255,82,19,8,0,1,18,1,0,135,17,12,0,19,18,0,0,41,17,17,24,42,17,17,24,33,8,17,255,120,13,3,0,1,3,1,0,119,0,27,0,1,18,0,0,1,19,0,0,135,17,43,0,13,18,14,19,121,17,21,0,80,19,14,0,1,18,0,0,135,17,44,0,19,18,0,0,85,4,13,0,2,18,0,0,250,50,4,0,135,17,34,0,18,4,0,0,121,7,5,0,1,18,0,0,1,19,0,0,135,17,44,0,18,19,0,0,1,19,0,0,1,18,0,0,135,17,43,0,13,19,14,18,1,3,0,0,119,0,2,0,1,3,0,0,120,6,4,0,1,1,1,0,1,15,27,0,119,0,78,0,85,5,6,0,2,18,0,0,24,51,4,0,135,17,34,0,18,5,0,0,121,8,5,0,1,18,1,0,1,19,0,0,135,17,44,0,18,19,0,0,20,17,1,7,0,2,17,0,120,2,7,0,2,19,0,0,106,85,4,0,1,18,2,0,1,20,0,0,135,17,43,0,19,18,14,20,78,17,11,0,120,17,9,0,1,17,2,0,1,20,32,0,1,18,18,0,135,1,76,0,6,17,20,18,14,9,0,0,1,15,22,0,119,0,18,0,1,20,2,0,1,17,0,0,135,18,43,0,6,20,14,17,121,18,7,0,1,17,1,0,1,20,2,0,1,19,0,0,135,18,48,0,17,10,20,19,119,0,7,0,1,18,32,0,1,19,0,0,135,1,42,0,6,18,14,19,1,15,22,0,119,0,1,0,32,19,15,22,121,19,10,0,40,19,8,1,20,19,1,19,120,19,7,0,2,18,0,0,106,85,4,0,1,20,2,0,1,17,0,0,135,19,43,0,18,20,14,17,121,2,4,0,1,1,0,0,1,15,27,0,119,0,17,0,1,17,0,0,1,20,0,0,135,19,44,0,17,20,0,0,134,19,0,0,64,41,1,0,0,12,0,0,121,3,7,0,1,20,1,0,1,17,0,0,135,19,44,0,20,17,0,0,1,15,33,0,119,0,3,0,1,1,0,0,1,15,28,0,32,19,15,27,121,19,12,0,134,19,0,0,64,41,1,0,0,12,0,0,121,3,7,0,121,1,4,0,137,16,0,0,139,0,0,0,119,0,4,0,1,15,32,0,119,0,2,0,1,15,28,0,32,19,15,28,121,19,19,0,1,17,0,0,1,20,0,0,135,19,44,0,17,20,0,0,121,7,7,0,2,20,0,0,106,85,4,0,1,17,2,0,1,18,0,0,135,19,43,0,20,17,14,18,135,19,18,1,13,0,0,0,121,1,4,0,137,16,0,0,139,0,0,0,119,0,2,0,1,15,32,0,32,19,15,32,121,19,15,0,1,18,1,0,1,17,0,0,135,19,44,0,18,17,0,0,121,7,9,0,121,8,9,0,2,17,0,0,106,85,4,0,1,18,2,0,1,20,0,0,135,19,43,0,17,18,14,20,119,0,2,0,1,15,33,0,32,19,15,33,121,19,18,0,2,20,0,0,106,85,4,0,1,18,2,0,1,17,0,0,135,19,43,0,20,18,14,17,121,8,7,0,2,17,0,0,106,85,4,0,1,18,2,0,1,20,0,0,135,19,43,0,17,18,14,20,1,20,0,0,1,18,0,0,135,19,44,0,20,18,0,0,135,19,18,1,6,0,0,0,137,16,0,0,139,0,0,0,140,2,14,0,0,0,0,0,136,9,0,0,0,8,9,0,136,9,0,0,25,9,9,32,137,9,0,0,25,7,8,8,0,6,8,0,25,5,8,16,109,0,4,1,2,9,0,0,228,15,3,0,85,0,9,0,2,9,0,0,176,201,203,1,1,10,181,1,84,9,10,0,1,10,172,17,135,0,79,0,10,0,0,0,1,9,0,0,1,11,90,8,135,10,223,0,0,9,11,0,1,10,90,8,1,11,255,255,96,0,10,11,1,11,92,8,1,10,0,0,96,0,11,10,1,10,94,8,1,11,255,255,96,0,10,11,1,11,96,8,1,10,0,0,96,0,11,10,1,10,98,8,1,11,255,255,96,0,10,11,1,11,100,8,1,10,0,0,96,0,11,10,1,10,102,8,1,11,255,255,96,0,10,11,1,11,104,8,1,10,0,0,96,0,11,10,1,10,106,8,1,11,255,255,96,0,10,11,1,11,108,8,1,10,0,0,96,0,11,10,1,10,110,8,1,11,255,255,96,0,10,11,1,11,112,8,1,10,0,0,96,0,11,10,1,10,114,8,1,11,255,255,96,0,10,11,1,11,116,8,1,10,0,0,96,0,11,10,1,10,118,8,1,11,255,255,96,0,10,11,1,11,120,8,1,10,0,0,96,0,11,10,1,10,122,8,1,11,255,255,96,0,10,11,1,11,124,8,1,10,0,0,96,0,11,10,1,10,126,8,1,11,255,255,96,0,10,11,1,11,128,8,1,10,0,0,96,0,11,10,1,10,130,8,1,11,255,255,96,0,10,11,1,11,132,8,1,10,0,0,96,0,11,10,1,10,134,8,1,11,255,255,96,0,10,11,1,11,136,8,1,10,0,0,96,0,11,10,1,10,138,8,1,11,255,255,96,0,10,11,1,11,140,8,1,10,0,0,96,0,11,10,1,10,142,8,1,11,255,255,96,0,10,11,1,11,144,8,1,10,0,0,96,0,11,10,1,10,146,8,1,11,255,255,96,0,10,11,1,11,148,8,1,10,0,0,96,0,11,10,1,10,150,8,1,11,255,255,96,0,10,11,1,11,153,8,1,10,15,0,95,0,11,10,1,10,154,16,1,11,0,0,96,0,10,11,1,11,156,16,1,10,0,0,96,0,11,10,1,10,158,16,1,11,0,0,96,0,10,11,1,11,168,17,1,10,0,0,97,0,11,10,1,10,164,17,1,11,0,0,97,0,10,11,1,11,160,17,1,10,0,0,95,0,11,10,1,10,160,16,3,2,0,10,2,10,0,0,134,29,4,0,78,10,10,0,83,2,10,0,2,11,0,0,135,29,4,0,78,11,11,0,107,2,1,11,2,10,0,0,136,29,4,0,78,10,10,0,107,2,2,10,2,11,0,0,137,29,4,0,78,11,11,0,107,2,3,11,2,10,0,0,138,29,4,0,78,10,10,0,107,2,4,10,2,10,0,0,152,212,118,1,85,10,0,0,1,10,0,0,85,5,10,0,1,11,0,0,109,5,4,11,1,10,0,0,109,5,8,10,1,10,16,0,135,0,79,0,10,0,0,0,85,5,0,0,2,11,0,0,16,0,0,128,109,5,8,11,1,10,14,0,109,5,4,10,0,2,0,0,2,3,0,0,112,238,3,0,25,4,2,14,78,10,3,0,83,2,10,0,25,2,2,1,25,3,3,1,54,10,2,4,252,114,1,0,1,11,0,0,107,0,14,11,135,2,91,0,1,5,0,0,102,11,5,11,34,11,11,0,121,11,4,0,82,10,5,0,135,11,77,0,10,0,0,0,1,10,0,0,2,9,0,0,159,2,4,0,1,13,0,0,135,12,253,0,13,2,0,0,2,13,0,0,255,255,0,0,19,12,12,13,134,11,0,0,208,194,0,0,10,9,12,0,2,12,0,0,152,212,118,1,82,12,12,0,1,9,255,255,2,10,0,0,176,201,203,1,81,10,10,0,135,11,254,0,12,2,9,10,121,11,16,0,2,10,0,0,159,2,4,0,1,9,4,0,135,11,19,1,2,10,9,0,120,11,3,0,137,8,0,0,139,0,0,0,85,6,2,0,2,9,0,0,127,238,3,0,135,11,34,0,9,6,0,0,137,8,0,0,139,0,0,0,2,11,0,0,152,212,118,1,82,11,11,0,1,9,164,17,94,0,11,9,120,0,3,0,137,8,0,0,139,0,0,0,82,0,0,0,120,0,3,0,137,8,0,0,139,0,0,0,85,7,0,0,109,7,4,2,2,9,0,0,160,238,3,0,135,11,34,0,9,7,0,0,137,8,0,0,139,0,0,0,140,0,11,0,0,0,0,0,2,5,0,0,68,205,52,0,136,6,0,0,0,4,6,0,136,6,0,0,25,6,6,16,137,6,0,0,1,6,0,0,84,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,2,6,0,0,69,205,52,0,1,7,14,0,83,6,7,0,2,7,0,0,80,205,52,0,1,6,0,0,84,7,6,0,1,6,10,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,10,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,32,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,32,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,32,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,82,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,101,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,98,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,111,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,111,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,116,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,32,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,114,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,101,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,113,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,117,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,101,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,115,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,116,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,101,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,100,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,44,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,32,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,113,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,117,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,105,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,116,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,116,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,105,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,110,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,103,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,32,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,110,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,111,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,119,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,1,6,46,0,83,5,6,0,1,7,16,0,134,6,0,0,68,156,1,0,7,0,0,0,2,7,0,0,155,34,4,0,135,6,34,0,7,4,0,0,2,6,0,0,144,102,122,1,82,4,6,0,2,6,0,0,88,8,3,0,82,1,6,0,2,6,0,0,84,8,3,0,82,3,6,0,2,6,0,0,52,206,52,0,82,2,6,0,77,6,4,0,4,9,1,3,4,8,9,2,76,8,8,0,145,8,8,0,76,10,1,0,145,9,10,0,66,7,8,9,145,7,7,0,63,0,6,7,77,7,4,0,4,8,1,3,4,9,8,2,76,9,9,0,145,9,9,0,76,10,1,0,145,8,10,0,66,6,9,8,145,6,6,0,63,7,7,6,64,7,7,0,59,6,184,11,71,7,7,6,120,7,11,0,1,7,4,0,135,4,20,1,7,0,0,0,1,7,1,0,85,4,7,0,2,6,0,0,48,8,3,0,1,8,0,0,135,7,21,1,4,6,8,0,134,7,0,0,168,151,1,0,2,7,0,0,88,8,3,0,82,4,7,0,2,7,0,0,144,102,122,1,82,7,7,0,77,7,7,0,2,9,0,0,84,8,3,0,82,9,9,0,4,9,4,9,2,10,0,0,52,206,52,0,82,10,10,0,4,6,9,10,76,6,6,0,145,6,6,0,76,9,4,0,145,10,9,0,66,8,6,10,145,8,8,0,63,7,7,8,64,7,7,0,59,8,184,11,71,7,7,8,120,7,229,255,1,7,4,0,135,4,20,1,7,0,0,0,1,7,1,0,85,4,7,0,2,8,0,0,48,8,3,0,1,10,0,0,135,7,21,1,4,8,10,0,1,7,0,0,139,7,0,0,140,3,15,0,0,0,0,0,2,8,0,0,255,255,0,0,2,9,0,0,69,205,52,0,2,10,0,0,68,205,52,0,1,4,0,0,80,7,10,0,135,11,22,1,25,6,0,36,78,0,6,0,41,11,0,24,42,11,11,24,120,11,3,0,1,0,0,0,119,0,17,0,80,11,2,0,120,11,3,0,1,0,0,0,119,0,13,0,83,1,0,0,2,11,0,0,172,201,203,1,78,11,11,0,121,11,5,0,78,12,6,0,1,13,7,0,135,11,23,1,12,13,0,0,1,11,0,0,83,6,11,0,1,0,1,0,19,11,0,8,81,13,2,0,47,11,11,13,56,125,1,0,0,5,0,0,19,11,0,8,0,3,11,0,2,13,0,0,252,204,52,0,82,13,13,0,39,13,13,1,32,13,13,5,1,12,16,0,1,14,0,0,125,11,13,12,14,0,0,0,83,9,11,0,1,14,22,0,134,11,0,0,68,156,1,0,14,0,0,0,78,0,10,0,41,11,0,24,42,11,11,24,1,12,224,255,1,14,46,0,138,11,12,14,12,123,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,128,123,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,216,123,1,0,240,122,1,0,240,122,1,0,240,122,1,0,240,122,1,0,88,124,1,0,95,1,3,0,25,12,5,1,41,12,12,16,42,12,12,16,0,0,12,0,1,4,27,0,119,0,85,0,25,14,5,1,41,14,14,16,42,14,14,16,0,0,14,0,3,3,1,3,78,14,9,0,120,14,5,0,1,14,224,255,83,3,14,0,1,4,27,0,119,0,74,0,1,14,0,0,83,3,14,0,78,3,9,0,19,14,0,8,81,12,2,0,47,14,14,12,116,123,1,0,19,14,0,8,95,1,14,3,25,14,5,2,41,14,14,16,42,14,14,16,0,0,14,0,1,4,27,0,119,0,59,0,83,6,3,0,1,4,27,0,119,0,56,0,25,14,5,1,41,14,14,16,42,14,14,16,0,0,14,0,1,12,0,0,95,1,3,12,78,3,9,0,19,12,0,8,81,14,2,0,47,12,12,14,204,123,1,0,19,12,0,8,95,1,12,3,25,12,5,2,41,12,12,16,42,12,12,16,0,0,12,0,1,4,27,0,119,0,37,0,83,6,3,0,1,4,27,0,119,0,34,0,80,14,2,0,32,14,14,1,121,14,9,0,1,12,8,0,95,1,3,12,25,12,5,1,41,12,12,16,42,12,12,16,0,0,12,0,1,4,27,0,119,0,23,0,41,12,5,16,42,12,12,16,120,12,3,0,1,0,0,0,119,0,18,0,1,14,0,0,95,1,3,14,1,12,8,0,1,13,7,0,135,14,23,1,12,13,0,0,1,13,32,0,1,12,7,0,135,14,23,1,13,12,0,0,26,14,5,1,41,14,14,16,42,14,14,16,0,0,14,0,1,4,27,0,119,0,2,0,119,0,21,0,32,11,4,27,121,11,10,0,1,4,0,0,2,11,0,0,172,201,203,1,78,11,11,0,121,11,5,0,78,12,10,0,1,14,7,0,135,11,23,1,12,14,0,0,19,11,0,8,81,14,2,0,47,11,11,14,168,124,1,0,0,5,0,0,19,11,0,8,0,3,11,0,119,0,81,255,119,0,36,0,25,11,5,1,41,11,11,16,42,11,11,16,0,0,11,0,1,14,13,0,95,1,3,14,19,14,0,8,81,11,2,0,47,14,14,11,240,124,1,0,19,14,0,8,1,11,10,0,95,1,14,11,25,11,5,2,41,11,11,16,42,11,11,16,0,0,11,0,84,2,0,0,84,10,7,0,2,11,0,0,172,201,203,1,78,11,11,0,120,11,3,0,1,11,1,0,139,11,0,0,1,14,13,0,1,12,7,0,135,11,23,1,14,12,0,0,1,12,10,0,1,14,7,0,135,11,23,1,12,14,0,0,1,11,1,0,139,11,0,0,84,2,0,0,84,10,7,0,1,11,1,0,139,11,0,0,140,3,11,0,0,0,0,0,1,8,172,17,135,7,79,0,8,0,0,0,1,9,0,0,1,10,90,8,135,8,223,0,7,9,10,0,1,8,90,8,1,10,255,255,96,7,8,10,1,10,92,8,1,8,0,0,96,7,10,8,1,8,94,8,1,10,255,255,96,7,8,10,1,10,96,8,1,8,0,0,96,7,10,8,1,8,98,8,1,10,255,255,96,7,8,10,1,10,100,8,1,8,0,0,96,7,10,8,1,8,102,8,1,10,255,255,96,7,8,10,1,10,104,8,1,8,0,0,96,7,10,8,1,8,106,8,1,10,255,255,96,7,8,10,1,10,108,8,1,8,0,0,96,7,10,8,1,8,110,8,1,10,255,255,96,7,8,10,1,10,112,8,1,8,0,0,96,7,10,8,1,8,114,8,1,10,255,255,96,7,8,10,1,10,116,8,1,8,0,0,96,7,10,8,1,8,118,8,1,10,255,255,96,7,8,10,1,10,120,8,1,8,0,0,96,7,10,8,1,8,122,8,1,10,255,255,96,7,8,10,1,10,124,8,1,8,0,0,96,7,10,8,1,8,126,8,1,10,255,255,96,7,8,10,1,10,128,8,1,8,0,0,96,7,10,8,1,8,130,8,1,10,255,255,96,7,8,10,1,10,132,8,1,8,0,0,96,7,10,8,1,8,134,8,1,10,255,255,96,7,8,10,1,10,136,8,1,8,0,0,96,7,10,8,1,8,138,8,1,10,255,255,96,7,8,10,1,10,140,8,1,8,0,0,96,7,10,8,1,8,142,8,1,10,255,255,96,7,8,10,1,10,144,8,1,8,0,0,96,7,10,8,1,8,146,8,1,10,255,255,96,7,8,10,1,10,148,8,1,8,0,0,96,7,10,8,1,8,150,8,1,10,255,255,96,7,8,10,1,10,153,8,1,8,15,0,95,7,10,8,1,8,154,16,1,10,0,0,96,7,8,10,1,10,156,16,1,8,0,0,96,7,10,8,1,8,158,16,1,10,0,0,96,7,8,10,1,10,168,17,3,5,7,10,1,10,0,0,85,5,10,0,1,10,164,17,3,6,7,10,1,10,0,0,85,6,10,0,1,10,160,17,1,8,0,0,95,7,10,8,1,8,160,16,3,4,7,8,2,8,0,0,134,29,4,0,78,8,8,0,83,4,8,0,2,10,0,0,135,29,4,0,78,10,10,0,107,4,1,10,2,8,0,0,136,29,4,0,78,8,8,0,107,4,2,8,2,10,0,0,137,29,4,0,78,10,10,0,107,4,3,10,2,8,0,0,138,29,4,0,78,8,8,0,107,4,4,8,1,8,255,255,135,4,254,0,7,0,8,1,121,4,24,0,82,0,6,0,121,0,18,0,82,1,5,0,121,1,14,0,1,3,0,0,41,8,3,2,94,2,0,8,121,2,5,0,135,8,127,0,2,0,0,0,82,0,6,0,82,1,5,0,25,3,3,1,55,8,3,1,184,127,1,0,120,0,2,0,119,0,3,0,135,8,127,0,0,0,0,0,135,8,77,0,7,0,0,0,0,7,4,0,139,7,0,0,1,8,0,0,134,4,0,0,208,194,0,0,8,2,1,0,120,4,6,0,2,8,0,0,152,212,118,1,85,8,7,0,1,7,0,0,139,7,0,0,82,0,6,0,121,0,18,0,82,1,5,0,121,1,14,0,1,3,0,0,41,8,3,2,94,2,0,8,121,2,5,0,135,8,127,0,2,0,0,0,82,0,6,0,82,1,5,0,25,3,3,1,55,8,3,1,60,128,1,0,120,0,2,0,119,0,3,0,135,8,127,0,0,0,0,0,135,8,77,0,7,0,0,0,0,7,4,0,139,7,0,0,140,1,10,0,0,0,0,0,136,5,0,0,0,4,5,0,136,5,0,0,25,5,5,96,137,5,0,0,25,3,4,48,25,1,4,92,1,6,48,11,135,5,0,0,6,0,0,0,2,6,0,0,255,255,0,0,19,5,5,6,41,5,5,4,25,5,5,22,135,2,0,0,5,0,0,0,41,5,2,16,42,5,5,16,1,9,48,11,135,8,0,0,9,0,0,0,2,9,0,0,255,255,0,0,19,8,8,9,41,8,8,4,25,8,8,22,135,7,0,0,8,0,0,0,2,8,0,0,255,255,0,0,19,7,7,8,41,7,7,4,25,7,7,22,135,6,0,0,7,0,0,0,41,6,6,16,42,6,6,16,46,5,5,6,52,129,1,0,137,4,0,0,139,0,0,0,25,2,0,16,82,6,2,0,2,7,0,0,216,192,3,0,1,8,0,0,135,5,148,0,6,7,8,0,121,5,9,0,2,7,0,0,255,209,3,0,135,8,169,0,7,0,0,0,135,5,170,0,0,8,4,0,137,4,0,0,139,0,0,0,82,8,2,0,2,7,0,0,206,232,3,0,1,6,0,0,135,5,148,0,8,7,6,0,121,5,29,0,2,6,0,0,212,232,3,0,25,7,4,8,135,5,170,0,0,6,7,0,2,6,0,0,92,204,3,0,135,7,169,0,6,0,0,0,25,6,4,16,135,5,170,0,0,7,6,0,2,7,0,0,222,206,3,0,135,6,169,0,7,0,0,0,25,7,4,24,135,5,170,0,0,6,7,0,2,6,0,0,138,208,3,0,135,7,169,0,6,0,0,0,25,6,4,32,135,5,170,0,0,7,6,0,137,4,0,0,139,0,0,0,82,6,2,0,2,7,0,0,217,232,3,0,1,8,0,0,135,5,148,0,6,7,8,0,121,5,11,0,2,7,0,0,59,213,3,0,135,8,169,0,7,0,0,0,25,7,4,40,135,5,170,0,0,8,7,0,137,4,0,0,139,0,0,0,119,0,61,0,2,8,0,0,103,202,3,0,135,7,169,0,8,0,0,0,135,5,170,0,0,7,3,0,1,5,1,0,84,1,5,0,1,7,0,0,1,8,0,0,134,5,0,0,120,148,1,0,7,3,1,8,2,7,0,0,92,204,3,0,135,8,169,0,7,0,0,0,25,7,4,56,135,5,170,0,0,8,7,0,2,8,0,0,222,206,3,0,135,7,169,0,8,0,0,0,25,8,4,64,135,5,170,0,0,7,8,0,2,7,0,0,138,208,3,0,135,8,169,0,7,0,0,0,25,7,4,72,135,5,170,0,0,8,7,0,1,7,0,0,1,8,0,0,134,5,0,0,120,148,1,0,7,3,1,8,2,7,0,0,255,209,3,0,135,8,169,0,7,0,0,0,25,7,4,80,135,5,170,0,0,8,7,0,1,7,0,0,1,8,0,0,134,5,0,0,120,148,1,0,7,3,1,8,2,7,0,0,59,213,3,0,135,8,169,0,7,0,0,0,25,7,4,88,135,5,170,0,0,8,7,0,137,4,0,0,139,0,0,0,139,0,0,0,140,2,14,0,0,0,0,0,2,8,0,0,144,135,2,0,2,9,0,0,176,202,203,1,2,10,0,0,191,80,4,0,136,11,0,0,0,7,11,0,136,11,0,0,25,11,11,64,137,11,0,0,25,6,7,48,25,2,7,40,25,5,7,32,25,4,7,24,25,3,7,16,2,12,0,0,215,76,4,0,135,11,168,0,1,12,0,0,121,11,32,0,2,13,0,0,165,75,4,0,135,12,169,0,13,0,0,0,135,11,170,0,0,12,7,0,2,11,0,0,156,80,4,0,135,1,169,0,11,0,0,0,2,12,0,0,92,154,4,0,25,13,7,8,135,11,170,0,0,12,13,0,2,13,0,0,241,76,4,0,135,11,86,0,13,1,0,0,120,11,8,0,2,13,0,0,181,80,4,0,135,11,170,0,0,13,4,0,137,7,0,0,139,0,0,0,119,0,5,0,135,11,170,0,0,1,3,0,137,7,0,0,139,0,0,0,2,13,0,0,187,80,4,0,135,11,168,0,1,13,0,0,121,11,28,0,1,2,0,0,2,1,0,0,144,135,2,0,82,6,1,0,27,11,2,20,3,11,8,11,106,11,11,16,135,1,169,0,11,0,0,0,85,5,6,0,109,5,4,1,135,11,170,0,0,10,5,0,25,1,2,1,31,11,1,22,120,11,4,0,134,11,0,0,144,149,1,0,0,9,0,0,32,11,1,34,120,11,5,0,0,2,1,0,27,11,1,20,3,1,8,11,119,0,235,255,137,7,0,0,139,0,0,0,2,12,0,0,212,80,4,0,135,13,169,0,12,0,0,0,135,11,170,0,0,13,2,0,1,3,0,0,1,1,0,0,2,2,0,0,144,135,2,0,27,11,3,20,3,11,8,11,106,11,11,4,120,11,17,0,82,4,2,0,27,11,3,20,3,11,8,11,106,11,11,16,135,5,169,0,11,0,0,0,85,6,4,0,109,6,4,5,135,11,170,0,0,10,6,0,25,1,1,1,31,11,1,22,120,11,4,0,134,11,0,0,144,149,1,0,0,9,0,0,25,2,3,1,32,11,2,34,120,11,5,0,0,3,2,0,27,11,2,20,3,2,8,11,119,0,230,255,137,7,0,0,139,0,0,0,140,0,15,0,0,0,0,0,2,10,0,0,32,77,4,0,136,11,0,0,0,9,11,0,136,11,0,0,1,12,32,1,3,11,11,12,137,11,0,0,1,11,16,1,3,8,9,11,1,11,0,1,3,7,9,11,0,1,9,0,1,11,200,0,3,2,9,11,2,11,0,0,152,202,203,1,78,11,11,0,121,11,12,0,2,11,0,0,128,163,122,1,82,6,11,0,135,11,121,0,4,11,6,11,34,11,11,1,121,11,5,0,2,11,0,0,152,202,203,1,1,12,0,0,83,11,12,0,135,12,122,0,2,0,0,0,120,12,7,0,1,11,10,0,135,12,123,0,11,0,0,0,137,9,0,0,1,12,0,0,139,12,0,0,25,3,2,12,25,12,2,16,25,4,12,4,82,12,2,0,1,11,0,1,1,14,2,2,138,12,11,14,248,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,0,142,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,244,141,1,0,20,142,1,0,224,142,1,0,119,0,60,0,1,0,7,0,119,0,63,0,78,11,3,0,32,11,11,9,121,11,55,0,135,11,163,0,119,0,53,0,2,11,0,0,152,202,203,1,78,11,11,0,32,11,11,0,82,13,4,0,2,14,0,0,72,0,0,64,13,13,13,14,19,11,11,13,121,11,43,0,1,13,0,0,1,14,200,0,135,11,223,0,1,13,14,0,2,11,0,0,116,163,122,1,82,0,11,0,2,11,0,0,112,163,122,1,82,5,11,0,2,11,0,0,60,11,3,0,82,6,11,0,2,11,0,0,116,202,203,1,78,11,11,0,120,11,10,0,85,8,10,0,109,8,4,5,109,8,8,0,109,8,12,6,2,14,0,0,169,1,4,0,135,11,208,0,1,14,8,0,119,0,9,0,85,7,10,0,109,7,4,5,109,7,8,0,109,7,12,6,2,14,0,0,101,1,4,0,135,11,208,0,1,14,7,0,2,14,0,0,132,125,52,0,82,14,14,0,135,11,112,0,14,1,0,0,135,11,24,1,119,0,2,0,119,0,205,255,135,12,122,0,2,0,0,0,120,12,188,253,1,0,16,0,119,0,1,0,32,12,0,7,121,12,12,0,1,12,4,0,135,9,20,1,12,0,0,0,1,12,1,0,85,9,12,0,2,11,0,0,48,8,3,0,1,14,0,0,135,12,21,1,9,11,14,0,119,0,9,0,32,12,0,16,121,12,7,0,1,14,10,0,135,12,123,0,14,0,0,0,137,9,0,0,1,12,0,0,139,12,0,0,1,12,0,0,139,12,0,0,140,2,14,0,0,0,0,0,136,9,0,0,0,8,9,0,136,9,0,0,25,9,9,80,137,9,0,0,25,4,8,48,25,3,8,40,25,5,8,32,25,7,8,24,25,6,8,16,25,2,8,64,2,10,0,0,215,76,4,0,135,9,168,0,1,10,0,0,121,9,32,0,2,11,0,0,156,76,4,0,135,10,169,0,11,0,0,0,135,9,170,0,0,10,8,0,2,9,0,0,110,77,4,0,135,1,169,0,9,0,0,0,2,10,0,0,92,154,4,0,25,11,8,8,135,9,170,0,0,10,11,0,2,11,0,0,241,76,4,0,135,9,86,0,11,1,0,0,120,9,8,0,2,11,0,0,135,77,4,0,135,9,170,0,0,11,7,0,137,8,0,0],eb+92160);HEAPU8.set([139,0,0,0,119,0,5,0,135,9,170,0,0,1,6,0,137,8,0,0,139,0,0,0,2,11,0,0,243,159,4,0,135,9,168,0,1,11,0,0,121,9,26,0,1,11,0,0,135,9,235,0,11,0,0,0,85,2,9,0,135,7,236,0,2,0,0,0,1,11,108,4,106,10,7,4,27,10,10,60,106,12,7,8,1,13,16,14,5,12,12,13,3,10,10,12,82,12,7,0,3,10,10,12,76,10,10,0,62,12,0,0,233,31,104,248,219,52,50,64,65,10,10,12,75,10,10,0,135,9,1,0,11,10,0,0,137,8,0,0,139,0,0,0,2,9,0,0,9,160,4,0,135,7,168,0,1,9,0,0,2,9,0,0,69,205,52,0,1,10,44,0,83,9,10,0,1,9,33,0,134,10,0,0,68,156,1,0,9,0,0,0,121,7,16,0,2,10,0,0,72,205,52,0,79,7,10,0,2,10,0,0,73,205,52,0,79,10,10,0,85,5,10,0,109,5,4,7,2,9,0,0,141,77,4,0,135,10,170,0,0,9,5,0,137,8,0,0,139,0,0,0,119,0,29,0,2,11,0,0,151,77,4,0,135,9,169,0,11,0,0,0,135,10,170,0,0,9,3,0,2,10,0,0,72,205,52,0,79,5,10,0,2,10,0,0,77,205,52,0,79,6,10,0,2,10,0,0,76,205,52,0,79,7,10,0,2,10,0,0,73,205,52,0,79,10,10,0,85,4,10,0,109,4,4,5,109,4,8,6,109,4,12,7,2,9,0,0,170,77,4,0,135,10,170,0,0,9,4,0,137,8,0,0,139,0,0,0,139,0,0,0,140,0,13,0,0,0,0,0,2,7,0,0,167,161,94,0,2,8,0,0,166,161,94,0,2,9,0,0,22,194,0,0,1,6,0,0,2,10,0,0,84,8,3,0,82,10,10,0,2,11,0,0,52,206,52,0,82,11,11,0,3,1,10,11,2,11,0,0,84,8,3,0,85,11,1,0,2,11,0,0,52,206,52,0,1,10,0,0,85,11,10,0,34,10,1,1,121,10,3,0,1,6,0,0,139,6,0,0,2,10,0,0,88,8,3,0,82,2,10,0,2,10,0,0,135,202,203,1,1,11,1,0,83,10,11,0,2,11,0,0,156,134,122,1,82,4,11,0,120,4,3,0,1,6,9,0,119,0,74,0,4,5,2,1,76,11,5,0,145,5,11,0,88,3,4,0,145,3,3,0,76,10,2,0,145,11,10,0,65,0,3,11,145,0,0,0,72,11,0,5,121,11,45,0,0,1,4,0,25,4,1,12,2,11,0,0,156,134,122,1,82,10,4,0,85,11,10,0,2,10,0,0,160,134,122,1,89,10,3,0,106,11,1,8,1,12,255,7,19,11,11,12,106,12,1,4,135,10,219,0,11,12,0,0,2,10,0,0,152,134,122,1,82,10,10,0,85,4,10,0,2,10,0,0,152,134,122,1,85,10,1,0,2,10,0,0,156,134,122,1,82,1,10,0,120,1,2,0,119,0,13,0,88,3,1,0,145,3,3,0,2,11,0,0,88,8,3,0,82,10,11,0,76,10,10,0,145,10,10,0,65,0,3,10,145,0,0,0,72,10,0,5,120,10,220,255,119,0,6,0,2,10,0,0,84,8,3,0,82,1,10,0,1,6,9,0,119,0,19,0,2,10,0,0,135,202,203,1,1,11,0,0,83,10,11,0,64,11,0,5,145,11,11,0,75,4,11,0,32,11,4,0,1,10,1,0,125,4,11,10,4,0,0,0,2,10,0,0,84,8,3,0,82,1,10,0,0,2,1,0,15,10,4,1,125,1,10,4,1,0,0,0,32,10,6,9,121,10,6,0,2,10,0,0,135,202,203,1,1,11,0,0,83,10,11,0,0,2,1,0,2,11,0,0,52,206,52,0,85,11,1,0,2,11,0,0,84,8,3,0,4,10,2,1,85,11,10,0,2,10,0,0,148,102,122,1,82,10,10,0,120,10,3,0,1,6,1,0,139,6,0,0,135,10,25,1,1,6,1,0,139,6,0,0,140,2,11,0,0,0,0,0,136,10,0,0,0,9,10,0,136,10,0,0,25,10,10,16,137,10,0,0,0,3,9,0,2,10,0,0,152,212,118,1,82,2,10,0,120,2,4,0,1,8,255,0,137,9,0,0,139,8,0,0,1,10,0,0,85,3,10,0,134,8,0,0,196,90,1,0,2,0,3,1,82,7,3,0,0,6,7,0,121,7,33,0,2,10,0,0,152,212,118,1,82,7,10,0,121,7,26,0,1,10,164,17,3,4,7,10,82,0,4,0,121,0,20,0,1,10,168,17,3,5,7,10,82,1,5,0,121,1,14,0,1,3,0,0,41,10,3,2,94,2,0,10,121,2,5,0,135,10,127,0,2,0,0,0,82,0,4,0,82,1,5,0,25,3,3,1,55,10,3,1,36,148,1,0,120,0,2,0,119,0,3,0,135,10,127,0,0,0,0,0,135,10,77,0,7,0,0,0,2,10,0,0,152,212,118,1,85,10,6,0,137,9,0,0,139,8,0,0,140,4,9,0,0,0,0,0,136,6,0,0,0,5,6,0,136,6,0,0,25,6,6,16,137,6,0,0,0,4,5,0,121,3,6,0,2,6,0,0,255,255,0,0,19,6,0,6,0,0,6,0,119,0,15,0,1,6,48,11,135,3,0,0,6,0,0,0,2,6,0,0,255,255,0,0,19,6,3,6,41,6,6,4,85,4,6,0,108,4,4,3,135,6,12,0,4,0,0,0,1,7,255,0,19,6,6,7,0,0,6,0,1,6,126,0,48,6,6,0,12,149,1,0,1,7,6,0,135,6,26,1,7,0,0,0,1,4,0,0,137,5,0,0,139,4,0,0,2,6,0,0,96,204,5,0,41,7,0,2,3,0,6,7,82,3,0,0,121,3,22,0,82,6,3,0,106,6,6,36,1,8,255,0,19,6,6,8,135,7,27,1,6,3,0,0,121,7,15,0,80,7,2,0,84,4,7,0,82,3,0,0,82,7,3,0,106,7,7,8,1,6,255,0,19,7,7,6,135,1,28,1,7,3,1,4,80,7,4,0,84,2,7,0,0,4,1,0,137,5,0,0,139,4,0,0,1,6,6,0,135,7,26,1,6,0,0,0,1,4,0,0,137,5,0,0,139,4,0,0,140,2,12,0,0,0,0,0,136,9,0,0,0,8,9,0,136,9,0,0,25,9,9,48,137,9,0,0,25,4,8,32,25,7,8,24,25,6,8,16,25,5,8,8,0,3,8,0,25,2,8,36,2,10,0,0,215,76,4,0,135,9,168,0,1,10,0,0,120,9,23,0,2,11,0,0,86,79,4,0,135,10,169,0,11,0,0,0,135,9,170,0,0,10,4,0,1,9,1,0,84,2,9,0,1,10,0,0,1,11,0,0,134,9,0,0,120,148,1,0,10,4,2,11,78,9,4,0,120,9,6,0,1,11,0,0,1,10,0,0,134,9,0,0,120,148,1,0,11,4,2,10,137,8,0,0,139,0,0,0,2,11,0,0,12,76,4,0,135,10,169,0,11,0,0,0,135,9,170,0,0,10,3,0,2,9,0,0,53,79,4,0,135,1,169,0,9,0,0,0,2,10,0,0,92,154,4,0,135,9,170,0,0,10,5,0,2,10,0,0,241,76,4,0,135,9,86,0,10,1,0,0,120,9,8,0,2,10,0,0,79,79,4,0,135,9,170,0,0,10,7,0,137,8,0,0,139,0,0,0,119,0,5,0,135,9,170,0,0,1,6,0,137,8,0,0,139,0,0,0,139,0,0,0,140,0,7,0,0,0,0,0,136,4,0,0,0,3,4,0,136,4,0,0,25,4,4,16,137,4,0,0,25,0,3,4,1,6,48,11,135,5,0,0,6,0,0,0,2,6,0,0,255,255,0,0,19,5,5,6,41,5,5,4,1,6,19,1,3,5,5,6,135,4,10,0,5,0,0,0,1,5,255,0,19,4,4,5,0,1,4,0,2,4,0,0,12,185,203,1,82,2,4,0,2,4,0,0,16,185,203,1,82,4,4,0,4,4,4,2,42,4,4,2,48,4,4,1,60,151,1,0,2,5,0,0,118,47,4,0,135,4,7,0,5,3,0,0,41,5,1,2,94,5,2,5,1,6,255,7,19,5,5,6,135,4,219,0,5,0,0,0,82,2,0,0,82,5,2,0,106,5,5,8,1,6,255,7,19,5,5,6,135,4,219,0,5,2,0,0,82,0,0,0,120,0,4,0,137,3,0,0,1,4,0,0,139,4,0,0,82,5,0,0,106,5,5,4,1,6,255,7,19,5,5,6,135,4,219,0,5,0,0,0,137,3,0,0,1,4,0,0,139,4,0,0,140,0,6,0,0,0,0,0,2,3,0,0,104,205,52,0,82,1,3,0,2,3,0,0,104,205,52,0,1,4,0,2,20,4,1,4,85,3,4,0,2,4,0,0,6,206,52,0,80,0,4,0,2,4,0,0,100,205,52,0,82,2,4,0,2,4,0,0,6,206,52,0,1,3,0,240,84,4,3,0,2,3,0,0,24,206,52,0,2,4,0,0,0,0,15,0,85,3,4,0,2,4,0,0,100,205,52,0,2,3,0,0,56,205,52,0,82,3,3,0,41,3,3,5,1,5,0,16,3,3,3,5,85,4,3,0,2,3,0,0,12,205,52,0,2,4,0,0,12,205,52,0,82,4,4,0,25,4,4,1,85,3,4,0,134,4,0,0,160,157,1,0,2,4,0,0,12,205,52,0,2,3,0,0,12,205,52,0,82,3,3,0,26,3,3,1,85,4,3,0,2,3,0,0,100,205,52,0,85,3,2,0,2,3,0,0,6,206,52,0,84,3,0,0,2,3,0,0,24,206,52,0,2,4,0,0,255,255,0,0,19,4,0,4,41,4,4,4,85,3,4,0,2,4,0,0,104,205,52,0,82,0,4,0,2,4,0,0,104,205,52,0,1,5,0,2,19,5,1,5,32,5,5,0,121,5,5,0,1,5,255,253,19,5,0,5,0,3,5,0,119,0,4,0,1,5,0,2,20,5,0,5,0,3,5,0,85,4,3,0,2,3,0,0,116,202,203,1,78,3,3,0,32,3,3,0,1,4,0,0,2,5,0,0,52,206,52,0,82,5,5,0,15,4,4,5,19,3,3,4,120,3,2,0,139,0,0,0,2,3,0,0,52,206,52,0,1,4,0,0,85,3,4,0,139,0,0,0,140,2,6,0,0,0,0,0,136,3,0,0,0,2,3,0,136,3,0,0,25,3,3,32,137,3,0,0,2,4,0,0,215,76,4,0,135,3,168,0,1,4,0,0,120,3,11,0,2,3,0,0,68,205,52,0,1,4,3,0,84,3,4,0,1,3,16,0,134,4,0,0,68,156,1,0,3,0,0,0,137,2,0,0,139,0,0,0,2,5,0,0,24,75,4,0,135,3,169,0,5,0,0,0,135,4,170,0,0,3,2,0,2,4,0,0,71,83,4,0,135,1,169,0,4,0,0,0,2,3,0,0,92,154,4,0,25,5,2,8,135,4,170,0,0,3,5,0,2,5,0,0,241,76,4,0,135,4,86,0,5,1,0,0,120,4,9,0,2,5,0,0,95,83,4,0,25,3,2,24,135,4,170,0,0,5,3,0,137,2,0,0,139,0,0,0,119,0,6,0,25,3,2,16,135,4,170,0,0,1,3,0,137,2,0,0,139,0,0,0,139,0,0,0,140,2,8,0,0,0,0,0,2,4,0,0,84,205,52,0,80,3,4,0,2,4,0,0,84,205,52,0,2,5,0,0,255,255,0,0,19,5,3,5,2,6,0,0,252,255,0,0,3,5,5,6,84,4,5,0,2,4,0,0,28,206,52,0,82,4,4,0,26,6,3,4,2,7,0,0,255,255,0,0,19,6,6,7,3,4,4,6,2,6,0,0,60,205,52,0,82,6,6,0,41,6,6,5,1,7,0,16,3,6,6,7,2,7,0,0,255,255,0,0,19,6,6,7,135,5,61,0,4,6,0,0,2,6,0,0,28,206,52,0,82,6,6,0,25,6,6,2,2,4,0,0,84,205,52,0,81,4,4,0,3,6,6,4,1,4,0,240,135,5,61,0,6,4,0,0,2,5,0,0,100,205,52,0,82,3,5,0,2,5,0,0,6,206,52,0,80,2,5,0,2,5,0,0,100,205,52,0,2,4,0,0,255,255,0,0,19,4,1,4,85,5,4,0,2,4,0,0,6,206,52,0,84,4,0,0,2,4,0,0,24,206,52,0,2,5,0,0,255,255,0,0,19,5,0,5,41,5,5,4,85,4,5,0,134,5,0,0,160,157,1,0,2,5,0,0,100,205,52,0,85,5,3,0,2,5,0,0,6,206,52,0,84,5,2,0,2,5,0,0,24,206,52,0,2,4,0,0,255,255,0,0,19,4,2,4,41,4,4,4,85,5,4,0,139,0,0,0,140,1,9,0,0,0,0,0,2,6,0,0,255,7,0,0,106,1,0,8,25,5,0,4,0,0,1,0,45,7,5,0,124,155,1,0,139,0,0,0,106,3,1,8,106,1,3,8,25,4,3,4,0,2,1,0,46,7,4,2,180,155,1,0,106,8,1,8,19,8,8,6,135,7,219,0,8,3,0,0,106,1,2,4,0,2,1,0,53,7,4,2,148,155,1,0,106,1,0,4,0,0,1,0,53,7,5,0,124,155,1,0,139,0,0,0,140,2,8,0,0,0,0,0,2,5,0,0,255,7,0,0,106,3,0,8,25,4,0,4,0,2,3,0,45,6,4,2,240,155,1,0,139,0,0,0,121,1,10,0,106,7,3,8,19,7,7,5,135,6,219,0,7,0,0,0,106,3,2,4,0,2,3,0,53,6,4,2,244,155,1,0,139,0,0,0,102,6,3,12,121,6,5,0,106,7,3,8,19,7,7,5,135,6,219,0,7,0,0,0,106,3,2,4,0,2,3,0,53,6,4,2,24,156,1,0,139,0,0,0,140,1,6,0,0,0,0,0,2,3,0,0,100,205,52,0,82,2,3,0,2,3,0,0,6,206,52,0,80,1,3,0,2,3,0,0,100,205,52,0,1,4,255,0,19,4,0,4,27,4,4,6,1,5,0,32,20,4,4,5,85,3,4,0,2,4,0,0,6,206,52,0,1,3,0,240,84,4,3,0,2,3,0,0,24,206,52,0,2,4,0,0,0,0,15,0,85,3,4,0,134,4,0,0,160,157,1,0,2,4,0,0,100,205,52,0,85,4,2,0,2,4,0,0,6,206,52,0,84,4,1,0,2,4,0,0,24,206,52,0,2,3,0,0,255,255,0,0,19,3,1,3,41,3,3,4,85,4,3,0,139,0,0,0,140,3,6,0,0,0,0,0,2,3,0,0,48,204,5,0,106,4,0,32,41,4,4,2,94,0,3,4,82,4,0,0,106,4,4,8,1,5,255,0,19,4,4,5,135,3,28,1,4,0,1,2,139,3,0,0,140,1,5,0,0,0,0,0,1,2,8,0,135,1,79,0,2,0,0,0,134,2,0,0,32,112,1,0,1,0,0,0,2,2,0,0,156,212,118,1,85,2,1,0,1,3,118,3,1,4,1,0,135,2,88,0,0,3,4,0,139,0,0,0,140,1,2,0,0,0,0,0,135,1,29,1,135,1,30,1,134,1,0,0,252,102,1,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,1,0,107,0,21,2,106,1,0,16,38,1,1,127,135,2,31,1,1,0,0,0,139,0,0,0,140,0,3,0,0,0,0,0,2,1,0,0,16,205,52,0,82,1,1,0,1,2,255,7,19,1,1,2,135,0,246,0,1,0,0,0,121,0,249,255,139,0,0,0,0,0,0,0],eb+102400);var relocations=[];relocations=relocations.concat([192,196,200,204,208,212,216,220,224,228,232,236,240,244,248,252,256,260,264,268,272,452,456,460,464,468,472,476,480,484,488,492,496,500,504,508,512,516,520,524,528,532,536,540,544,548,552,556,560,564,568,572,576,580,584,588,592,596,600,604,608,612,616,620,624,628,632,636,640,644,648,652,656,660,664,668,672,676,680,684,688,692,696,700,704,708,712,716,720,724,728,732,736,740,744,748,752,756,760,764,768,772,776,780,784,788,792,796,800,804,808,812,816,820,824,828,832,836,840,844,848,852,856,860,864,868,872,876,880,884,888,892,896,900,904,2128,2148,2152,2156,2160,2164,2168,2272,2276,2280,2884,2888,2892,2896,2900,2904,2908,2912,2916,2920,4916,5340,5392,5484,5724,6544,6548,6780,6784,6788,6792,6796,6800,6804,7456,7460,7464,7468,8728,9096,9588,9592,11588,11592,11752,11756,11760,11764,13236,13240,13244,13248,13252,13256,13260,13264,13268,13272,13276,13280,13284,13288,13292,13296,13300,13304,13308,13312,13316,13320,13324,13328,13332,13336,13340,13344,13348,13352,13356,13360,13364,13368,13464,13524,13564,14144,14248,15288,15292,15296,15300,15304,15308,15312,15316,15320,15324,15328,15332,15336,15340,15344,15348,15352,15356,15360,15364,15368,15372,15376,15380,15384,15388,15392,15396,15452,15504,15512,15664,15716,15816,15820,15824,15828,15832,15836,15840,15844,15848,15852,15856,15860,15864,15868,15872,15876,15880,15884,15888,15892,15896,15900,15904,15908,15912,15916,15920,15924,15928,15932,15936,15940,15944,15948,15952,15956,15960,15964,15968,15972,15976,15980,15984,15988,15992,15996,16e3,16004,16008,16012,16016,16020,16024,16028,16032,16036,16040,16044,16048,16052,16056,16060,16064,16068,16072,16076,16080,16084,16088,16240,16364,16600,16672,17064,17612,17696,17760,17824,17856,18224,18364,18424,18588,18676,18888,18960,19244,19272,19288,19620,19716,19924,20016,20168,20264,20392,20492,20560,20612,20648,20736,20860,21208,21232,21256,21280,21408,21460,21612,21708,21876,21936,22228,22360,22720,22988,24468,24844,25420,25904,26148,27232,27252,27284,27304,27340,27368,27732,28116,28232,28256,28316,28464,28632,28980,32112,32624,32668,32840,33440,33896,33948,34924,35344,35500,35760,36e3,36288,36376,36416,36428,36480,36552,37444,37552,37976,38020,38556,39e3,39436,39440,39444,39448,40228,40600,40644,40972,41028,41212,41368,41680,41764,41936,42016,42560,42684,43064,43292,43420,43784,44088,44324,44440,44636,44752,44876,45184,45936,46064,46096,46780,47268,47272,47276,47280,47284,47288,47292,47296,47300,47304,47308,47312,47316,47320,47324,47328,47332,47336,47340,47344,47348,47352,47356,47360,47364,47368,47372,47376,47380,47384,47388,47392,47396,47400,47404,47496,47500,47504,47508,47512,47516,47520,47524,47528,47532,47536,47540,47544,47548,47552,47556,47560,47564,47568,47572,47576,47580,47584,47588,47592,47596,47600,47604,47608,47612,47616,47620,47624,47628,47632,47636,47640,47644,47648,47652,47656,47660,47664,47668,47672,47676,47680,47684,47688,47692,47696,47700,47704,47708,47712,47716,47720,47724,47728,47732,47736,47740,47744,47748,47752,47756,47760,47764,47768,47772,47776,47780,47784,47788,47792,47796,47800,47804,47808,47812,47816,47820,47824,47828,47832,47836,47840,47844,47848,47852,47856,47860,47864,48788,49004,49260,49564,50048,50092,50108,50112,50116,50120,50124,50128,50132,50136,50140,50144,50148,50152,50156,50160,50164,50168,50172,50176,50180,50184,50188,50192,50196,50200,50204,50208,50212,50216,50220,50224,50228,50232,50236,50240,50244,50248,50252,50256,50260,50264,50268,50272,50276,50280,50284,50288,50292,50296,50300,50304,50308,50312,50316,50320,50324,50328,50332,50336,50340,50344,50348,50352,50356,50360,50364,50368,50372,50376,50380,50384,50388,50392,50396,50400,50404,50408,50412,50416,50420,50424,50428,50432,50436,50440,50444,50448,50452,50456,50460,50464,50468,50472,50476,50480,50484,50488,50492,50496,50500,50504,50508,50512,50516,50520,50524,50528,50532,50536,50540,50544,50548,50552,50556,50560,50564,50568,50572,50576,50580,50584,50588,50592,50596,50600,50604,50608,50612,50616,50620,50624,50628,50632,50636,50640,50644,50648,50652,50656,50660,50664,50668,50672,50676,50680,50684,50688,50692,50696,50700,50704,50708,50712,50716,50720,50724,50728,50732,50736,50740,50744,50748,50752,50756,50760,50764,50768,50772,50776,50780,50784,50788,50792,50796,50800,50804,50808,50812,50816,50820,50824,50828,50832,50836,50840,50844,50848,50852,50856,50860,50864,50868,50872,50876,50880,50884,50888,50892,50896,50900,50904,50908,50912,50916,50920,50924,50928,50932,50936,50940,50944,50948,50952,50956,50960,50964,50968,50972,50976,50980,50984,50988,50992,50996,51e3,51004,51008,51012,51016,51020,51024,51028,51032,51036,51040,51044,51048,51052,51056,51060,51064,51068,51072,51076,51080,51084,51088,51092,51096,51100,51104,51108,51112,51116,51120,51124,51128,51132,51136,51140,51144,51148,51152,51156,51160,51164,51168,51172,51176,51180,51184,51188,51192,51196,51200,51204,51208,51212,51216,51220,51224,51228,51232,51236,51240,51244,51248,51252,51256,51260,51264,51268,51272,51276,51280,51284,51288,51292,51296,51300,51304,51308,51312,51316,51320,51324,51328,51332,51336,51340,51344,51348,51352,51356,51360,51364,51368,51372,51376,51380,51384,51388,51392,51396,51400,51404,51408,51412,51416,51420,51424,51428,51432,51436,51440,51444,51448,51452,51456,51460,51464,51468,51472,51476,51480,51484,51488,51492,51496,51500,51504,51508,51512,51516,51520,51524,51528,51532,51536,51540,51544,51548,51552,51556,51560,51564,51568,51572,51576,51580,51584,51588,51592,51596,51600,51604,51608,51612,51616,51620,51624,51628,51632,51636,51640,51644,51648,51652,51656,51660,51664,51668,51672,51676,51680,51684,51688,51692,51696,51700,51704,51708,51712,51716,51720,51724,51728,51732,51736,51740,51744,51748,51752,51756,51760,51764,51768,51772,51776,51780,51784,51788,51792,51796,51800,51804,51808,51812,51816,51820,51824,51828,51832,51836,51840,51844,51848,51852,51856,51860,51864,51868,51872,51876,51880,51884,51888,51892,51896,51900,51904,51908,51912,51916,51920,51924,51928,51932,51936,51940,51944,51948,51952,51956,51960,51964,51968,51972,51976,51980,51984,51988,51992,51996,52e3,52004,52008,52012,52016,52020,52024,52028,52032,52036,52040,52044,52048,52052,52056,52060,52064,52068,52072,52076,52080,52084,52088,52092,52096,52100,52104,52108,52112,52116,52120,52124,52128,52132,52136,52140,52144,52148,52152,52156,52160,52164,52168,52172,52176,52180,52184,52188,52192,52196,52200,52204,52208,52212,52216,52220,52224,52228,52232,52236,52240,52244,52248,52252,52256,52260,52264,52268,52272,52276,52280,52284,52288,52292,52296,52300,52304,52308,52312,52316,52320,52324,52328,52332,52336,52340,52344,52348,52352,52356,52360,52364,52368,52372,52376,52380,52384,52388,52392,52396,52400,52404,52408,52412,52416,52420,52424,52428,52432,52436,52440,52444,52448,52452,52456,52460,52464,52468,52472,52476,52480,52484,52488,52492,52496,52500,52504,52508,52512,52516,52520,52524,52528,52532,52536,52540,52544,52548,52552,52556,52560,52564,52568,52572,52576,52580,52584,52588,52592,52596,52600,52604,52608,52612,52616,52620,52624,52628,52632,52636,52640,52644,52648,52652,52656,52660,52664,52668,52672,52676,52680,52684,52688,52692,52696,52700,52704,52708,52712,52716,52720,52724,52728,52732,52736,52740,52744,52748,52752,52756,52760,52764,52768,52772,52776,52780,52784,52788,52792,52796,52800,52804,52808,52812,52816,52820,52824,52828,52832,52836,52840,52844,52848,52852,52856,52860,52864,52868,52872,52876,52880,52884,52888,52892,52896,52900,52904,52908,52912,52916,52920,52924,52928,52932,52936,52940,52944,52948,52952,52956,52960,52964,52968,52972,52976,52980,52984,52988,52992,52996,53e3,53004,53008,53012,53016,53020,53024,53028,53032,53036,53040,53044,53048,53052,53056,53060,53064,53068,53072,53076,53080,53084,53088,53196,53296,53312,53316,53320,53324,53328,53332,53336,53340,53344,53348,53352,53356,53360,53364,53368,53372,53376,53380,53384,53388,53392,53396,53400,53404,53408,53412,53416,53420,53424,53428,53432,53436,53440,53444,53448,53452,53456,53460,53464,53468,53472,53476,53480,53484,53488,53492,53496,53500,53504,53508,53512,53516,53520,53524,53528,53532,53536,53540,53544,53548,53552,53556,53560,53564,53568,53572,53576,53580,53584,53588,53592,53596,53600,53604,53608,53612,53616,53620,53624,53628,53632,53636,53640,53644,53648,53652,53656,53660,53664,53668,53672,53676,53680,53684,53688,53692,53696,53700,53704,53708,53712,53716,53720,53724,53728,53732,53736,53740,53744,53748,53752,53756,53760,53764,53768,53772,53776,53780,53784,53788,53792,53796,53800,53804,53808,53812,53816,53820,53824,53828,53832,53836,53840,53844,53848,53852,53856,53860,53864,53868,53872,53876,53880,53884,53888,53892,53896,53900,53904,53908,53912,53916,53920,53924,53928,53932,53936,53940,53944,53948,53952,53956,53960,53964,53968,53972,53976,53980,53984,53988,53992,53996,54e3,54004,54008,54012,54016,54020,54024,54028,54032,54036,54040,54044,54048,54052,54056,54060,54064,54068,54072,54076,54080,54084,54088,54092,54096,54100,54104,54108,54112,54116,54120,54124,54128,54132,54136,54140,54144,54148,54152,54156,54160,54164,54168,54172,54176,54180,54184,54188,54192,54196,54200,54204,54208,54212,54216,54220,54224,54228,54232,54236,54240,54244,54248,54252,54256,54260,54264,54268,54272,54276,54280,54284,54288,54292,54296,54300,54304,54308,54312,54316,54320,54324,54328,54332,54336,54340,54456,54476,54492,54508,54512,54516,54520,54524,54528,54532,54536,54540,54544,54548,54552,54556,54560,54564,54612,54616,54620,54624,54628,54632,54636,54640,54644,54648,54652,54656,54660,54664,54668,54672,54676,54680,54684,54688,54692,54696,54700,54704,54708,54712,54716,54720,54724,54728,54732,54736,54740,54744,54748,54752,54756,54760,54764,54768,54772,54776,54780,54784,54788,54792,54796,54800,54804,54808,54812,54816,54820,54824,54828,54832,54836,54840,54844,54848,54852,54856,54860,54864,54868,54872,54876,54880,54884,54888,54892,54896,54900,54904,54908,54912,54916,54920,54924,54928,54932,54936,54940,54944,54948,54952,54956,54960,54964,54968,54972,54976,54980,54984,54988,54992,54996,55e3,55004,55008,55012,55016,55020,55024,55028,55032,55036,55040,55044,55048,55052,55056,55060,55064,55068,55072,55076,55080,55084,55088,55092,55096,55100,55104,55108,55112,55116,55120,55124,55128,55132,55136,55140,55144,55148,55152,55156,55160,55164,55168,55172,55176,55180,55184,55188,55192,55196,55200,55204,55208,55212,55216,55220,55224,55228,55232,55236,55240,55244,55248,55252,55256,55260,55264,55268,55272,55276,55280,55284,55288,55292,55296,55300,55304,55308,55312,55316,55320,55324,55328,55332,55336,55340,55344,55348,55352,55356,55360,55364,55368,55372,55376,55380,55384,55388,55392,55396,55400,55404,55408,55412,55416,55420,55424,55428,55432,55436,55440,55444,55448,55452,55456,55460,55464,55468,55472,55476,55480,55484,55488,55492,55496,55500,55504,55508,55512,55516,55520,55524,55528,55532,55536,55540,55544,55548,55552,55556,55560,55564,55568,55572,55576,55580,55584,55588,55592,55596,55600,55604,55608,55612,55616,55620,55624,55628,55632,55636,55640,55644,55648,55652,55656,55660,55664,55668,55672,55676,55680,55684,55688,55692,55696,55700,55704,55708,55712,55716,55720,55724,55728,55732,55736,55740,55744,55748,55752,55756,55760,55764,55768,55772,55776,55780,55784,55788,55792,55796,55800,55804,55808,55812,55816,55820,55824,55828,55832,55836,55840,55844,55848,55852,55856,55860,55864,55868,55872,55876,55880,55884,55888,55892,55896,55900,55904,55908,55912,55916,55920,55924,55928,55932,55936,55940,55944,55948,55952,55956,55960,55964,55968,55972,55976,55980,55984,55988,55992,55996,56e3,56004,56008,56012,56016,56020,56024,56028,56032,56036,56040,56044,56048,56052,56056,56060,56064,56068,56072,56076,56080,56084,56088,56092,56096,56100,56104,56108,56112,56116,56120,56124,56128,56132,56136,56140,56144,56148,56152,56156,56160,56164,56168,56172,56176,56180,56184,56188,56192,56196,56200,56204,56208,56212,56216,56220,56224,56228,56232,56236,56240,56244,56248,56252,56256,56260,56264,56268,56272,56276,56280,56284,56288,56292,56296,56300,56304,56308,56312,56316,56320,56324,56328,56372,56376,56380,56384,56388,56392,56396,56400,56404,56408,56412,56416,56420,56424,56428,56432,56436,56440,56444,56448,56452,56456,56460,56464,56468,56472,56476,56480,56484,56488,56492,56496,56500,56504,56508,56512,56516,56520,56524,56528,56532,56536,56540,56544,56548,56552,56556,56560,56564,56568,56572,56576,56580,56584,56588,56592,56596,56600,56604,56608,56612,56616,56620,56624,56628,56632,56636,56640,56644,56648,56652,56656,56660,56664,56668,56672,56676,56680,56684,56688,56692,56696,56700,56704,56708,56712,56716,56720,56724,56728,56732,56736,56740,56744,56748,56752,56756,56760,56764,56768,56772,56776,56780,56784,56788,56792,56796,56800,56804,56808,56812,56816,56820,56824,56828,56832,56836,56840,56844,56848,56852,56856,56860,56864,56868,56872,56876,56880,56884,56888,56892,56896,56900,56904,56908,56912,56916,56920,56924,56928,56932,56936,56940,56944,56948,56952,56956,56960,56964,56968,56972,56976,56980,56984,56988,56992,56996,57e3,57004,57008,57012,57016,57020,57024,57028,57032,57036,57040,57044,57048,57052,57056,57060,57064,57068,57072,57076,57080,57084,57088,57092,57096,57100,57104,57108,57112,57116,57120,57124,57128,57132,57136,57140,57144,57148,57152,57156,57160,57164,57168,57172,57176,57180,57184,57188,57192,57196,57200,57204,57208,57212,57216,57220,57224,57228,57232,57236,57240,57244,57248,57252,57256,57260,57264,57268,57272,57276,57280,57284,57288,57292,57296,57300,57304,57308,57312,57316,57320,57324,57328,57332,57336,57340,57344,57348,57352,57356,57360,57364,57368,57372,57376,57380,57384,57388,57392,57396,57400,57404,57408,57412,57416,57420,57424,57428,57432,57436,57440,57444,57448,57452,57456,57460,57464,57468,57472,57476,57480,57484,57488,57492,57496,57500,57504,57508,57512,57516,57520,57524,57528,57532,57536,57540,57544,57548,57552,57556,57560,57564,57568,57572,57576,57580,57584,57588,57592,57596,57600,57604,57608,57612,57616,57620,57624,57628,57632,57636,57640,57644,57648,57652,57656,57660,57664,57668,57672,57676,57680,57684,57688,57692,57696,57700,57704,57708,57712,57716,57720,57724,57728,57732,57736,57740,57744,57748,57752,57756,57760,57764,57768,57772,57776,57780,57784,57788,57792,57796,57800,57804,57808,57812,57816,57820,57824,57828,57832,57836,57840,57844,57848,57852,57856,57860,57864,57868,57872,57876,57880,57884,57888,57892,57896,57900,57904,57908,57912,57916,57920,57924,57928,57932,57936,57940,57944,57948,57952,57956,57960,57964,57968,57972,57976,57980,57984,57988,57992,57996,58e3,58004,58008,58012,58016,58020,58024,58028,58032,58036,58040,58044,58048,58052,58056,58060,58064,58068,58072,58076,58080,58084,58088,58092,58096,58100,58104,58108,58112,58116,58120,58124,58128,58132,58136,58140,58144,58148,58152,58156,58160,58164,58168,58172,58176,58180,58184,58188,58192,58196,58200,58204,58208,58212,58216,58220,58224,58228,58232,58236,58240,58244,58248,58252,58256,58260,58264,58268,58272,58276,58280,58284,58288,58292,58296,58300,58304,58308,58312,58316,58320,58324,58328,58332,58336,58340,58344,58348,58352,58356,58360,58364,58368,58372,58376,58380,58384,58388,58392,58396,58400,58404,58408,58412,58416,58420,58424,58428,58432,58436,58440,58444,58448,58452,58456,58460,58464,58468,58472,58476,58480,58484,58488,58492,58496,58500,58504,58508,58512,58516,58520,58524,58528,58532,58536,58540,58544,58548,58552,58556,58560,58564,58568,58572,58576,58580,58584,58588,58592,58596,58600,58604,58608,58612,58616,58620,58624,58628,58632,58636,58640,58644,58648,58652,58656,58660,58664,58668,58672,58676,58680,58684,58688,58692,58696,58700,58704,58708,58712,58716,58720,58724,58728,58732,58736,58740,58744,58748,58752,58756,58760,58764,58768,58772,58776,58780,58784,58788,58792,58796,58800,58804,58808,58812,58816,58820,58824,58828,58832,58836,58840,58844,58848,58852,58856,58860,58864,58868,58872,58876,58880,58884,58888,58892,58896,58900,58904,58908,58912,58916,58920,58924,58928,58932,58936,58940,58944,58948,58952,58956,58960,58964,58968,58972,58976,58980,58984,58988,58992,58996,59e3,59004,59008,59012,59016,59020,59024,59028,59032,59036,59040,59044,59048,59052,59056,59060,59064,59068,59072,59076,59080,59084,59088,59092,59096,59100,59104,59108,59112,59116,59120,59124,59128,59132,59136,59140,59144,59148,59152,59156,59160,59164,59168,59172,59176,59180,59184,59188,59192,59196,59200,59204,59208,59212,59216,59220,59224,59228,59232,59236,59240,59244,59248,59252,59256,59260,59264,59268,59272,59276,59280,59284,59288,59292,59296,59300,59304,59308,59312,59316,59320,59324,59328,59332,59336,59340,59344,59348,59352,59356,59360,59364,59368,59372,59376,59380,59384,59388,59392,59396,59400,59404,59408,59412,59416,59420,59424,59428,59432,59436,59440,59444,59448,59452,59456,59460,59464,59468,59472,59476,59480,59484,59488,59492,59496,59500,59504,59508,59512,59516,59520,59524,59528,59532,59536,59540,59544,59548,59552,59556,59560,59564,59568,59572,59576,59580,59584,59588,59592,59596,59600,59604,59608,59612,59616,59620,59624,59628,59632,59636,59640,59644,59648,59652,59656,59660,59664,59668,59672,59676,59680,59684,59688,59692,59696,59700,59704,59708,59712,59716,59720,59724,59728,59732,59736,59740,59744,59748,59752,59756,59760,59764,59768,59772,59776,59780,59784,59788,59792,59796,59800,59804,59808,59812,59816,59820,59824,59828,59832,59836,59840,59844,59848,59852,59856,59860,59864,59868,59872,59876,59880,59884,59888,59892,59896,59900,59904,59908,59912,59916,59920,59924,59928,59932,59936,59940,59944,59948,59952,59956,59960,59964,59968,59972,59976,59980,59984,59988,59992,59996,6e4,60004,60008,60012,60016,60020,60024,60028,60032,60036,60040,60044,60048,60052,60056,60060,60064,60068,60072,60076,60080,60084,60088,60092,60096,60100,60104,60108,60112,60116,60120,60124,60128,60132,60136,60140,60144,60148,60152,60156,60160,60164,60168,60172,60176,60180,60184,60188,60192,60196,60200,60204,60208,60212,60216,60220,60224,60228,60232,60236,60240,60244,60248,60252,60256,60260,60264,60268,60272,60276,60280,60284,60288,60292,60296,60300,60304,60308,60312,60316,60320,60324,60328,60332,60336,60340,60344,60348,60352,60356,60360,60364,60368,60372,60376,60380,60384,60388,60392,60396,60400,60404,60408,60412,60416,60420,60424,60428,60432,60436,60440,60444,60448,60452,60456,60460,60464,60468,60472,60476,60480,60484,60488,60492,60496,60500,60504,60508,60512,60516,60520,60524,60528,60532,60536,60540,60544,60548,60552,60556,60560,60564,60568,60572,60576,60580,60584,60588,60592,60596,60600,60604,60608,60612,60616,60620,60624,60628,60632,60636,60640,60644,60648,60652,60656,60660,60664,60668,60672,60676,60680,60684,60688,60692,60696,60700,60704,60708,60712,60716,60720,60724,60728,60732,60736,60740,60744,60748,60752,60756,60760,60764,60768,60772,60776,60780,60784,60788,60792,60796,60800,60804,60808,60812,60816,60820,60824,60828,60832,60836,60840,60844,60848,60852,60856,60860,60864,60868,60872,60876,60880,60884,60888,60892,60896,60900,60904,60908,60912,60916,60920,60924,60928,60932,60936,60940,60944,60948,60952,60956,60960,60964,60968,60972,60976,60980,60984,60988,60992,60996,61e3,61004,61008,61012,61016,61020,61024,61028,61032,61036,61040,61044,61048,61052,61056,61060,61064,61068,61072,61076,61080,61084,61088,61092,61096,61100,61104,61108,61112,61116,61120,61124,61128,61132,61136,61140,61144,61148,61152,61156,61160,61164,61168,61172,61176,61180,61184,61188,61192,61196,61200,61204,61208,61212,61216,61220,61224,61228,61232,61236,61240,61244,61248,61252,61256,61260,61264,61268,61272,61276,61280,61284,61288,61292,61296,61300,61304,61308,61312,61316,61320,61324,61328,61332,61336,61340,61344,61348,61352,61356,61360,61364,61368,61372,61376,61380,61384,61388,61392,61396,61400,61404,61408,61412,61416,61420,61424,61428,61432,61436,61440,61444,61448,61452,61456,61460,61464,61468,61472,61476,61480,61484,61488,61492,61496,61500,61504,61508,61512,61516,61520,61524,61528,61532,61536,61540,61544,61548,61552,61556,61560,61564,61568,61572,61576,61580,61584,61588,61592,61596,61600,61604,61608,61612,61616,61620,61624,61628,61632,61636,61640,61644,61648,61652,61656,61660,61664,61668,61672,61676,61680,61684,61688,61692,61696,61700,61704,61708,61712,61716,61720,61724,61728,61732,61736,61740,61744,61748,61752,61756,61760,61764,61768,61772,61776,61780,61784,61788,61792,61796,61800,61804,61808,61812,61816,61820,61824,61828,61832,61836,61840,61844,61848,61852,61856,61860,61864,61868,61872,61876,61880,61884,61888,61892,61896,61900,61904,61908,61912,61916,61920,61924,61928,61932,61936,61940,61944,61948,61952,61956,61960,61964,61968,61972,61976,61980,61984,61988,61992,61996,62e3,62004,62008,62012,62016,62020,62024,62028,62032,62036,62040,62044,62048,62052,62056,62060,62064,62068,62072,62076,62080,62084,62088,62092,62096,62100,62104,62108,62112,62116,62120,62124,62128,62132,62136,62140,62144,62148,62152,62156,62160,62164,62168,62172,62176,62180,62184,62188,62192,62196,62200,62204,62208,62212,62216,62220,62224,62228,62232,62236,62240,62244,62248,62252,62256,62260,62264,62268,62272,62276,62280,62284,62288,62292,62296,62300,62304,62308,62312,62316,62320,62324,62328,62332,62336,62340,62344,62348,62352,62356,62360,62364,62368,62372,62376,62380,62384,62388,62392,62396,62400,62404,62408,62412,62416,62420,62424,62428,62432,62436,62440,62444,62448,62452,62456,62460,62464,62468,62472,62476,62480,62484,62488,62492,62496,62500,62504,62508,62512,62516,62520,62524,62528,62532,62536,62540,62544,62548,62552,62556,62560,62564,62568,62572,62576,62580,62584,62588,62592,62596,62600,62604,62608,62612,62616,62620,62624,62628,62632,62636,62640,62644,62648,62652,62656,62660,62664,62668,62672,62676,62680,62684,62688,62692,62696,62700,62704,62708,62712,62716,62720,62724,62728,62732,62736,62740,62744,62748,62752,62756,62760,62764,62768,62772,62776,62780,62784,62788,62792,62796,62800,62804,62808,62812,62816,62820,62824,62828,62832,62836,62840,62844,62848,62852,62856,62860,62864,62868,62872,62876,62880,62884,62888,62892,62896,62900,62904,62908,62912,62916,62920,62924,62928,62932,62936,62940,62944,62948,62952,62956,62960,62964,62968,62972,62976,62980,62984,62988,62992,62996,63e3,63004,63008,63012,63016,63020,63024,63028,63032,63036,63040,63044,63048,63052,63056,63060,63064,63068,63072,63076,63080,63084,63088,63092,63096,63100,63104,63108,63112,63116,63120,63124,63128,63132,63136,63140,63144,63148,63152,63156,63160,63164,63168,63172,63176,63180,63184,63188,63192,63196,63200,63204,63208,63212,63216,63220,63224,63228,63232,63236,63240,63244,63248,63252,63256,63260,63264,63268,63272,63276,63280,63284,63288,63292,63296,63300,63304,63308,63312,63316,63320,63324,63328,63332,63336,63340,63344,63348,63352,63356,63360,63364,63368,63372,63376,63380,63384,63388,63392,63396,63400,63404,63408,63412,63416,63420,63424,63428,63432,63436,63440,63444,63448,63452,63456,63460,63464,63468,63472,63476,63480,63484,63488,63492,63496,63500,63504,63508,63512,63516,63520,63524,63528,63532,63536,63540,63544,63548,63552,63556,63560,63564,63568,63572,63576,63580,63584,63588,63592,63596,63600,63604,63608,63612,63616,63620,63624,63628,63632,63636,63640,63644,63648,63652,63656,63660,63664,63668,63672,63676,63680,63684,63688,63692,63696,63700,63704,63708,63712,63716,63720,63724,63728,63732,63736,63740,63744,63748,63752,63756,63760,63764,63768,63772,63776,63780,63784,63788,63792,63796,63800,63804,63808,63812,63816,63820,63824,63828,63832,63836,63840,63844,63848,63852,63856,63860,63864,63868,63872,63876,63880,63884,63888,63892,63896,63900,63904,63908,63912,63916,63920,63924,63928,63932,63936,63940,63944,63948,63952,63956,63960,63964,63968,63972,63976,63980,63984,63988,63992,63996,64e3,64004,64008,64012,64016,64020,64024,64028,64032,64036,64040,64044,64048,64052,64056,64060,64064,64068,64072,64076,64080,64084,64088,64092,64096,64100,64104,64108,64112,64116,64120,64124,64128,64132,64136,64140,64144,64148,64152,64156,64160,64164,64168,64172,64176,64180,64184,64188,64192,64196,64200,64204,64208,64212,64216,64220,64224,64228,64232,64236,64240,64244,64248,64252,64256,64260,64264,64268,64272,64276,64280,64284,64288,64292,64296,64300,64304,64308,64312,64316,64320,64324,64328,64332,64336,64340,64344,64348,64352,64356,64360,64364,64368,64372,64376,64380,64384,64388,64392,64396,64400,64404,64408,64412,64416,64420,64424,64428,64432,64436,64440,64444,64448,64452,64456,64460,64464,64468,64472,64476,64480,64484,64488,64492,64496,64500,64504,64508,64512,64516,64520,64524,64528,64532,64536,64540,64544,64548,64552,64556,64560,64564,64568,64572,64576,64580,64584,64588,64592,64596,64600,64604,64608,64612,64616,64620,64624,64628,64632,64636,64640,64644,64648,64652,64656,64660,64664,64668,64672,64676,64680,64684,64688,64692,64696,64700,64704,64708,64712,64716,64720,64724,64728,64732,64736,64740,64744,64748,64752,64756,64760,64764,64768,64772,64776,64780,64784,64788,64792,64796,64800,64804,64808,64812,64816,64820,64824,64828,64832,64836,64840,64844,64848,64852,64856,64860,64864,64868,64872,64876,64880,64884,64888,64892,64896,64900,64904,64908,64912,64916,64920,64924,64928,64932,64936,64940,64944,64948,64952,64956,64960,64964,64968,64972,64976,64980,64984,64988,64992,64996,65e3,65004,65008,65012,65016,65020,65024,65028,65032,65036,65040,65044,65048,65052,65056,65060,65064,65068,65072,65076,65080,65084,65088,65092,65096,65100,65104,65108,65112,65116,65120,65124,65128,65132,65136,65140,65144,65148,65152,65156,65160,65164,65168,65172,65176,65180,65184,65188,65192,65196,65200,65204,65208,65212,65216,65220,65224,65228,65232,65236,65240,65244,65248,65252,65256,65260,65264,65268,65272,65276,65280,65284,65288,65292,65296,65300,65304,65308,65312,65316,65320,65324,65328,65332,65336,65340,65344,65348,65352,65356,65360,65364,65368,65372,65376,65380,65384,65388,65392,65396,65400,65404,65408,65412,65416,65420,65424,65428,65432,65436,65440,65444,65448,65452,65456,65460,65464,65468,65472,65476,65480,65484,65488,65492,65496,65500,65504,65508,65512,65516,65520,65524,65528,65532,65536,65540,65544,65548,65552,65556,65560,65564,65568,65572,65576,65580,65584,65588,65592,65596,65600,65604,65608,65612,65616,65620,65624,65628,65632,65636,65640,65644,65648,65652,65656,65660,65664,65668,65672,65676,65680,65684,65688,65692,65696,65700,65704,65708,65712,65716,65720,65724,65728,65732,65736,65740,65744,65748,65752,65756,65760,65764,65768,65772,65776,65780,65784,65788,65792,65796,65800,65804,65808,65812,65816,65820,65824,65828,65832,65836,65840,65844,65848,65852,65856,65860,65864,65868,65872,65876,65880,65884,65888,65892,65896,65900,65904,65908,65912,65916,65920,65924,65928,65932,65936,65940,65944,65948,65952,65956,65960,65964,65968,65972,65976,65980,65984,65988,65992,65996,66e3,66004,66008,66012,66016,66020,66024,66028,66032,66036,66040,66044,66048,66052,66056,66060,66064,66068,66072,66076,66080,66084,66088,66092,66096,66100,66104,66108,66112,66116,66120,66124,66128,66132,66136,66140,66144,66148,66152,66156,66160,66164,66168,66172,66176,66180,66184,66188,66192,66196,66200,66204,66208,66212,66216,66220,66224,66228,66232,66236,66240,66244,66248,66252,66256,66260,66264,66268,66272,66276,66280,66284,66288,66292,66296,66300,66304,66308,66312,66316,66320,66324,66328,66332,66336,66340,66344,66348,66352,66356,66360,66364,66368,66372,66376,66380,66384,66388,66392,66396,66400,66404,66408,66412,66416,66420,66424,66428,66432,66436,66440,66444,66448,66452,66456,66460,66464,66468,66472,66476,66480,66484,66488,66492,66496,66500,66504,66508,66512,66516,66520,66524,66528,66532,66536,66540,66544,66548,66552,66556,66560,66564,66568,66572,66576,66580,66584,66588,66592,66596,66600,66604,66608,66612,66616,66620,66624,66628,66632,66636,66640,66644,66648,66652,66656,66660,66664,66668,66672,66676,66680,66684,66688,66692,66696,66700,66704,66708,66712,66716,66720,66724,66728,66732,66736,66740,66744,66748,66752,66756,66760,66764,66768,66772,66776,66780,66784,66788,66792,66796,66800,66804,66808,66812,66816,66820,66824,66828,66832,66836,66840,66844,66848,66852,66856,66860,66864,66868,66872,66876,66880,66884,66888,66892,66896,66900,66904,66908,66912,66916,66920,66924,66928,66932,66936,66940,66944,66948,66952,66956,66960,66964,66968,66972,66976,66980,66984,66988,66992,66996,67e3,67004,67008,67012,67016,67020,67024,67028,67032,67036,67040,67044,67048,67052,67056,67060,67064,67068,67072,67076,67080,67084,67088,67092,67096,67100,67104,67108,67112,67116,67120,67124,67128,67132,67136,67140,67144,67148,67152,67156,67160,67164,67168,67172,67176,67180,67184,67188,67192,67196,67200,67204,67208,67212,67216,67220,67224,67228,67232,67236,67240,67244,67248,67252,67256,67260,67264,67268,67272,67276,67280,67284,67288,67292,67296,67300,67304,67308,67312,67316,67320,67324,67328,67332,67336,67340,67344,67348,67352,67356,67360,67364,67368,67372,67376,67380,67384,67388,67392,67396,67400,67404,67408,67412,67416,67420,67424,67428,67432,67436,67440,67444,67448,67452,67456,67460,67464,67468,67472,67476,67480,67484,67488,67492,67496,67500,67504,67508,67512,67516,67520,67524,67528,67532,67536,67540,67544,67548,67552,67556,67560,67564,67568,67572,67576,67580,67584,67588,67592,67596,67600,67604,67608,67612,67616,67620,67624,67628,67632,67636,67640,67644,67648,67652,67656,67660,67664,67668,67672,67676,67680,67684,67688,67692,67696,67700,67704,67708,67712,67716,67720,67724,67728,67732,67736,67740,67744,67748,67752,67756,67760,67764,67768,67772,67776,67780,67784,67788,67792,67796,67800,67804,67808,67812,67816,67820,67824,67828,67832,67836,67840,67844,67848,67852,67856,67860,67864,67868,67872,67876,67880,67884,67888,67892,67896,67900,67904,67908,67912,67916,67920,67924,67928,67932,67936,67940,67944,67948,67952,67956,67960,67964,67968,67972,67976,67980,67984,67988,67992,67996,68e3,68004,68008,68012,68016,68020,68024,68028,68032,68036,68040,68044,68048,68052,68056,68060,68064,68068,68072,68076,68080,68084,68088,68092,68096,68100,68104,68108,68112,68116,68120,68124,68128,68132,68136,68140,68144,68148,68152,68156,68160,68164,68168,68172,68176,68180,68184,68188,68192,68196,68200,68204,68208,68212,68216,68220,68224,68228,68232,68236,68240,68244,68248,68252,68256,68260,68264,68268,68272,68276,68280,68284,68288,68292,68296,68300,68304,68308,68312,68316,68320,68324,68328,68332,68336,68340,68344,68348,68352,68356,68360,68364,68368,68372,68376,68380,68384,68388,68392,68396,68400,68404,68408,68412,68416,68420,68424,68428,68432,68436,68440,68444,68448,68452,68456,68460,68464,68468,68472,68476,68480,68484,68488,68492,68496,68500,68504,68508,68512,68516,68520,68524,68528,68532,68536,68540,68544,68548,68552,68556,68560,68564,68568,68572,68576,68580,68584,68588,68592,68596,68600,68604,68608,68612,68616,68620,68624,68628,68632,68636,68640,68644,68648,68652,68656,68660,68740,68792,68844,68896,68948,69e3,69052,69184,69204,69236,69288,69292,69296,69300,69304,69308,69312,69316,69320,69324,69328,69332,69336,69340,69344,69348,69352,69356,69360,69364,69368,69372,69376,69380,69384,69388,69392,69396,69400,69404,69408,69412,69416,69420,69424,69428,69432,69436,69440,69444,69448,69452,69456,69460,69464,69468,69472,69476,69480,69484,69488,69492,69496,69500,69504,69508,69512,69516,69520,69524,69528,69532,69536,69540,69544,69548,69552,69556,69560,69564,69568,69572,69576,69580,69584,69588,69592,69596,69600,69604,69608,69612,69616,69620,69624,69628,69632,69636,69640,69644,69648,69652,69656,69660,69664,69668,69672,69676,69680,69684,69688,69692,69696,69700,69704,69708,69712,69716,69720,69724,69728,69732,69736,69740,69744,69748,69752,69756,69760,69764,69768,69772,69776,69780,69784,69788,69792,69796,69800,69804,69808,69812,69816,69820,69824,69828,69832,69836,69840,69844,69848,69852,69856,69860,69864,69868,69872,69876,69880,69884,69888,69892,69896,69900,69904,69908,69912,69916,69920,69924,69928,69932,69936,69940,69944,69948,69952,69956,69960,69964,69968,69972,69976,69980,69984,69988,69992,69996,7e4,70004,70008,70012,70016,70020,70024,70028,70032,70036,70040,70044,70048,70052,70056,70060,70064,70068,70072,70076,70080,70084,70088,70092,70096,70100,70104,70108,70112,70116,70120,70124,70128,70132,70136,70140,70144,70148,70152,70156,70160,70164,70168,70172,70176,70180,70184,70188,70192,70196,70200,70204,70208,70212,70216,70220,70224,70228,70232,70236,70240,70244,70248,70252,70256,70260,70264,70268,70272,70276,70280,70284,70288,70292,70296,70300,70304,70308,70312,70316,70320,70324,70328,70332,70336,70340,70344,70348,70352,70356,70360,70364,70368,70372,70376,70380,70384,70388,70392,70396,70400,70404,70408,70412,70416,70420,70424,70428,70432,70436,70440,70444,70448,70452,70456,70460,70464,70468,70472,70476,70480,70484,70488,70492,70496,70500,70504,70508,70512,70516,70520,70524,70528,70532,70536,70540,70544,70548,70552,70556,70560,70564,70568,70572,70576,70580,70584,70588,70592,70596,70600,70604,70608,70612,70616,70620,70624,70628,70632,70636,70640,70644,70648,70652,70656,70660,70664,70668,70672,70676,70680,70684,70688,70692,70696,70700,70704,70708,70712,70716,70720,70724,70728,70732,70736,70740,70744,70748,70752,70756,70760,70764,70768,70772,70776,70780,70784,70788,70792,70796,70800,70804,70808,70812,70816,70820,70824,70828,70832,70836,70840,70844,70848,70852,70856,70860,70864,70868,70872,70876,70880,70884,70888,70892,70896,70900,70904,70908,70912,70916,70920,70924,70928,70932,70936,70940,70944,70948,70952,70956,70960,70964,70968,70972,70976,70980,70984,70988,70992,70996,71e3,71004,71008,71012,71016,71020,71024,71028,71748,71872,72708,72880,72884,72888,72892,72896,72900,72904,72908,72912,72992,73076,73160,73292,73380,73612,73616,73620,73624,73628,73632,73636,73640,73644,73648,73652,73656,73660,73664,73668,73672,73676,73680,73684,73688,73692,73696,73700,73704,73708,73712,73716,73720,73724,73728,73732,73736,73740,74072,74864,74884,75016,75020,75024,75028,75032,75036,75040,75044,75048,75052,75056,75060,75064,75068,75072,75076,75080,75084,75088,75092,75096,75100,75104,75108,75112,75116,75120,75124,75128,75132,75136,75140,75144,75148,75152,75156,75160,75164,75168,75172,75176,75180,75184,75188,75192,75196,75200,75204,75208,75212,75216,75220,75224,75228,75232,75236,75240,75244,75248,75252,75256,75260,75408,75452,75536,75640,75676,76204,76208,76212,76216,76220,76224,76228,76232,76236,76240,76244,76248,76252,76256,76260,76264,76268,76272,76276,76280,76284,76288,76292,76296,76300,76304,76308,76312,76316,76320,76324,76328,76332,76336,76340,76344,76348,76352,76356,76360,76364,76368,76372,76376,76380,76384,76388,76392,76396,76400,76404,76408,76412,76416,76420,76424,76428,76432,76436,76440,76444,76448,76452,76456,76460,76464,76468,76472,76476,76480,76484,76488,76492,76496,76500,76504,76508,76512,76516,76520,76524,76528,76532,76536,76540,76544,76548,76552,76556,76560,76564,76568,76572,81676,81716,82820,82924,85160,85456,85652,85712,85776,86412,87028,87456,87500,88404,88408,88412,88416,88420,88992,89748,89836,90192,90860,91868,92952,93e3,93388,94992,96728,96824,96828,96832,96836,96840,96844,96848,96852,96856,96860,96864,96868,96872,96876,96880,96884,96888,96892,96896,96900,96904,96908,96912,96916,96920,96924,96928,96932,96936,96940,96944,96948,96952,96956,96960,96964,96968,96972,96976,96980,96984,96988,96992,96996,97e3,97004,97104,97192,97428,97488,98268,98400,98600,99820,99824,99828,99832,99836,99840,99844,99848,99852,99856,99860,99864,99868,99872,99876,99880,99884,99888,99892,99896,99900,99904,99908,99912,99916,99920,99924,99928,99932,99936,99940,99944,99948,99952,99956,99960,99964,99968,99972,99976,99980,99984,99988,99992,99996,1e5,100004,100008,100012,100016,100020,100024,100028,100032,100036,100040,100044,100048,100052,100056,100060,100064,100068,100072,100076,100080,100084,100088,100092,100096,100100,100104,100108,100112,100116,100120,100124,100128,100132,100136,100140,100144,100148,100152,100156,100160,100164,100168,100172,100176,100180,100184,100188,100192,100196,100200,100204,100208,100212,100216,100220,100224,100228,100232,100236,100240,100244,100248,100252,100256,100260,100264,100268,100272,100276,100280,100284,100288,100292,100296,100300,100304,100308,100312,100316,100320,100324,100328,100332,100336,100340,100344,100348,100352,100356,100360,100364,100368,100372,100376,100380,100384,100388,100392,100396,100400,100404,100408,100412,100416,100420,100424,100428,100432,100436,100440,100444,100448,100452,100456,100460,100464,100468,100472,100476,100480,100484,100488,100492,100496,100500,100504,100508,100512,100516,100520,100524,100528,100532,100536,100540,100544,100548,100552,100556,100560,100564,100568,100572,100576,100580,100584,100588,100592,100596,100600,100604,100608,100612,100616,100620,100624,100628,100632,100636,100640,100644,100648,100652,100656,100660,100664,100668,100672,100676,100680,100684,100688,100692,100696,100700,100704,100708,100712,100716,100720,100724,100728,100732,100736,100740,100744,100748,100752,100756,100760,100764,100768,100772,100776,100780,100784,100788,100792,100796,100800,100804,100808,100812,100816,100820,100824,100828,100832,100836,100840,100844,100848,100852,100856,100860,100864,100868,100872,100876,100880,100884,100888,100892,100896,100900,100904,100908,100912,100916,100920,100924,100928,100932,100936,100940,100944,100948,100952,100956,100960,100964,100968,100972,100976,100980,100984,100988,100992,100996,101e3,101004,101008,101012,101016,101020,101024,101028,101032,101036,101040,101044,101048,101052,101056,101060,101064,101068,101072,101076,101080,101084,101088,101092,101096,101100,101104,101108,101112,101116,101120,101124,101128,101132,101136,101140,101144,101148,101152,101156,101160,101164,101168,101172,101176,101180,101184,101188,101192,101196,101200,101204,101208,101212,101216,101220,101224,101228,101232,101236,101240,101244,101248,101252,101256,101260,101264,101268,101272,101276,101280,101284,101288,101292,101296,101300,101304,101308,101312,101316,101320,101324,101328,101332,101336,101340,101344,101348,101352,101356,101360,101364,101368,101372,101376,101380,101384,101388,101392,101396,101400,101404,101408,101412,101416,101420,101424,101428,101432,101436,101440,101444,101448,101452,101456,101460,101464,101468,101472,101476,101480,101484,101488,101492,101496,101500,101504,101508,101512,101516,101520,101524,101528,101532,101536,101540,101544,101548,101552,101556,101560,101564,101568,101572,101576,101580,101584,101588,101592,101596,101600,101604,101608,101612,101616,101620,101624,101628,101632,101636,101640,101644,101648,101652,101656,101660,101664,101668,101672,101676,101680,101684,101688,101692,101696,101700,101704,101708,101712,101716,101720,101724,101728,101732,101736,101740,101744,101748,101752,101756,101760,101764,101768,101772,101776,101780,101784,101788,101792,101796,101800,101804,101808,101812,101816,101820,101824,101828,101832,101836,101840,101844,101848,101852,101856,101860,101864,101868,101872,103496,103664,104232,105332,105360,105392,105408,105448,105488,105532,1040,1664,1764,1816,2068,2232,2316,2544,2844,2976,4784,5628,8584,15176,15240,15792,21468,29240,33204,33596,33616,37412,41656,41888,49136,72192,76044,78724,81908,82428,82552,82632,85096,87556,87616,88344,88384,89672,90656,90708,90760,90932,91348,91604,91692,91704,91820,93436,93908,93964,95076,95316,95372,95396,95420,95444,95468,95492,95516,95540,95564,95588,95612,95636,95660,95684,95708,95732,95756,95780,95804,95828,95852,95876,95900,95924,95948,95972,95996,96020,96044,96068,96092,96116,96140,96164,96188,96212,96424,96792,98312,98928,99032,99080,99432,99584,102584,103388,103940,103968,104528,104820,105240,105644,105784,105844]);for(var i=0;i<relocations.length;i++){HEAPU32[eb+relocations[i]>>2]=HEAPU32[eb+relocations[i]>>2]+eb}}));var ENV={};function ___buildEnvironment(environ){var MAX_ENV_VALUES=64;var TOTAL_ENV_SIZE=1024;var poolPtr;var envPtr;if(!___buildEnvironment.called){___buildEnvironment.called=true;ENV["USER"]=ENV["LOGNAME"]="web_user";ENV["PATH"]="/";ENV["PWD"]="/";ENV["HOME"]="/home/web_user";ENV["LANG"]="C.UTF-8";ENV["_"]=Module["thisProgram"];poolPtr=getMemory(TOTAL_ENV_SIZE);envPtr=getMemory(MAX_ENV_VALUES*4);HEAP32[envPtr>>2]=poolPtr;HEAP32[environ>>2]=envPtr}else{envPtr=HEAP32[environ>>2];poolPtr=HEAP32[envPtr>>2]}var strings=[];var totalSize=0;for(var key in ENV){if(typeof ENV[key]==="string"){var line=key+"="+ENV[key];strings.push(line);totalSize+=line.length}}if(totalSize>TOTAL_ENV_SIZE){throw new Error("Environment size exceeded TOTAL_ENV_SIZE!")}var ptrSize=4;for(var i=0;i<strings.length;i++){var line=strings[i];writeAsciiToMemory(line,poolPtr);HEAP32[envPtr+i*ptrSize>>2]=poolPtr;poolPtr+=line.length+1}HEAP32[envPtr+strings.length*ptrSize>>2]=0}function ___cxa_allocate_exception(size){return _malloc(size)}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module["dynCall_vi"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___cxa_pure_virtual(){ABORT=true;throw"Pure virtual function called!"}function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:ptr,type:type,destructor:destructor,refcount:0,caught:false,rethrown:false};EXCEPTIONS.last=ptr;if(!("uncaught_exception"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}function ___cxa_uncaught_exception(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}function ___lock(){}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;return value}function ___map_file(pathname,size){___setErrNo(ERRNO_CODES.EPERM);return-1}var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};var PATH={splitPath:(function(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift("..")}}return parts}),normalize:(function(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path}),dirname:(function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir}),basename:(function(path){if(path==="/")return"/";var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)}),extname:(function(path){return PATH.splitPath(path)[3]}),join:(function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"))}),join2:(function(l,r){return PATH.normalize(l+"/"+r)}),resolve:(function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter((function(p){return!!p})),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")})};var TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){stream.tty.ops.flush(stream.tty)}),flush:(function(stream){stream.tty.ops.flush(stream.tty)}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}for(var i=0;i<length;i++){try{stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var isPosixPlatform=process.platform!="win32";var fd=process.stdin.fd;if(isPosixPlatform){var usingDevice=false;try{fd=fs.openSync("/dev/stdin","r");usingDevice=true}catch(e){}}try{bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf("EOF")!=-1)bytesRead=0;else throw e}if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}})}};var MEMFS={ops_table:null,mount:(function(mount){return MEMFS.createNode(null,"/",16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents}),getFileDataAsTypedArray:(function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete parent.contents[name]}),rmdir:(function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size}),write:(function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0})}};var IDBFS={dbs:{},indexedDB:(function(){if(typeof indexedDB!=="undefined")return indexedDB;var ret=null;if(typeof window==="object")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,"IDBFS used, but indexedDB not supported");return ret}),DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:(function(mount){return MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}if(!req){return callback("Unable to connect to IndexedDB")}req.onupgradeneeded=(function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains("timestamp")){fileStore.createIndex("timestamp","timestamp",{unique:false})}});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),getLocalSet:(function(mount,callback){var entries={};function isRealDir(p){return p!=="."&&p!==".."}function toAbsolute(root){return(function(p){return PATH.join2(root,p)})}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:"local",entries:entries})}),getRemoteSet:(function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return callback(err);try{var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readonly");transaction.onerror=(function(e){callback(this.error);e.preventDefault()});var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index("timestamp");index.openKeyCursor().onsuccess=(function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:"remote",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}catch(e){return callback(e)}}))}),loadLocalEntry:(function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error("node type not supported"))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{canOwn:true})}else{return callback(new Error("node type not supported"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),storeRemoteEntry:(function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),removeRemoteEntry:(function(store,path,callback){var req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),reconcile:(function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach((function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var remove=[];Object.keys(dst.entries).forEach((function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return callback(null)}var completed=0;var db=src.type==="remote"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readwrite");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=(function(e){done(this.error);e.preventDefault()});create.sort().forEach((function(path){if(dst.type==="local"){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type==="local"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var NODEFS={isWindows:false,staticInit:(function(){NODEFS.isWindows=!!process.platform.match(/^win/);var flags=process["binding"]("constants");if(flags["fs"]){flags=flags["fs"]}NODEFS.flagsForNodeMap={"1024":flags["O_APPEND"],"64":flags["O_CREAT"],"128":flags["O_EXCL"],"0":flags["O_RDONLY"],"2":flags["O_RDWR"],"4096":flags["O_SYNC"],"512":flags["O_TRUNC"],"1":flags["O_WRONLY"]}}),bufferFrom:(function(arrayBuffer){return Buffer.alloc?Buffer.from(arrayBuffer):new Buffer(arrayBuffer)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,"/",NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node}),getMode:(function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&292)>>2}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode}),realPath:(function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)}),flagsForNode:(function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;var newFlags=0;for(var k in NODEFS.flagsForNodeMap){if(flags&k){newFlags|=NODEFS.flagsForNodeMap[k];flags^=k}}if(!flags){return newFlags}else{throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}}),node_ops:{getattr:(function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,"",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node}),rename:(function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsForNode(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){if(length===0)return 0;try{return fs.readSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),write:(function(stream,buffer,offset,length,position){try{return fs.writeSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:(function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync;var root=WORKERFS.createNode(null,"/",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split("/");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join("/");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return parent}function base(path){var parts=path.split("/");return parts[parts.length-1]}Array.prototype.forEach.call(mount.opts["files"]||[],(function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)}));(mount.opts["blobs"]||[]).forEach((function(obj){WORKERFS.createNode(ensureParent(obj["name"]),base(obj["name"]),WORKERFS.FILE_MODE,0,obj["data"])}));(mount.opts["packages"]||[]).forEach((function(pack){pack["metadata"].files.forEach((function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack["blob"].slice(file.start,file.end))}))}));return root}),createNode:(function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node}),node_ops:{getattr:(function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}}),lookup:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}),mknod:(function(parent,name,mode,dev){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rename:(function(oldNode,newDir,newName){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),unlink:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rmdir:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newName,oldPath){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readlink:(function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)})},stream_ops:{read:(function(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size}),write:(function(stream,buffer,offset,length,position){throw new FS.ErrnoError(ERRNO_CODES.EIO)}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};STATICTOP+=16;STATICTOP+=16;STATICTOP+=16;var LZ4={DIR_MODE:16895,FILE_MODE:33279,CHUNK_SIZE:-1,codec:null,init:(function(){if(LZ4.codec)return;LZ4.codec=(function(){var MiniLZ4=(function(){var exports={};exports.uncompress=(function(input,output,sIdx,eIdx){sIdx=sIdx||0;eIdx=eIdx||input.length-sIdx;for(var i=sIdx,n=eIdx,j=0;i<n;){var token=input[i++];var literals_length=token>>4;if(literals_length>0){var l=literals_length+240;while(l===255){l=input[i++];literals_length+=l}var end=i+literals_length;while(i<end)output[j++]=input[i++];if(i===n)return j}var offset=input[i++]|input[i++]<<8;if(offset===0)return j;if(offset>j)return-(i-2);var match_length=token&15;var l=match_length+240;while(l===255){l=input[i++];match_length+=l}var pos=j-offset;var end=j+match_length+4;while(j<end)output[j++]=output[pos++]}return j});var maxInputSize=2113929216,minMatch=4,hashLog=16,hashShift=minMatch*8-hashLog,copyLength=8,mfLimit=copyLength+minMatch,skipStrength=6,mlBits=4,mlMask=(1<<mlBits)-1,runBits=8-mlBits,runMask=(1<<runBits)-1,hasher=2654435761;assert(hashShift===16);var hashTable=new Int16Array(1<<16);var empty=new Int16Array(hashTable.length);exports.compressBound=(function(isize){return isize>maxInputSize?0:isize+isize/255+16|0});exports.compress=(function(src,dst,sIdx,eIdx){hashTable.set(empty);return compressBlock(src,dst,0,sIdx||0,eIdx||dst.length)});function compressBlock(src,dst,pos,sIdx,eIdx){var dpos=sIdx;var dlen=eIdx-sIdx;var anchor=0;if(src.length>=maxInputSize)throw new Error("input too large");if(src.length>mfLimit){var n=exports.compressBound(src.length);if(dlen<n)throw Error("output too small: "+dlen+" < "+n);var step=1,findMatchAttempts=(1<<skipStrength)+3,srcLength=src.length-mfLimit;while(pos+minMatch<srcLength){var sequenceLowBits=src[pos+1]<<8|src[pos];var sequenceHighBits=src[pos+3]<<8|src[pos+2];var hash=Math.imul(sequenceLowBits|sequenceHighBits<<16,hasher)>>>hashShift;var ref=hashTable[hash]-1;hashTable[hash]=pos+1;if(ref<0||pos-ref>>>16>0||(src[ref+3]<<8|src[ref+2])!=sequenceHighBits||(src[ref+1]<<8|src[ref])!=sequenceLowBits){step=findMatchAttempts++>>skipStrength;pos+=step;continue}findMatchAttempts=(1<<skipStrength)+3;var literals_length=pos-anchor;var offset=pos-ref;pos+=minMatch;ref+=minMatch;var match_length=pos;while(pos<srcLength&&src[pos]==src[ref]){pos++;ref++}match_length=pos-match_length;var token=match_length<mlMask?match_length:mlMask;if(literals_length>=runMask){dst[dpos++]=(runMask<<mlBits)+token;for(var len=literals_length-runMask;len>254;len-=255){dst[dpos++]=255}dst[dpos++]=len}else{dst[dpos++]=(literals_length<<mlBits)+token}for(var i=0;i<literals_length;i++){dst[dpos++]=src[anchor+i]}dst[dpos++]=offset;dst[dpos++]=offset>>8;if(match_length>=mlMask){match_length-=mlMask;while(match_length>=255){match_length-=255;dst[dpos++]=255}dst[dpos++]=match_length}anchor=pos}}if(anchor==0)return 0;literals_length=src.length-anchor;if(literals_length>=runMask){dst[dpos++]=runMask<<mlBits;for(var ln=literals_length-runMask;ln>254;ln-=255){dst[dpos++]=255}dst[dpos++]=ln}else{dst[dpos++]=literals_length<<mlBits}pos=anchor;while(pos<src.length){dst[dpos++]=src[pos++]}return dpos}exports.CHUNK_SIZE=2048;exports.compressPackage=(function(data,verify){if(verify){var temp=new Uint8Array(exports.CHUNK_SIZE)}assert(data instanceof ArrayBuffer);data=new Uint8Array(data);console.log("compressing package of size "+data.length);var compressedChunks=[];var successes=[];var offset=0;var total=0;while(offset<data.length){var chunk=data.subarray(offset,offset+exports.CHUNK_SIZE);offset+=exports.CHUNK_SIZE;var bound=exports.compressBound(chunk.length);var compressed=new Uint8Array(bound);var compressedSize=exports.compress(chunk,compressed);if(compressedSize>0){assert(compressedSize<=bound);compressed=compressed.subarray(0,compressedSize);compressedChunks.push(compressed);total+=compressedSize;successes.push(1);if(verify){var back=exports.uncompress(compressed,temp);assert(back===chunk.length,[back,chunk.length]);for(var i=0;i<chunk.length;i++){assert(chunk[i]===temp[i])}}}else{assert(compressedSize===0);compressedChunks.push(chunk);total+=chunk.length;successes.push(0)}}data=null;var compressedData={data:new Uint8Array(total+exports.CHUNK_SIZE*2),cachedOffset:total,cachedIndexes:[-1,-1],cachedChunks:[null,null],offsets:[],sizes:[],successes:successes};offset=0;for(var i=0;i<compressedChunks.length;i++){compressedData.data.set(compressedChunks[i],offset);compressedData.offsets[i]=offset;compressedData.sizes[i]=compressedChunks[i].length;offset+=compressedChunks[i].length}console.log("compressed package into "+[compressedData.data.length]);assert(offset===total);return compressedData});assert(exports.CHUNK_SIZE<1<<15);return exports})();return MiniLZ4})();LZ4.CHUNK_SIZE=LZ4.codec.CHUNK_SIZE}),loadPackage:(function(pack){LZ4.init();var compressedData=pack["compressedData"];if(!compressedData)compressedData=LZ4.codec.compressPackage(pack["data"]);assert(compressedData.cachedIndexes.length===compressedData.cachedChunks.length);for(var i=0;i<compressedData.cachedIndexes.length;i++){compressedData.cachedIndexes[i]=-1;compressedData.cachedChunks[i]=compressedData.data.subarray(compressedData.cachedOffset+i*LZ4.CHUNK_SIZE,compressedData.cachedOffset+(i+1)*LZ4.CHUNK_SIZE);assert(compressedData.cachedChunks[i].length===LZ4.CHUNK_SIZE)}pack["metadata"].files.forEach((function(file){var dir=PATH.dirname(file.filename);var name=PATH.basename(file.filename);FS.createPath("",dir,true,true);var parent=FS.analyzePath(dir).object;LZ4.createNode(parent,name,LZ4.FILE_MODE,0,{compressedData:compressedData,start:file.start,end:file.end})}))}),createNode:(function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=LZ4.node_ops;node.stream_ops=LZ4.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(LZ4.FILE_MODE!==LZ4.DIR_MODE);if(mode===LZ4.FILE_MODE){node.size=contents.end-contents.start;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node}),node_ops:{getattr:(function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}}),lookup:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}),mknod:(function(parent,name,mode,dev){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rename:(function(oldNode,newDir,newName){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),unlink:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rmdir:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readdir:(function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),symlink:(function(parent,newName,oldPath){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readlink:(function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)})},stream_ops:{read:(function(stream,buffer,offset,length,position){length=Math.min(length,stream.node.size-position);if(length<=0)return 0;var contents=stream.node.contents;var compressedData=contents.compressedData;var written=0;while(written<length){var start=contents.start+position+written;var desired=length-written;var chunkIndex=Math.floor(start/LZ4.CHUNK_SIZE);var compressedStart=compressedData.offsets[chunkIndex];var compressedSize=compressedData.sizes[chunkIndex];var currChunk;if(compressedData.successes[chunkIndex]){var found=compressedData.cachedIndexes.indexOf(chunkIndex);if(found>=0){currChunk=compressedData.cachedChunks[found]}else{compressedData.cachedIndexes.pop();compressedData.cachedIndexes.unshift(chunkIndex);currChunk=compressedData.cachedChunks.pop();compressedData.cachedChunks.unshift(currChunk);if(compressedData.debug){console.log("decompressing chunk "+chunkIndex);Module["decompressedChunks"]=(Module["decompressedChunks"]||0)+1}var compressed=compressedData.data.subarray(compressedStart,compressedStart+compressedSize);var originalSize=LZ4.codec.uncompress(compressed,currChunk);if(chunkIndex<compressedData.successes.length-1)assert(originalSize===LZ4.CHUNK_SIZE)}}else{currChunk=compressedData.data.subarray(compressedStart,compressedStart+LZ4.CHUNK_SIZE)}var startInChunk=start%LZ4.CHUNK_SIZE;var endInChunk=Math.min(startInChunk+desired,LZ4.CHUNK_SIZE);buffer.set(currChunk.subarray(startInChunk,endInChunk),offset+written);var currWritten=endInChunk-startInChunk;written+=currWritten}return written}),write:(function(stream,buffer,offset,length,position){throw new FS.ErrnoError(ERRNO_CODES.EIO)}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:(function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return ___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}var parts=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return FS.isDir(this.mode)})},isDevice:{get:(function(){return FS.isChrdev(this.mode)})}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:(function(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str)}return flags}),flagsToPermissionString:(function(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf("r")!==-1&&!(node.mode&292)){return ERRNO_CODES.EACCES}else if(perms.indexOf("w")!==-1&&!(node.mode&146)){return ERRNO_CODES.EACCES}else if(perms.indexOf("x")!==-1&&!(node.mode&73)){return ERRNO_CODES.EACCES}return 0}),mayLookup:(function(dir){var err=FS.nodePermissions(dir,"x");if(err)return err;if(!dir.node_ops.lookup)return ERRNO_CODES.EACCES;return 0}),mayCreate:(function(dir,name){try{var node=FS.lookupNode(dir,name);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(dir,"wx")}),mayDelete:(function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,"wx");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return ERRNO_CODES.EISDIR}}return 0}),mayOpen:(function(node,flags){if(!node){return ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return ERRNO_CODES.ELOOP}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return ERRNO_CODES.EISDIR}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return this.flags&1024})}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream}),closeStream:(function(fd){FS.streams[fd]=null}),chrdev_stream_ops:{open:(function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return dev>>8}),minor:(function(dev){return dev&255}),makedev:(function(ma,mi){return ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return FS.devices[dev]}),getMounts:(function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts}),syncfs:(function(populate,callback){if(typeof populate==="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot}),unmount:(function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)}),mkdirTree:(function(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=ERRNO_CODES.EEXIST)throw e}}}),mkdev:(function(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!old_dir||!new_dir)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(ERRNO_CODES.EXDEV)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,"w");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path)}}catch(e){console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path)}catch(e){console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}}),rmdir:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return node.node_ops.readdir(node)}),unlink:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readlink:(function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!link.node_ops.readlink){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return PATH.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))}),stat:(function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!node.node_ops.getattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return node.node_ops.getattr(node)}),lstat:(function(path){return FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.nodePermissions(node,"w");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;err("read file: "+path)}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate["onOpenFile"](path,trackingFlags)}}catch(e){console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message)}return stream}),close:(function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null}),isClosed:(function(stream){return stream.fd===null}),llseek:(function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path)}catch(e){console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: "+e.message)}return bytesWritten}),allocate:(function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(offset<0||length<=0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)}),munmap:(function(stream){return 0}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}return stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||"r";opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||"w";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==="string"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error("Unsupported data type")}FS.close(stream)}),cwd:(function(){return FS.currentPath}),chdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var err=FS.nodePermissions(lookup.node,"x");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")}),createDefaultDevices:(function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:(function(){return 0}),write:(function(stream,buffer,offset,length,pos){return length})});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device;if(typeof crypto!=="undefined"){var randomBuffer=new Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]})}else if(ENVIRONMENT_IS_NODE){random_device=(function(){return require("crypto")["randomBytes"](1)[0]})}else{random_device=(function(){abort("random_device")})}FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")}),createSpecialDirectories:(function(){FS.mkdir("/proc");FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount:(function(){var node=FS.createNode("/proc/self","fd",16384|511,73);node.node_ops={lookup:(function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:(function(){return stream.path})}};ret.parent=ret;return ret})};return node})},{},"/proc/self/fd")}),createStandardStreams:(function(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin","r");assert(stdin.fd===0,"invalid handle for stdin ("+stdin.fd+")");var stdout=FS.open("/dev/stdout","w");assert(stdout.fd===1,"invalid handle for stdout ("+stdout.fd+")");var stderr=FS.open("/dev/stderr","w");assert(stderr.fd===2,"invalid handle for stderr ("+stderr.fd+")")}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=(function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}});this.setErrno(errno);this.message=ERRNO_MESSAGES[errno];if(this.stack)Object.defineProperty(this,"stack",{value:(new Error).stack,writable:true})};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS,"IDBFS":IDBFS,"NODEFS":NODEFS,"WORKERFS":WORKERFS}}),init:(function(input,output,error){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;var fflush=Module["_fflush"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode}),joinPath:(function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]=="/")path=path.substr(1);return path}),absolutePath:(function(relative,base){return PATH.resolve(base,relative)}),standardizePath:(function(path){return PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}}),analyzePath:(function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret}),createFolder:(function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current}),createFile:(function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,"w");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node}),createDevice:(function(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})});return FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);return FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(Module["read"]){try{obj.contents=intArrayFromString(Module["read"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(function(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||"",true)}});var lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]}));if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._length})},chunkSize:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize})}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:(function(){return this.contents.length})}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach((function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return fn.apply(null,arguments)}}));stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module["preloadPlugins"].forEach((function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency(dep)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return"EM_FS_"+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:(function(dirfd,path){if(path[0]!=="/"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir=dirstream.path}path=PATH.join2(dir,path)}return path}),doStat:(function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-ERRNO_CODES.ENOTDIR}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;HEAP32[buf+36>>2]=stat.size;HEAP32[buf+40>>2]=4096;HEAP32[buf+44>>2]=stat.blocks;HEAP32[buf+48>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+52>>2]=0;HEAP32[buf+56>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ino;return 0}),doMsync:(function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)}),doMkdir:(function(path,mode){path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0}),doMknod:(function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ERRNO_CODES.EINVAL}FS.mknod(path,mode,dev);return 0}),doReadlink:(function(path,buf,bufsize){if(bufsize<=0)return-ERRNO_CODES.EINVAL;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len}),doAccess:(function(path,amode){if(amode&~7){return-ERRNO_CODES.EINVAL}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-ERRNO_CODES.EACCES}return 0}),doDup:(function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd}),doReadv:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret}),doWritev:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),getStreamFromFD:(function(){var stream=FS.getStream(SYSCALLS.get());if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream}),getSocketFromFD:(function(){var socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket}),getSocketAddress:(function(allowNull){var addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return null;var info=__read_sockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall10(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr();FS.unlink(path);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall145(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doReadv(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall183(which,varargs){SYSCALLS.varargs=varargs;try{var buf=SYSCALLS.get(),size=SYSCALLS.get();if(size===0)return-ERRNO_CODES.EINVAL;var cwd=FS.cwd();var cwdLengthInBytes=lengthBytesUTF8(cwd);if(size<cwdLengthInBytes+1)return-ERRNO_CODES.ERANGE;stringToUTF8(cwd,buf,size);return buf}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall194(which,varargs){SYSCALLS.varargs=varargs;try{var fd=SYSCALLS.get(),zero=SYSCALLS.getZero(),length=SYSCALLS.get64();FS.ftruncate(fd,length);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall195(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),buf=SYSCALLS.get();return SYSCALLS.doStat(FS.stat,path,buf)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall197(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),buf=SYSCALLS.get();return SYSCALLS.doStat(FS.stat,stream.path,buf)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall220(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),dirp=SYSCALLS.get(),count=SYSCALLS.get();if(!stream.getdents){stream.getdents=FS.readdir(stream.path)}var pos=0;while(stream.getdents.length>0&&pos+268<=count){var id;var type;var name=stream.getdents.pop();if(name[0]==="."){id=1;type=4}else{var child=FS.lookupNode(stream.node,name);id=child.id;type=FS.isChrdev(child.mode)?2:FS.isDir(child.mode)?4:FS.isLink(child.mode)?10:8}HEAP32[dirp+pos>>2]=id;HEAP32[dirp+pos+4>>2]=stream.position;HEAP16[dirp+pos+8>>1]=268;HEAP8[dirp+pos+10>>0]=type;stringToUTF8(name,dirp+pos+11,256);pos+=268}return pos}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall221(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),cmd=SYSCALLS.get();switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-ERRNO_CODES.EINVAL}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd};case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0};case 12:case 12:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0};case 13:case 14:case 13:case 14:return 0;case 16:case 8:return-ERRNO_CODES.EINVAL;case 9:___setErrNo(ERRNO_CODES.EINVAL);return-1;default:{return-ERRNO_CODES.EINVAL}}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall33(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),amode=SYSCALLS.get();return SYSCALLS.doAccess(path,amode)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall38(which,varargs){SYSCALLS.varargs=varargs;try{var old_path=SYSCALLS.getStr(),new_path=SYSCALLS.getStr();FS.rename(old_path,new_path);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall39(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),mode=SYSCALLS.get();return SYSCALLS.doMkdir(path,mode)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall4(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),buf=SYSCALLS.get(),count=SYSCALLS.get();return FS.write(stream,HEAP8,buf,count)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall40(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr();FS.rmdir(path);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall5(which,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case 21509:case 21505:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21519:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0};case 21520:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return-ERRNO_CODES.EINVAL};case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)};case 21523:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21524:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};default:abort("bad ioctl syscall "+op)}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall91(which,varargs){SYSCALLS.varargs=varargs;try{var addr=SYSCALLS.get(),len=SYSCALLS.get();var info=SYSCALLS.mappings[addr];if(!info)return 0;if(len===info.len){var stream=FS.getStream(info.fd);SYSCALLS.doMsync(addr,stream,len,info.flags);FS.munmap(stream);SYSCALLS.mappings[addr]=null;if(info.allocated){_free(info.malloc)}}return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___unlock(){}function _abort(){Module["abort"]()}function _emscripten_get_now(){abort()}function _emscripten_get_now_is_monotonic(){return ENVIRONMENT_IS_NODE||typeof dateNow!=="undefined"||(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&self["performance"]&&self["performance"]["now"]}function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if(clk_id===1&&_emscripten_get_now_is_monotonic()){now=_emscripten_get_now()}else{___setErrNo(ERRNO_CODES.EINVAL);return-1}HEAP32[tp>>2]=now/1e3|0;HEAP32[tp+4>>2]=now%1e3*1e3*1e3|0;return 0}var DLFCN={error:null,errorMsg:null,loadedLibs:{},loadedLibNames:{}};function _dlclose(handle){if(!DLFCN.loadedLibs[handle]){DLFCN.errorMsg="Tried to dlclose() unopened handle: "+handle;return 1}else{var lib_record=DLFCN.loadedLibs[handle];if(--lib_record.refcount==0){if(lib_record.module.cleanups){lib_record.module.cleanups.forEach((function(cleanup){cleanup()}))}delete DLFCN.loadedLibNames[lib_record.name];delete DLFCN.loadedLibs[handle]}return 0}}function _dlerror(){if(DLFCN.errorMsg===null){return 0}else{if(DLFCN.error)_free(DLFCN.error);var msgArr=intArrayFromString(DLFCN.errorMsg);DLFCN.error=allocate(msgArr,"i8",ALLOC_NORMAL);DLFCN.errorMsg=null;return DLFCN.error}}function _dlsym(handle,symbol){symbol=Pointer_stringify(symbol);if(!DLFCN.loadedLibs[handle]){DLFCN.errorMsg="Tried to dlsym() from an unopened handle: "+handle;return 0}else{var lib=DLFCN.loadedLibs[handle];symbol="_"+symbol;if(!lib.module.hasOwnProperty(symbol)){DLFCN.errorMsg='Tried to lookup unknown symbol "'+symbol+'" in dynamic lib: '+lib.name;return 0}else{var result=lib.module[symbol];if(typeof result==="function"){return addFunction(result)}return result}}}function _emscripten_set_main_loop_timing(mode,value){Browser.mainLoop.timingMode=mode;Browser.mainLoop.timingValue=value;if(!Browser.mainLoop.func){return 1}if(mode==0){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setTimeout(){var timeUntilNextTick=Math.max(0,Browser.mainLoop.tickStartTime+value-_emscripten_get_now())|0;setTimeout(Browser.mainLoop.runner,timeUntilNextTick)};Browser.mainLoop.method="timeout"}else if(mode==1){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_rAF(){Browser.requestAnimationFrame(Browser.mainLoop.runner)};Browser.mainLoop.method="rAF"}else if(mode==2){if(typeof setImmediate==="undefined"){var setImmediates=[];var emscriptenMainLoopMessageId="setimmediate";function Browser_setImmediate_messageHandler(event){if(event.data===emscriptenMainLoopMessageId||event.data.target===emscriptenMainLoopMessageId){event.stopPropagation();setImmediates.shift()()}}addEventListener("message",Browser_setImmediate_messageHandler,true);setImmediate=function Browser_emulated_setImmediate(func){setImmediates.push(func);if(ENVIRONMENT_IS_WORKER){if(Module["setImmediates"]===undefined)Module["setImmediates"]=[];Module["setImmediates"].push(func);postMessage({target:emscriptenMainLoopMessageId})}else postMessage(emscriptenMainLoopMessageId,"*")}}Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setImmediate(){setImmediate(Browser.mainLoop.runner)};Browser.mainLoop.method="immediate"}return 0}function _emscripten_set_main_loop(func,fps,simulateInfiniteLoop,arg,noSetTiming){Module["noExitRuntime"]=true;assert(!Browser.mainLoop.func,"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.");Browser.mainLoop.func=func;Browser.mainLoop.arg=arg;var browserIterationFunc;if(typeof arg!=="undefined"){browserIterationFunc=(function(){Module["dynCall_vi"](func,arg)})}else{browserIterationFunc=(function(){Module["dynCall_v"](func)})}var thisMainLoopId=Browser.mainLoop.currentlyRunningMainloop;Browser.mainLoop.runner=function Browser_mainLoop_runner(){if(ABORT)return;if(Browser.mainLoop.queue.length>0){var start=Date.now();var blocker=Browser.mainLoop.queue.shift();blocker.func(blocker.arg);if(Browser.mainLoop.remainingBlockers){var remaining=Browser.mainLoop.remainingBlockers;var next=remaining%1==0?remaining-1:Math.floor(remaining);if(blocker.counted){Browser.mainLoop.remainingBlockers=next}else{next=next+.5;Browser.mainLoop.remainingBlockers=(8*remaining+next)/9}}console.log('main loop blocker "'+blocker.name+'" took '+(Date.now()-start)+" ms");Browser.mainLoop.updateStatus();if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;setTimeout(Browser.mainLoop.runner,0);return}if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;Browser.mainLoop.currentFrameNumber=Browser.mainLoop.currentFrameNumber+1|0;if(Browser.mainLoop.timingMode==1&&Browser.mainLoop.timingValue>1&&Browser.mainLoop.currentFrameNumber%Browser.mainLoop.timingValue!=0){Browser.mainLoop.scheduler();return}else if(Browser.mainLoop.timingMode==0){Browser.mainLoop.tickStartTime=_emscripten_get_now()}if(Browser.mainLoop.method==="timeout"&&Module.ctx){err("Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!");Browser.mainLoop.method=""}Browser.mainLoop.runIter(browserIterationFunc);if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;if(typeof SDL==="object"&&SDL.audio&&SDL.audio.queueNewAudioData)SDL.audio.queueNewAudioData();Browser.mainLoop.scheduler()};if(!noSetTiming){if(fps&&fps>0)_emscripten_set_main_loop_timing(0,1e3/fps);else _emscripten_set_main_loop_timing(1,1);Browser.mainLoop.scheduler()}if(simulateInfiniteLoop){throw"SimulateInfiniteLoop"}}var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:(function(){Browser.mainLoop.scheduler=null;Browser.mainLoop.currentlyRunningMainloop++}),resume:(function(){Browser.mainLoop.currentlyRunningMainloop++;var timingMode=Browser.mainLoop.timingMode;var timingValue=Browser.mainLoop.timingValue;var func=Browser.mainLoop.func;Browser.mainLoop.func=null;_emscripten_set_main_loop(func,0,false,Browser.mainLoop.arg,true);_emscripten_set_main_loop_timing(timingMode,timingValue);Browser.mainLoop.scheduler()}),updateStatus:(function(){if(Module["setStatus"]){var message=Module["statusMessage"]||"Please wait...";var remaining=Browser.mainLoop.remainingBlockers;var expected=Browser.mainLoop.expectedBlockers;if(remaining){if(remaining<expected){Module["setStatus"](message+" ("+(expected-remaining)+"/"+expected+")")}else{Module["setStatus"](message)}}else{Module["setStatus"]("")}}}),runIter:(function(func){if(ABORT)return;if(Module["preMainLoop"]){var preRet=Module["preMainLoop"]();if(preRet===false){return}}try{func()}catch(e){if(e instanceof ExitStatus){return}else{if(e&&typeof e==="object"&&e.stack)err("exception thrown: "+[e,e.stack]);throw e}}if(Module["postMainLoop"])Module["postMainLoop"]()})},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:(function(){if(!Module["preloadPlugins"])Module["preloadPlugins"]=[];if(Browser.initted)return;Browser.initted=true;try{new Blob;Browser.hasBlobConstructor=true}catch(e){Browser.hasBlobConstructor=false;console.log("warning: no blob constructor, cannot create blobs with mimetypes")}Browser.BlobBuilder=typeof MozBlobBuilder!="undefined"?MozBlobBuilder:typeof WebKitBlobBuilder!="undefined"?WebKitBlobBuilder:!Browser.hasBlobConstructor?console.log("warning: no BlobBuilder"):null;Browser.URLObject=typeof window!="undefined"?window.URL?window.URL:window.webkitURL:undefined;if(!Module.noImageDecoding&&typeof Browser.URLObject==="undefined"){console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");Module.noImageDecoding=true}var imagePlugin={};imagePlugin["canHandle"]=function imagePlugin_canHandle(name){return!Module.noImageDecoding&&/\.(jpg|jpeg|png|bmp)$/i.test(name)};imagePlugin["handle"]=function imagePlugin_handle(byteArray,name,onload,onerror){var b=null;if(Browser.hasBlobConstructor){try{b=new Blob([byteArray],{type:Browser.getMimetype(name)});if(b.size!==byteArray.length){b=new Blob([(new Uint8Array(byteArray)).buffer],{type:Browser.getMimetype(name)})}}catch(e){warnOnce("Blob constructor present but fails: "+e+"; falling back to blob builder")}}if(!b){var bb=new Browser.BlobBuilder;bb.append((new Uint8Array(byteArray)).buffer);b=bb.getBlob()}var url=Browser.URLObject.createObjectURL(b);var img=new Image;img.onload=function img_onload(){assert(img.complete,"Image "+name+" could not be decoded");var canvas=document.createElement("canvas");canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext("2d");ctx.drawImage(img,0,0);Module["preloadedImages"][name]=canvas;Browser.URLObject.revokeObjectURL(url);if(onload)onload(byteArray)};img.onerror=function img_onerror(event){console.log("Image "+url+" could not be decoded");if(onerror)onerror()};img.src=url};Module["preloadPlugins"].push(imagePlugin);var audioPlugin={};audioPlugin["canHandle"]=function audioPlugin_canHandle(name){return!Module.noAudioDecoding&&name.substr(-4)in{".ogg":1,".wav":1,".mp3":1}};audioPlugin["handle"]=function audioPlugin_handle(byteArray,name,onload,onerror){var done=false;function finish(audio){if(done)return;done=true;Module["preloadedAudios"][name]=audio;if(onload)onload(byteArray)}function fail(){if(done)return;done=true;Module["preloadedAudios"][name]=new Audio;if(onerror)onerror()}if(Browser.hasBlobConstructor){try{var b=new Blob([byteArray],{type:Browser.getMimetype(name)})}catch(e){return fail()}var url=Browser.URLObject.createObjectURL(b);var audio=new Audio;audio.addEventListener("canplaythrough",(function(){finish(audio)}),false);audio.onerror=function audio_onerror(event){if(done)return;console.log("warning: browser could not fully decode audio "+name+", trying slower base64 approach");function encode64(data){var BASE="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var PAD="=";var ret="";var leftchar=0;var leftbits=0;for(var i=0;i<data.length;i++){leftchar=leftchar<<8|data[i];leftbits+=8;while(leftbits>=6){var curr=leftchar>>leftbits-6&63;leftbits-=6;ret+=BASE[curr]}}if(leftbits==2){ret+=BASE[(leftchar&3)<<4];ret+=PAD+PAD}else if(leftbits==4){ret+=BASE[(leftchar&15)<<2];ret+=PAD}return ret}audio.src="data:audio/x-"+name.substr(-3)+";base64,"+encode64(byteArray);finish(audio)};audio.src=url;Browser.safeSetTimeout((function(){finish(audio)}),1e4)}else{return fail()}};Module["preloadPlugins"].push(audioPlugin);function pointerLockChange(){Browser.pointerLock=document["pointerLockElement"]===Module["canvas"]||document["mozPointerLockElement"]===Module["canvas"]||document["webkitPointerLockElement"]===Module["canvas"]||document["msPointerLockElement"]===Module["canvas"]}var canvas=Module["canvas"];if(canvas){canvas.requestPointerLock=canvas["requestPointerLock"]||canvas["mozRequestPointerLock"]||canvas["webkitRequestPointerLock"]||canvas["msRequestPointerLock"]||(function(){});canvas.exitPointerLock=document["exitPointerLock"]||document["mozExitPointerLock"]||document["webkitExitPointerLock"]||document["msExitPointerLock"]||(function(){});canvas.exitPointerLock=canvas.exitPointerLock.bind(document);document.addEventListener("pointerlockchange",pointerLockChange,false);document.addEventListener("mozpointerlockchange",pointerLockChange,false);document.addEventListener("webkitpointerlockchange",pointerLockChange,false);document.addEventListener("mspointerlockchange",pointerLockChange,false);if(Module["elementPointerLock"]){canvas.addEventListener("click",(function(ev){if(!Browser.pointerLock&&Module["canvas"].requestPointerLock){Module["canvas"].requestPointerLock();ev.preventDefault()}}),false)}}}),createContext:(function(canvas,useWebGL,setInModule,webGLContextAttributes){if(useWebGL&&Module.ctx&&canvas==Module.canvas)return Module.ctx;var ctx;var contextHandle;if(useWebGL){var contextAttributes={antialias:false,alpha:false};if(webGLContextAttributes){for(var attribute in webGLContextAttributes){contextAttributes[attribute]=webGLContextAttributes[attribute]}}contextHandle=GL.createContext(canvas,contextAttributes);if(contextHandle){ctx=GL.getContext(contextHandle).GLctx}}else{ctx=canvas.getContext("2d")}if(!ctx)return null;if(setInModule){if(!useWebGL)assert(typeof GLctx==="undefined","cannot set in module if GLctx is used, but we are a non-GL context that would replace it");Module.ctx=ctx;if(useWebGL)GL.makeContextCurrent(contextHandle);Module.useWebGL=useWebGL;Browser.moduleContextCreatedCallbacks.forEach((function(callback){callback()}));Browser.init()}return ctx}),destroyContext:(function(canvas,useWebGL,setInModule){}),fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:(function(lockPointer,resizeCanvas,vrDevice){Browser.lockPointer=lockPointer;Browser.resizeCanvas=resizeCanvas;Browser.vrDevice=vrDevice;if(typeof Browser.lockPointer==="undefined")Browser.lockPointer=true;if(typeof Browser.resizeCanvas==="undefined")Browser.resizeCanvas=false;if(typeof Browser.vrDevice==="undefined")Browser.vrDevice=null;var canvas=Module["canvas"];function fullscreenChange(){Browser.isFullscreen=false;var canvasContainer=canvas.parentNode;if((document["fullscreenElement"]||document["mozFullScreenElement"]||document["msFullscreenElement"]||document["webkitFullscreenElement"]||document["webkitCurrentFullScreenElement"])===canvasContainer){canvas.exitFullscreen=document["exitFullscreen"]||document["cancelFullScreen"]||document["mozCancelFullScreen"]||document["msExitFullscreen"]||document["webkitCancelFullScreen"]||(function(){});canvas.exitFullscreen=canvas.exitFullscreen.bind(document);if(Browser.lockPointer)canvas.requestPointerLock();Browser.isFullscreen=true;if(Browser.resizeCanvas){Browser.setFullscreenCanvasSize()}else{Browser.updateCanvasDimensions(canvas)}}else{canvasContainer.parentNode.insertBefore(canvas,canvasContainer);canvasContainer.parentNode.removeChild(canvasContainer);if(Browser.resizeCanvas){Browser.setWindowedCanvasSize()}else{Browser.updateCanvasDimensions(canvas)}}if(Module["onFullScreen"])Module["onFullScreen"](Browser.isFullscreen);if(Module["onFullscreen"])Module["onFullscreen"](Browser.isFullscreen)}if(!Browser.fullscreenHandlersInstalled){Browser.fullscreenHandlersInstalled=true;document.addEventListener("fullscreenchange",fullscreenChange,false);document.addEventListener("mozfullscreenchange",fullscreenChange,false);document.addEventListener("webkitfullscreenchange",fullscreenChange,false);document.addEventListener("MSFullscreenChange",fullscreenChange,false)}var canvasContainer=document.createElement("div");canvas.parentNode.insertBefore(canvasContainer,canvas);canvasContainer.appendChild(canvas);canvasContainer.requestFullscreen=canvasContainer["requestFullscreen"]||canvasContainer["mozRequestFullScreen"]||canvasContainer["msRequestFullscreen"]||(canvasContainer["webkitRequestFullscreen"]?(function(){canvasContainer["webkitRequestFullscreen"](Element["ALLOW_KEYBOARD_INPUT"])}):null)||(canvasContainer["webkitRequestFullScreen"]?(function(){canvasContainer["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"])}):null);if(vrDevice){canvasContainer.requestFullscreen({vrDisplay:vrDevice})}else{canvasContainer.requestFullscreen()}}),requestFullScreen:(function(lockPointer,resizeCanvas,vrDevice){err("Browser.requestFullScreen() is deprecated. Please call Browser.requestFullscreen instead.");Browser.requestFullScreen=(function(lockPointer,resizeCanvas,vrDevice){return Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)});return Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)}),nextRAF:0,fakeRequestAnimationFrame:(function(func){var now=Date.now();if(Browser.nextRAF===0){Browser.nextRAF=now+1e3/60}else{while(now+2>=Browser.nextRAF){Browser.nextRAF+=1e3/60}}var delay=Math.max(Browser.nextRAF-now,0);setTimeout(func,delay)}),requestAnimationFrame:function requestAnimationFrame(func){if(typeof window==="undefined"){Browser.fakeRequestAnimationFrame(func)}else{if(!window.requestAnimationFrame){window.requestAnimationFrame=window["requestAnimationFrame"]||window["mozRequestAnimationFrame"]||window["webkitRequestAnimationFrame"]||window["msRequestAnimationFrame"]||window["oRequestAnimationFrame"]||Browser.fakeRequestAnimationFrame}window.requestAnimationFrame(func)}},safeCallback:(function(func){return(function(){if(!ABORT)return func.apply(null,arguments)})}),allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=false}),resumeAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=true;if(Browser.queuedAsyncCallbacks.length>0){var callbacks=Browser.queuedAsyncCallbacks;Browser.queuedAsyncCallbacks=[];callbacks.forEach((function(func){func()}))}}),safeRequestAnimationFrame:(function(func){return Browser.requestAnimationFrame((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}))}),safeSetTimeout:(function(func,timeout){Module["noExitRuntime"]=true;return setTimeout((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}),timeout)}),safeSetInterval:(function(func,timeout){Module["noExitRuntime"]=true;return setInterval((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}}),timeout)}),getMimetype:(function(name){return{"jpg":"image/jpeg","jpeg":"image/jpeg","png":"image/png","bmp":"image/bmp","ogg":"audio/ogg","wav":"audio/wav","mp3":"audio/mpeg"}[name.substr(name.lastIndexOf(".")+1)]}),getUserMedia:(function(func){if(!window.getUserMedia){window.getUserMedia=navigator["getUserMedia"]||navigator["mozGetUserMedia"]}window.getUserMedia(func)}),getMovementX:(function(event){return event["movementX"]||event["mozMovementX"]||event["webkitMovementX"]||0}),getMovementY:(function(event){return event["movementY"]||event["mozMovementY"]||event["webkitMovementY"]||0}),getMouseWheelDelta:(function(event){var delta=0;switch(event.type){case"DOMMouseScroll":delta=event.detail;break;case"mousewheel":delta=event.wheelDelta;break;case"wheel":delta=event["deltaY"];break;default:throw"unrecognized mouse wheel event: "+event.type}return delta}),mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:(function(event){if(Browser.pointerLock){if(event.type!="mousemove"&&"mozMovementX"in event){Browser.mouseMovementX=Browser.mouseMovementY=0}else{Browser.mouseMovementX=Browser.getMovementX(event);Browser.mouseMovementY=Browser.getMovementY(event)}if(typeof SDL!="undefined"){Browser.mouseX=SDL.mouseX+Browser.mouseMovementX;Browser.mouseY=SDL.mouseY+Browser.mouseMovementY}else{Browser.mouseX+=Browser.mouseMovementX;Browser.mouseY+=Browser.mouseMovementY}}else{var rect=Module["canvas"].getBoundingClientRect();var cw=Module["canvas"].width;var ch=Module["canvas"].height;var scrollX=typeof window.scrollX!=="undefined"?window.scrollX:window.pageXOffset;var scrollY=typeof window.scrollY!=="undefined"?window.scrollY:window.pageYOffset;if(event.type==="touchstart"||event.type==="touchend"||event.type==="touchmove"){var touch=event.touch;if(touch===undefined){return}var adjustedX=touch.pageX-(scrollX+rect.left);var adjustedY=touch.pageY-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);var coords={x:adjustedX,y:adjustedY};if(event.type==="touchstart"){Browser.lastTouches[touch.identifier]=coords;Browser.touches[touch.identifier]=coords}else if(event.type==="touchend"||event.type==="touchmove"){var last=Browser.touches[touch.identifier];if(!last)last=coords;Browser.lastTouches[touch.identifier]=last;Browser.touches[touch.identifier]=coords}return}var x=event.pageX-(scrollX+rect.left);var y=event.pageY-(scrollY+rect.top);x=x*(cw/rect.width);y=y*(ch/rect.height);Browser.mouseMovementX=x-Browser.mouseX;Browser.mouseMovementY=y-Browser.mouseY;Browser.mouseX=x;Browser.mouseY=y}}),asyncLoad:(function(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency("al "+url):"";Module["readAsync"](url,(function(arrayBuffer){assert(arrayBuffer,'Loading data file "'+url+'" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)}),(function(event){if(onerror){onerror()}else{throw'Loading data file "'+url+'" failed.'}}));if(dep)addRunDependency(dep)}),resizeListeners:[],updateResizeListeners:(function(){var canvas=Module["canvas"];Browser.resizeListeners.forEach((function(listener){listener(canvas.width,canvas.height)}))}),setCanvasSize:(function(width,height,noUpdates){var canvas=Module["canvas"];Browser.updateCanvasDimensions(canvas,width,height);if(!noUpdates)Browser.updateResizeListeners()}),windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:(function(){if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen>>2];flags=flags|8388608;HEAP32[SDL.screen>>2]=flags}Browser.updateCanvasDimensions(Module["canvas"]);Browser.updateResizeListeners()}),setWindowedCanvasSize:(function(){if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen>>2];flags=flags&~8388608;HEAP32[SDL.screen>>2]=flags}Browser.updateCanvasDimensions(Module["canvas"]);Browser.updateResizeListeners()}),updateCanvasDimensions:(function(canvas,wNative,hNative){if(wNative&&hNative){canvas.widthNative=wNative;canvas.heightNative=hNative}else{wNative=canvas.widthNative;hNative=canvas.heightNative}var w=wNative;var h=hNative;if(Module["forcedAspectRatio"]&&Module["forcedAspectRatio"]>0){if(w/h<Module["forcedAspectRatio"]){w=Math.round(h*Module["forcedAspectRatio"])}else{h=Math.round(w/Module["forcedAspectRatio"])}}if((document["fullscreenElement"]||document["mozFullScreenElement"]||document["msFullscreenElement"]||document["webkitFullscreenElement"]||document["webkitCurrentFullScreenElement"])===canvas.parentNode&&typeof screen!="undefined"){var factor=Math.min(screen.width/w,screen.height/h);w=Math.round(w*factor);h=Math.round(h*factor)}if(Browser.resizeCanvas){if(canvas.width!=w)canvas.width=w;if(canvas.height!=h)canvas.height=h;if(typeof canvas.style!="undefined"){canvas.style.removeProperty("width");canvas.style.removeProperty("height")}}else{if(canvas.width!=wNative)canvas.width=wNative;if(canvas.height!=hNative)canvas.height=hNative;if(typeof canvas.style!="undefined"){if(w!=wNative||h!=hNative){canvas.style.setProperty("width",w+"px","important");canvas.style.setProperty("height",h+"px","important")}else{canvas.style.removeProperty("width");canvas.style.removeProperty("height")}}}}),wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:(function(){var handle=Browser.nextWgetRequestHandle;Browser.nextWgetRequestHandle++;return handle})};var EGL={errorCode:12288,defaultDisplayInitialized:false,currentContext:0,currentReadSurface:0,currentDrawSurface:0,alpha:false,depth:true,stencil:true,antialias:true,stringCache:{},setErrorCode:(function(code){EGL.errorCode=code}),chooseConfig:(function(display,attribList,config,config_size,numConfigs){if(display!=62e3){EGL.setErrorCode(12296);return 0}for(;;){var param=HEAP32[attribList>>2];if(param==12321){var alphaSize=HEAP32[attribList+4>>2];EGL.alpha=alphaSize>0}else if(param==12325){var depthSize=HEAP32[attribList+4>>2];EGL.depth=depthSize>0}else if(param==12326){var stencilSize=HEAP32[attribList+4>>2];EGL.stencil=stencilSize>0}else if(param==12337){var samples=HEAP32[attribList+4>>2];EGL.antialias=samples>0}else if(param==12338){var samples=HEAP32[attribList+4>>2];EGL.antialias=samples==1}else if(param==12344){break}attribList+=8}if((!config||!config_size)&&!numConfigs){EGL.setErrorCode(12300);return 0}if(numConfigs){HEAP32[numConfigs>>2]=1}if(config&&config_size>0){HEAP32[config>>2]=62002}EGL.setErrorCode(12288);return 1})};function _eglBindAPI(api){if(api==12448){EGL.setErrorCode(12288);return 1}else{EGL.setErrorCode(12300);return 0}}function _eglChooseConfig(display,attrib_list,configs,config_size,numConfigs){return EGL.chooseConfig(display,attrib_list,configs,config_size,numConfigs)}var GLUT={initTime:null,idleFunc:null,displayFunc:null,keyboardFunc:null,keyboardUpFunc:null,specialFunc:null,specialUpFunc:null,reshapeFunc:null,motionFunc:null,passiveMotionFunc:null,mouseFunc:null,buttons:0,modifiers:0,initWindowWidth:256,initWindowHeight:256,initDisplayMode:18,windowX:0,windowY:0,windowWidth:0,windowHeight:0,requestedAnimationFrame:false,saveModifiers:(function(event){GLUT.modifiers=0;if(event["shiftKey"])GLUT.modifiers+=1;if(event["ctrlKey"])GLUT.modifiers+=2;if(event["altKey"])GLUT.modifiers+=4}),onMousemove:(function(event){var lastX=Browser.mouseX;var lastY=Browser.mouseY;Browser.calculateMouseEvent(event);var newX=Browser.mouseX;var newY=Browser.mouseY;if(newX==lastX&&newY==lastY)return;if(GLUT.buttons==0&&event.target==Module["canvas"]&&GLUT.passiveMotionFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_vii"](GLUT.passiveMotionFunc,lastX,lastY)}else if(GLUT.buttons!=0&&GLUT.motionFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_vii"](GLUT.motionFunc,lastX,lastY)}}),getSpecialKey:(function(keycode){var key=null;switch(keycode){case 8:key=120;break;case 46:key=111;break;case 112:key=1;break;case 113:key=2;break;case 114:key=3;break;case 115:key=4;break;case 116:key=5;break;case 117:key=6;break;case 118:key=7;break;case 119:key=8;break;case 120:key=9;break;case 121:key=10;break;case 122:key=11;break;case 123:key=12;break;case 37:key=100;break;case 38:key=101;break;case 39:key=102;break;case 40:key=103;break;case 33:key=104;break;case 34:key=105;break;case 36:key=106;break;case 35:key=107;break;case 45:key=108;break;case 16:case 5:key=112;break;case 6:key=113;break;case 17:case 3:key=114;break;case 4:key=115;break;case 18:case 2:key=116;break;case 1:key=117;break}return key}),getASCIIKey:(function(event){if(event["ctrlKey"]||event["altKey"]||event["metaKey"])return null;var keycode=event["keyCode"];if(48<=keycode&&keycode<=57)return keycode;if(65<=keycode&&keycode<=90)return event["shiftKey"]?keycode:keycode+32;if(96<=keycode&&keycode<=105)return keycode-48;if(106<=keycode&&keycode<=111)return keycode-106+42;switch(keycode){case 9:case 13:case 27:case 32:case 61:return keycode}var s=event["shiftKey"];switch(keycode){case 186:return s?58:59;case 187:return s?43:61;case 188:return s?60:44;case 189:return s?95:45;case 190:return s?62:46;case 191:return s?63:47;case 219:return s?123:91;case 220:return s?124:47;case 221:return s?125:93;case 222:return s?34:39}return null}),onKeydown:(function(event){if(GLUT.specialFunc||GLUT.keyboardFunc){var key=GLUT.getSpecialKey(event["keyCode"]);if(key!==null){if(GLUT.specialFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_viii"](GLUT.specialFunc,key,Browser.mouseX,Browser.mouseY)}}else{key=GLUT.getASCIIKey(event);if(key!==null&&GLUT.keyboardFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_viii"](GLUT.keyboardFunc,key,Browser.mouseX,Browser.mouseY)}}}}),onKeyup:(function(event){if(GLUT.specialUpFunc||GLUT.keyboardUpFunc){var key=GLUT.getSpecialKey(event["keyCode"]);if(key!==null){if(GLUT.specialUpFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_viii"](GLUT.specialUpFunc,key,Browser.mouseX,Browser.mouseY)}}else{key=GLUT.getASCIIKey(event);if(key!==null&&GLUT.keyboardUpFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_viii"](GLUT.keyboardUpFunc,key,Browser.mouseX,Browser.mouseY)}}}}),touchHandler:(function(event){if(event.target!=Module["canvas"]){return}var touches=event.changedTouches,main=touches[0],type="";switch(event.type){case"touchstart":type="mousedown";break;case"touchmove":type="mousemove";break;case"touchend":type="mouseup";break;default:return}var simulatedEvent=document.createEvent("MouseEvent");simulatedEvent.initMouseEvent(type,true,true,window,1,main.screenX,main.screenY,main.clientX,main.clientY,false,false,false,false,0,null);main.target.dispatchEvent(simulatedEvent);event.preventDefault()}),onMouseButtonDown:(function(event){Browser.calculateMouseEvent(event);GLUT.buttons|=1<<event["button"];if(event.target==Module["canvas"]&&GLUT.mouseFunc){try{event.target.setCapture()}catch(e){}event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_viiii"](GLUT.mouseFunc,event["button"],0,Browser.mouseX,Browser.mouseY)}}),onMouseButtonUp:(function(event){Browser.calculateMouseEvent(event);GLUT.buttons&=~(1<<event["button"]);if(GLUT.mouseFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_viiii"](GLUT.mouseFunc,event["button"],1,Browser.mouseX,Browser.mouseY)}}),onMouseWheel:(function(event){Browser.calculateMouseEvent(event);var e=window.event||event;var delta=-Browser.getMouseWheelDelta(event);delta=delta==0?0:delta>0?Math.max(delta,1):Math.min(delta,-1);var button=3;if(delta<0){button=4}if(GLUT.mouseFunc){event.preventDefault();GLUT.saveModifiers(event);Module["dynCall_viiii"](GLUT.mouseFunc,button,0,Browser.mouseX,Browser.mouseY)}}),onFullscreenEventChange:(function(event){var width;var height;if(document["fullscreen"]||document["fullScreen"]||document["mozFullScreen"]||document["webkitIsFullScreen"]){width=screen["width"];height=screen["height"]}else{width=GLUT.windowWidth;height=GLUT.windowHeight;document.removeEventListener("fullscreenchange",GLUT.onFullscreenEventChange,true);document.removeEventListener("mozfullscreenchange",GLUT.onFullscreenEventChange,true);document.removeEventListener("webkitfullscreenchange",GLUT.onFullscreenEventChange,true)}Browser.setCanvasSize(width,height,true);if(GLUT.reshapeFunc){Module["dynCall_vii"](GLUT.reshapeFunc,width,height)}_glutPostRedisplay()}),requestFullscreen:(function(){Browser.requestFullscreen(false,false)}),requestFullScreen:(function(){err("GLUT.requestFullScreen() is deprecated. Please call GLUT.requestFullscreen instead.");GLUT.requestFullScreen=(function(){return GLUT.requestFullscreen()});return GLUT.requestFullscreen()}),exitFullscreen:(function(){var CFS=document["exitFullscreen"]||document["cancelFullScreen"]||document["mozCancelFullScreen"]||document["webkitCancelFullScreen"]||(function(){});CFS.apply(document,[])}),cancelFullScreen:(function(){err("GLUT.cancelFullScreen() is deprecated. Please call GLUT.exitFullscreen instead.");GLUT.cancelFullScreen=(function(){return GLUT.exitFullscreen()});return GLUT.exitFullscreen()})};function _glutInitDisplayMode(mode){GLUT.initDisplayMode=mode}function _glutCreateWindow(name){var contextAttributes={antialias:(GLUT.initDisplayMode&128)!=0,depth:(GLUT.initDisplayMode&16)!=0,stencil:(GLUT.initDisplayMode&32)!=0,alpha:(GLUT.initDisplayMode&8)!=0};Module.ctx=Browser.createContext(Module["canvas"],true,true,contextAttributes);return Module.ctx?1:0}var GL={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:[],currentContext:null,offscreenCanvases:{},timerQueriesEXT:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],programInfos:{},stringCache:{},tempFixedLengthArray:[],packAlignment:4,unpackAlignment:4,init:(function(){GL.miniTempBuffer=new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);for(var i=0;i<GL.MINI_TEMP_BUFFER_SIZE;i++){GL.miniTempBufferViews[i]=GL.miniTempBuffer.subarray(0,i+1)}for(var i=0;i<32;i++){GL.tempFixedLengthArray.push(new Array(i))}}),recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode}},getNewId:(function(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null}return ret}),MINI_TEMP_BUFFER_SIZE:256,miniTempBuffer:null,miniTempBufferViews:[0],getSource:(function(shader,count,string,length){var source="";for(var i=0;i<count;++i){var frag;if(length){var len=HEAP32[length+i*4>>2];if(len<0){frag=Pointer_stringify(HEAP32[string+i*4>>2])}else{frag=Pointer_stringify(HEAP32[string+i*4>>2],len)}}else{frag=Pointer_stringify(HEAP32[string+i*4>>2])}source+=frag}return source}),createContext:(function(canvas,webGLContextAttributes){if(typeof webGLContextAttributes["majorVersion"]==="undefined"&&typeof webGLContextAttributes["minorVersion"]==="undefined"){webGLContextAttributes["majorVersion"]=1;webGLContextAttributes["minorVersion"]=0}var ctx;var errorInfo="?";function onContextCreationError(event){errorInfo=event.statusMessage||errorInfo}try{canvas.addEventListener("webglcontextcreationerror",onContextCreationError,false);try{if(webGLContextAttributes["majorVersion"]==1&&webGLContextAttributes["minorVersion"]==0){ctx=canvas.getContext("webgl",webGLContextAttributes)||canvas.getContext("experimental-webgl",webGLContextAttributes)}else if(webGLContextAttributes["majorVersion"]==2&&webGLContextAttributes["minorVersion"]==0){ctx=canvas.getContext("webgl2",webGLContextAttributes)}else{throw"Unsupported WebGL context version "+majorVersion+"."+minorVersion+"!"}}finally{canvas.removeEventListener("webglcontextcreationerror",onContextCreationError,false)}if(!ctx)throw":("}catch(e){return 0}if(!ctx)return 0;var context=GL.registerContext(ctx,webGLContextAttributes);return context}),registerContext:(function(ctx,webGLContextAttributes){var handle=GL.getNewId(GL.contexts);var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes["majorVersion"],GLctx:ctx};if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes["enableExtensionsByDefault"]==="undefined"||webGLContextAttributes["enableExtensionsByDefault"]){GL.initExtensions(context)}return handle}),makeContextCurrent:(function(contextHandle){var context=GL.contexts[contextHandle];if(!context)return false;GLctx=Module.ctx=context.GLctx;GL.currentContext=context;return true}),getContext:(function(contextHandle){return GL.contexts[contextHandle]}),deleteContext:(function(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(typeof JSEvents==="object")JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;GL.contexts[contextHandle]=null}),initExtensions:(function(context){if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;if(context.version<2){var instancedArraysExt=GLctx.getExtension("ANGLE_instanced_arrays");if(instancedArraysExt){GLctx["vertexAttribDivisor"]=(function(index,divisor){instancedArraysExt["vertexAttribDivisorANGLE"](index,divisor)});GLctx["drawArraysInstanced"]=(function(mode,first,count,primcount){instancedArraysExt["drawArraysInstancedANGLE"](mode,first,count,primcount)});GLctx["drawElementsInstanced"]=(function(mode,count,type,indices,primcount){instancedArraysExt["drawElementsInstancedANGLE"](mode,count,type,indices,primcount)})}var vaoExt=GLctx.getExtension("OES_vertex_array_object");if(vaoExt){GLctx["createVertexArray"]=(function(){return vaoExt["createVertexArrayOES"]()});GLctx["deleteVertexArray"]=(function(vao){vaoExt["deleteVertexArrayOES"](vao)});GLctx["bindVertexArray"]=(function(vao){vaoExt["bindVertexArrayOES"](vao)});GLctx["isVertexArray"]=(function(vao){return vaoExt["isVertexArrayOES"](vao)})}var drawBuffersExt=GLctx.getExtension("WEBGL_draw_buffers");if(drawBuffersExt){GLctx["drawBuffers"]=(function(n,bufs){drawBuffersExt["drawBuffersWEBGL"](n,bufs)})}}GLctx.disjointTimerQueryExt=GLctx.getExtension("EXT_disjoint_timer_query");var automaticallyEnabledExtensions=["OES_texture_float","OES_texture_half_float","OES_standard_derivatives","OES_vertex_array_object","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","OES_element_index_uint","EXT_texture_filter_anisotropic","EXT_frag_depth","WEBGL_draw_buffers","ANGLE_instanced_arrays","OES_texture_float_linear","OES_texture_half_float_linear","EXT_blend_minmax","EXT_shader_texture_lod","WEBGL_compressed_texture_pvrtc","EXT_color_buffer_half_float","WEBGL_color_buffer_float","EXT_sRGB","WEBGL_compressed_texture_etc1","EXT_disjoint_timer_query","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_astc","EXT_color_buffer_float","WEBGL_compressed_texture_s3tc_srgb","EXT_disjoint_timer_query_webgl2"];var exts=GLctx.getSupportedExtensions();if(exts&&exts.length>0){GLctx.getSupportedExtensions().forEach((function(ext){if(automaticallyEnabledExtensions.indexOf(ext)!=-1){GLctx.getExtension(ext)}}))}}),populateUniformTable:(function(program){var p=GL.programs[program];GL.programInfos[program]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1};var ptable=GL.programInfos[program];var utable=ptable.uniforms;var numUniforms=GLctx.getProgramParameter(p,GLctx.ACTIVE_UNIFORMS);for(var i=0;i<numUniforms;++i){var u=GLctx.getActiveUniform(p,i);var name=u.name;ptable.maxUniformLength=Math.max(ptable.maxUniformLength,name.length+1);if(name.indexOf("]",name.length-1)!==-1){var ls=name.lastIndexOf("[");name=name.slice(0,ls)}var loc=GLctx.getUniformLocation(p,name);if(loc!=null){var id=GL.getNewId(GL.uniforms);utable[name]=[u.size,id];GL.uniforms[id]=loc;for(var j=1;j<u.size;++j){var n=name+"["+j+"]";loc=GLctx.getUniformLocation(p,n);id=GL.getNewId(GL.uniforms);GL.uniforms[id]=loc}}}})};function _eglCreateContext(display,config,hmm,contextAttribs){if(display!=62e3){EGL.setErrorCode(12296);return 0}var glesContextVersion=1;for(;;){var param=HEAP32[contextAttribs>>2];if(param==12440){glesContextVersion=HEAP32[contextAttribs+4>>2]}else if(param==12344){break}else{EGL.setErrorCode(12292);return 0}contextAttribs+=8}if(glesContextVersion!=2){EGL.setErrorCode(12293);return 0}var displayMode=0;displayMode|=2;if(EGL.alpha)displayMode|=8;if(EGL.depth)displayMode|=16;if(EGL.stencil)displayMode|=32;if(EGL.antialias)displayMode|=128;_glutInitDisplayMode(displayMode);EGL.windowID=_glutCreateWindow();if(EGL.windowID!=0){EGL.setErrorCode(12288);return 62004}else{EGL.setErrorCode(12297);return 0}}function _eglCreateWindowSurface(display,config,win,attrib_list){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(config!=62002){EGL.setErrorCode(12293);return 0}EGL.setErrorCode(12288);return 62006}function _eglDestroyContext(display,context){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(context!=62004){EGL.setErrorCode(12294);return 0}EGL.setErrorCode(12288);return 1}function _eglDestroySurface(display,surface){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(surface!=62006){EGL.setErrorCode(12301);return 1}if(EGL.currentReadSurface==surface){EGL.currentReadSurface=0}if(EGL.currentDrawSurface==surface){EGL.currentDrawSurface=0}EGL.setErrorCode(12288);return 1}function _eglGetConfigAttrib(display,config,attribute,value){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(config!=62002){EGL.setErrorCode(12293);return 0}if(!value){EGL.setErrorCode(12300);return 0}EGL.setErrorCode(12288);switch(attribute){case 12320:HEAP32[value>>2]=32;return 1;case 12321:HEAP32[value>>2]=8;return 1;case 12322:HEAP32[value>>2]=8;return 1;case 12323:HEAP32[value>>2]=8;return 1;case 12324:HEAP32[value>>2]=8;return 1;case 12325:HEAP32[value>>2]=24;return 1;case 12326:HEAP32[value>>2]=8;return 1;case 12327:HEAP32[value>>2]=12344;return 1;case 12328:HEAP32[value>>2]=62002;return 1;case 12329:HEAP32[value>>2]=0;return 1;case 12330:HEAP32[value>>2]=4096;return 1;case 12331:HEAP32[value>>2]=16777216;return 1;case 12332:HEAP32[value>>2]=4096;return 1;case 12333:HEAP32[value>>2]=0;return 1;case 12334:HEAP32[value>>2]=0;return 1;case 12335:HEAP32[value>>2]=12344;return 1;case 12337:HEAP32[value>>2]=4;return 1;case 12338:HEAP32[value>>2]=1;return 1;case 12339:HEAP32[value>>2]=4;return 1;case 12340:HEAP32[value>>2]=12344;return 1;case 12341:case 12342:case 12343:HEAP32[value>>2]=-1;return 1;case 12345:case 12346:HEAP32[value>>2]=0;return 1;case 12347:case 12348:HEAP32[value>>2]=1;return 1;case 12349:case 12350:HEAP32[value>>2]=0;return 1;case 12351:HEAP32[value>>2]=12430;return 1;case 12352:HEAP32[value>>2]=4;return 1;case 12354:HEAP32[value>>2]=0;return 1;default:EGL.setErrorCode(12292);return 0}}function _eglGetDisplay(nativeDisplayType){EGL.setErrorCode(12288);return 62e3}function _eglGetProcAddress(name_){return _emscripten_GetProcAddress(name_)}function _eglInitialize(display,majorVersion,minorVersion){if(display==62e3){if(majorVersion){HEAP32[majorVersion>>2]=1}if(minorVersion){HEAP32[minorVersion>>2]=4}EGL.defaultDisplayInitialized=true;EGL.setErrorCode(12288);return 1}else{EGL.setErrorCode(12296);return 0}}function _eglMakeCurrent(display,draw,read,context){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(context!=0&&context!=62004){EGL.setErrorCode(12294);return 0}if(read!=0&&read!=62006||draw!=0&&draw!=62006){EGL.setErrorCode(12301);return 0}EGL.currentContext=context;EGL.currentDrawSurface=draw;EGL.currentReadSurface=read;EGL.setErrorCode(12288);return 1}function _eglSwapBuffers(){if(!EGL.defaultDisplayInitialized){EGL.setErrorCode(12289)}else if(!Module.ctx){EGL.setErrorCode(12290)}else if(Module.ctx.isContextLost()){EGL.setErrorCode(12302)}else{EGL.setErrorCode(12288);return 1}return 0}function _eglSwapInterval(display,interval){if(display!=62e3){EGL.setErrorCode(12296);return 0}if(interval==0)_emscripten_set_main_loop_timing(0,0);else _emscripten_set_main_loop_timing(1,interval);EGL.setErrorCode(12288);return 1}function _eglTerminate(display){if(display!=62e3){EGL.setErrorCode(12296);return 0}EGL.currentContext=0;EGL.currentReadSurface=0;EGL.currentDrawSurface=0;EGL.defaultDisplayInitialized=false;EGL.setErrorCode(12288);return 1}function _eglWaitClient(){EGL.setErrorCode(12288);return 1}function _eglWaitGL(){return _eglWaitClient.apply(null,arguments)}function _eglWaitNative(nativeEngineId){EGL.setErrorCode(12288);return 1}function _emscripten_cancel_main_loop(){Browser.mainLoop.pause();Browser.mainLoop.func=null}var JSEvents={keyEvent:0,mouseEvent:0,wheelEvent:0,uiEvent:0,focusEvent:0,deviceOrientationEvent:0,deviceMotionEvent:0,fullscreenChangeEvent:0,pointerlockChangeEvent:0,visibilityChangeEvent:0,touchEvent:0,lastGamepadState:null,lastGamepadStateFrame:null,numGamepadsConnected:0,previousFullscreenElement:null,previousScreenX:null,previousScreenY:null,removeEventListenersRegistered:false,staticInit:(function(){if(typeof window!=="undefined"){window.addEventListener("gamepadconnected",(function(){++JSEvents.numGamepadsConnected}));window.addEventListener("gamepaddisconnected",(function(){--JSEvents.numGamepadsConnected}));var firstState=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads():null;if(firstState){JSEvents.numGamepadsConnected=firstState.length}}}),registerRemoveEventListeners:(function(){if(!JSEvents.removeEventListenersRegistered){__ATEXIT__.push((function(){for(var i=JSEvents.eventHandlers.length-1;i>=0;--i){JSEvents._removeHandler(i)}}));JSEvents.removeEventListenersRegistered=true}}),findEventTarget:(function(target){if(target){if(typeof target=="number"){target=Pointer_stringify(target)}if(target=="#window")return window;else if(target=="#document")return document;else if(target=="#screen")return window.screen;else if(target=="#canvas")return Module["canvas"];if(typeof target=="string")return document.getElementById(target);else return target}else{return window}}),deferredCalls:[],deferCall:(function(targetFunction,precedence,argsList){function arraysHaveEqualContent(arrA,arrB){if(arrA.length!=arrB.length)return false;for(var i in arrA){if(arrA[i]!=arrB[i])return false}return true}for(var i in JSEvents.deferredCalls){var call=JSEvents.deferredCalls[i];if(call.targetFunction==targetFunction&&arraysHaveEqualContent(call.argsList,argsList)){return}}JSEvents.deferredCalls.push({targetFunction:targetFunction,precedence:precedence,argsList:argsList});JSEvents.deferredCalls.sort((function(x,y){return x.precedence<y.precedence}))}),removeDeferredCalls:(function(targetFunction){for(var i=0;i<JSEvents.deferredCalls.length;++i){if(JSEvents.deferredCalls[i].targetFunction==targetFunction){JSEvents.deferredCalls.splice(i,1);--i}}}),canPerformEventHandlerRequests:(function(){return JSEvents.inEventHandler&&JSEvents.currentEventHandler.allowsDeferredCalls}),runDeferredCalls:(function(){if(!JSEvents.canPerformEventHandlerRequests()){return}for(var i=0;i<JSEvents.deferredCalls.length;++i){var call=JSEvents.deferredCalls[i];JSEvents.deferredCalls.splice(i,1);--i;call.targetFunction.apply(this,call.argsList)}}),inEventHandler:0,currentEventHandler:null,eventHandlers:[],isInternetExplorer:(function(){return navigator.userAgent.indexOf("MSIE")!==-1||navigator.appVersion.indexOf("Trident/")>0}),removeAllHandlersOnTarget:(function(target,eventTypeString){for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==target&&(!eventTypeString||eventTypeString==JSEvents.eventHandlers[i].eventTypeString)){JSEvents._removeHandler(i--)}}}),_removeHandler:(function(i){var h=JSEvents.eventHandlers[i];h.target.removeEventListener(h.eventTypeString,h.eventListenerFunc,h.useCapture);JSEvents.eventHandlers.splice(i,1)}),registerOrRemoveHandler:(function(eventHandler){var jsEventHandler=function jsEventHandler(event){++JSEvents.inEventHandler;JSEvents.currentEventHandler=eventHandler;JSEvents.runDeferredCalls();eventHandler.handlerFunc(event);JSEvents.runDeferredCalls();--JSEvents.inEventHandler};if(eventHandler.callbackfunc){eventHandler.eventListenerFunc=jsEventHandler;eventHandler.target.addEventListener(eventHandler.eventTypeString,jsEventHandler,eventHandler.useCapture);JSEvents.eventHandlers.push(eventHandler);JSEvents.registerRemoveEventListeners()}else{for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==eventHandler.target&&JSEvents.eventHandlers[i].eventTypeString==eventHandler.eventTypeString){JSEvents._removeHandler(i--)}}}}),registerKeyEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!JSEvents.keyEvent){JSEvents.keyEvent=_malloc(164)}var handlerFunc=(function(event){var e=event||window.event;stringToUTF8(e.key?e.key:"",JSEvents.keyEvent+0,32);stringToUTF8(e.code?e.code:"",JSEvents.keyEvent+32,32);HEAP32[JSEvents.keyEvent+64>>2]=e.location;HEAP32[JSEvents.keyEvent+68>>2]=e.ctrlKey;HEAP32[JSEvents.keyEvent+72>>2]=e.shiftKey;HEAP32[JSEvents.keyEvent+76>>2]=e.altKey;HEAP32[JSEvents.keyEvent+80>>2]=e.metaKey;HEAP32[JSEvents.keyEvent+84>>2]=e.repeat;stringToUTF8(e.locale?e.locale:"",JSEvents.keyEvent+88,32);stringToUTF8(e.char?e.char:"",JSEvents.keyEvent+120,32);HEAP32[JSEvents.keyEvent+152>>2]=e.charCode;HEAP32[JSEvents.keyEvent+156>>2]=e.keyCode;HEAP32[JSEvents.keyEvent+160>>2]=e.which;var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.keyEvent,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:JSEvents.isInternetExplorer()?false:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),getBoundingClientRectOrZeros:(function(target){return target.getBoundingClientRect?target.getBoundingClientRect():{left:0,top:0}}),fillMouseEventData:(function(eventStruct,e,target){HEAPF64[eventStruct>>3]=JSEvents.tick();HEAP32[eventStruct+8>>2]=e.screenX;HEAP32[eventStruct+12>>2]=e.screenY;HEAP32[eventStruct+16>>2]=e.clientX;HEAP32[eventStruct+20>>2]=e.clientY;HEAP32[eventStruct+24>>2]=e.ctrlKey;HEAP32[eventStruct+28>>2]=e.shiftKey;HEAP32[eventStruct+32>>2]=e.altKey;HEAP32[eventStruct+36>>2]=e.metaKey;HEAP16[eventStruct+40>>1]=e.button;HEAP16[eventStruct+42>>1]=e.buttons;HEAP32[eventStruct+44>>2]=e["movementX"]||e["mozMovementX"]||e["webkitMovementX"]||e.screenX-JSEvents.previousScreenX;HEAP32[eventStruct+48>>2]=e["movementY"]||e["mozMovementY"]||e["webkitMovementY"]||e.screenY-JSEvents.previousScreenY;if(Module["canvas"]){var rect=Module["canvas"].getBoundingClientRect();HEAP32[eventStruct+60>>2]=e.clientX-rect.left;HEAP32[eventStruct+64>>2]=e.clientY-rect.top}else{HEAP32[eventStruct+60>>2]=0;HEAP32[eventStruct+64>>2]=0}if(target){var rect=JSEvents.getBoundingClientRectOrZeros(target);HEAP32[eventStruct+52>>2]=e.clientX-rect.left;HEAP32[eventStruct+56>>2]=e.clientY-rect.top}else{HEAP32[eventStruct+52>>2]=0;HEAP32[eventStruct+56>>2]=0}if(e.type!=="wheel"&&e.type!=="mousewheel"){JSEvents.previousScreenX=e.screenX;JSEvents.previousScreenY=e.screenY}}),registerMouseEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!JSEvents.mouseEvent){JSEvents.mouseEvent=_malloc(72)}target=JSEvents.findEventTarget(target);var handlerFunc=(function(event){var e=event||window.event;JSEvents.fillMouseEventData(JSEvents.mouseEvent,e,target);var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.mouseEvent,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:target,allowsDeferredCalls:eventTypeString!="mousemove"&&eventTypeString!="mouseenter"&&eventTypeString!="mouseleave",eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};if(JSEvents.isInternetExplorer()&&eventTypeString=="mousedown")eventHandler.allowsDeferredCalls=false;JSEvents.registerOrRemoveHandler(eventHandler)}),registerWheelEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!JSEvents.wheelEvent){JSEvents.wheelEvent=_malloc(104)}target=JSEvents.findEventTarget(target);var wheelHandlerFunc=(function(event){var e=event||window.event;JSEvents.fillMouseEventData(JSEvents.wheelEvent,e,target);HEAPF64[JSEvents.wheelEvent+72>>3]=e["deltaX"];HEAPF64[JSEvents.wheelEvent+80>>3]=e["deltaY"];HEAPF64[JSEvents.wheelEvent+88>>3]=e["deltaZ"];HEAP32[JSEvents.wheelEvent+96>>2]=e["deltaMode"];var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.wheelEvent,userData);if(shouldCancel){e.preventDefault()}});var mouseWheelHandlerFunc=(function(event){var e=event||window.event;JSEvents.fillMouseEventData(JSEvents.wheelEvent,e,target);HEAPF64[JSEvents.wheelEvent+72>>3]=e["wheelDeltaX"]||0;HEAPF64[JSEvents.wheelEvent+80>>3]=-(e["wheelDeltaY"]?e["wheelDeltaY"]:e["wheelDelta"]);HEAPF64[JSEvents.wheelEvent+88>>3]=0;HEAP32[JSEvents.wheelEvent+96>>2]=0;var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.wheelEvent,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:target,allowsDeferredCalls:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:eventTypeString=="wheel"?wheelHandlerFunc:mouseWheelHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),pageScrollPos:(function(){if(window.pageXOffset>0||window.pageYOffset>0){return[window.pageXOffset,window.pageYOffset]}if(typeof document.documentElement.scrollLeft!=="undefined"||typeof document.documentElement.scrollTop!=="undefined"){return[document.documentElement.scrollLeft,document.documentElement.scrollTop]}return[document.body.scrollLeft|0,document.body.scrollTop|0]}),registerUiEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!JSEvents.uiEvent){JSEvents.uiEvent=_malloc(36)}if(eventTypeString=="scroll"&&!target){target=document}else{target=JSEvents.findEventTarget(target)}var handlerFunc=(function(event){var e=event||window.event;if(e.target!=target){return}var scrollPos=JSEvents.pageScrollPos();HEAP32[JSEvents.uiEvent>>2]=e.detail;HEAP32[JSEvents.uiEvent+4>>2]=document.body.clientWidth;HEAP32[JSEvents.uiEvent+8>>2]=document.body.clientHeight;HEAP32[JSEvents.uiEvent+12>>2]=window.innerWidth;HEAP32[JSEvents.uiEvent+16>>2]=window.innerHeight;HEAP32[JSEvents.uiEvent+20>>2]=window.outerWidth;HEAP32[JSEvents.uiEvent+24>>2]=window.outerHeight;HEAP32[JSEvents.uiEvent+28>>2]=scrollPos[0];HEAP32[JSEvents.uiEvent+32>>2]=scrollPos[1];var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.uiEvent,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:target,allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),getNodeNameForTarget:(function(target){if(!target)return"";if(target==window)return"#window";if(target==window.screen)return"#screen";return target&&target.nodeName?target.nodeName:""}),registerFocusEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!JSEvents.focusEvent){JSEvents.focusEvent=_malloc(256)}var handlerFunc=(function(event){var e=event||window.event;var nodeName=JSEvents.getNodeNameForTarget(e.target);var id=e.target.id?e.target.id:"";stringToUTF8(nodeName,JSEvents.focusEvent+0,128);stringToUTF8(id,JSEvents.focusEvent+128,128);var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.focusEvent,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),tick:(function(){if(window["performance"]&&window["performance"]["now"])return window["performance"]["now"]();else return Date.now()}),registerDeviceOrientationEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!JSEvents.deviceOrientationEvent){JSEvents.deviceOrientationEvent=_malloc(40)}var handlerFunc=(function(event){var e=event||window.event;HEAPF64[JSEvents.deviceOrientationEvent>>3]=JSEvents.tick();HEAPF64[JSEvents.deviceOrientationEvent+8>>3]=e.alpha;HEAPF64[JSEvents.deviceOrientationEvent+16>>3]=e.beta;HEAPF64[JSEvents.deviceOrientationEvent+24>>3]=e.gamma;HEAP32[JSEvents.deviceOrientationEvent+32>>2]=e.absolute;var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.deviceOrientationEvent,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),registerDeviceMotionEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!JSEvents.deviceMotionEvent){JSEvents.deviceMotionEvent=_malloc(80)}var handlerFunc=(function(event){var e=event||window.event;HEAPF64[JSEvents.deviceMotionEvent>>3]=JSEvents.tick();HEAPF64[JSEvents.deviceMotionEvent+8>>3]=e.acceleration.x;HEAPF64[JSEvents.deviceMotionEvent+16>>3]=e.acceleration.y;HEAPF64[JSEvents.deviceMotionEvent+24>>3]=e.acceleration.z;HEAPF64[JSEvents.deviceMotionEvent+32>>3]=e.accelerationIncludingGravity.x;HEAPF64[JSEvents.deviceMotionEvent+40>>3]=e.accelerationIncludingGravity.y;HEAPF64[JSEvents.deviceMotionEvent+48>>3]=e.accelerationIncludingGravity.z;HEAPF64[JSEvents.deviceMotionEvent+56>>3]=e.rotationRate.alpha;HEAPF64[JSEvents.deviceMotionEvent+64>>3]=e.rotationRate.beta;HEAPF64[JSEvents.deviceMotionEvent+72>>3]=e.rotationRate.gamma;var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.deviceMotionEvent,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),screenOrientation:(function(){if(!window.screen)return undefined;return window.screen.orientation||window.screen.mozOrientation||window.screen.webkitOrientation||window.screen.msOrientation}),fillOrientationChangeEventData:(function(eventStruct,e){var orientations=["portrait-primary","portrait-secondary","landscape-primary","landscape-secondary"];var orientations2=["portrait","portrait","landscape","landscape"];var orientationString=JSEvents.screenOrientation();var orientation=orientations.indexOf(orientationString);if(orientation==-1){orientation=orientations2.indexOf(orientationString)}HEAP32[eventStruct>>2]=1<<orientation;HEAP32[eventStruct+4>>2]=window.orientation}),registerOrientationChangeEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!JSEvents.orientationChangeEvent){JSEvents.orientationChangeEvent=_malloc(8)}if(!target){target=window.screen}else{target=JSEvents.findEventTarget(target)}var handlerFunc=(function(event){var e=event||window.event;JSEvents.fillOrientationChangeEventData(JSEvents.orientationChangeEvent,e);var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.orientationChangeEvent,userData);if(shouldCancel){e.preventDefault()}});if(eventTypeString=="orientationchange"&&window.screen.mozOrientation!==undefined){eventTypeString="mozorientationchange"}var eventHandler={target:target,allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),fullscreenEnabled:(function(){return document.fullscreenEnabled||document.mozFullScreenEnabled||document.webkitFullscreenEnabled||document.msFullscreenEnabled}),fillFullscreenChangeEventData:(function(eventStruct,e){var fullscreenElement=document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||document.msFullscreenElement;var isFullscreen=!!fullscreenElement;HEAP32[eventStruct>>2]=isFullscreen;HEAP32[eventStruct+4>>2]=JSEvents.fullscreenEnabled();var reportedElement=isFullscreen?fullscreenElement:JSEvents.previousFullscreenElement;var nodeName=JSEvents.getNodeNameForTarget(reportedElement);var id=reportedElement&&reportedElement.id?reportedElement.id:"";stringToUTF8(nodeName,eventStruct+8,128);stringToUTF8(id,eventStruct+136,128);HEAP32[eventStruct+264>>2]=reportedElement?reportedElement.clientWidth:0;HEAP32[eventStruct+268>>2]=reportedElement?reportedElement.clientHeight:0;HEAP32[eventStruct+272>>2]=screen.width;HEAP32[eventStruct+276>>2]=screen.height;if(isFullscreen){JSEvents.previousFullscreenElement=fullscreenElement}}),registerFullscreenChangeEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!JSEvents.fullscreenChangeEvent){JSEvents.fullscreenChangeEvent=_malloc(280)}if(!target){target=document}else{target=JSEvents.findEventTarget(target)}var handlerFunc=(function(event){var e=event||window.event;JSEvents.fillFullscreenChangeEventData(JSEvents.fullscreenChangeEvent,e);var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.fullscreenChangeEvent,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:target,allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),resizeCanvasForFullscreen:(function(target,strategy){var restoreOldStyle=__registerRestoreOldStyle(target);var cssWidth=strategy.softFullscreen?window.innerWidth:screen.width;var cssHeight=strategy.softFullscreen?window.innerHeight:screen.height;var rect=target.getBoundingClientRect();var windowedCssWidth=rect.right-rect.left;var windowedCssHeight=rect.bottom-rect.top;var windowedRttWidth=target.width;var windowedRttHeight=target.height;if(strategy.scaleMode==3){__setLetterbox(target,(cssHeight-windowedCssHeight)/2,(cssWidth-windowedCssWidth)/2);cssWidth=windowedCssWidth;cssHeight=windowedCssHeight}else if(strategy.scaleMode==2){if(cssWidth*windowedRttHeight<windowedRttWidth*cssHeight){var desiredCssHeight=windowedRttHeight*cssWidth/windowedRttWidth;__setLetterbox(target,(cssHeight-desiredCssHeight)/2,0);cssHeight=desiredCssHeight}else{var desiredCssWidth=windowedRttWidth*cssHeight/windowedRttHeight;__setLetterbox(target,0,(cssWidth-desiredCssWidth)/2);cssWidth=desiredCssWidth}}if(!target.style.backgroundColor)target.style.backgroundColor="black";if(!document.body.style.backgroundColor)document.body.style.backgroundColor="black";target.style.width=cssWidth+"px";target.style.height=cssHeight+"px";if(strategy.filteringMode==1){target.style.imageRendering="optimizeSpeed";target.style.imageRendering="-moz-crisp-edges";target.style.imageRendering="-o-crisp-edges";target.style.imageRendering="-webkit-optimize-contrast";target.style.imageRendering="optimize-contrast";target.style.imageRendering="crisp-edges";target.style.imageRendering="pixelated"}var dpiScale=strategy.canvasResolutionScaleMode==2?window.devicePixelRatio:1;if(strategy.canvasResolutionScaleMode!=0){target.width=cssWidth*dpiScale;target.height=cssHeight*dpiScale;if(target.GLctxObject)target.GLctxObject.GLctx.viewport(0,0,target.width,target.height)}return restoreOldStyle}),requestFullscreen:(function(target,strategy){if(strategy.scaleMode!=0||strategy.canvasResolutionScaleMode!=0){JSEvents.resizeCanvasForFullscreen(target,strategy)}if(target.requestFullscreen){target.requestFullscreen()}else if(target.msRequestFullscreen){target.msRequestFullscreen()}else if(target.mozRequestFullScreen){target.mozRequestFullScreen()}else if(target.mozRequestFullscreen){target.mozRequestFullscreen()}else if(target.webkitRequestFullscreen){target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT)}else{if(typeof JSEvents.fullscreenEnabled()==="undefined"){return-1}else{return-3}}if(strategy.canvasResizedCallback){Module["dynCall_iiii"](strategy.canvasResizedCallback,37,0,strategy.canvasResizedCallbackUserData)}return 0}),fillPointerlockChangeEventData:(function(eventStruct,e){var pointerLockElement=document.pointerLockElement||document.mozPointerLockElement||document.webkitPointerLockElement||document.msPointerLockElement;var isPointerlocked=!!pointerLockElement;HEAP32[eventStruct>>2]=isPointerlocked;var nodeName=JSEvents.getNodeNameForTarget(pointerLockElement);var id=pointerLockElement&&pointerLockElement.id?pointerLockElement.id:"";stringToUTF8(nodeName,eventStruct+4,128);stringToUTF8(id,eventStruct+132,128)}),registerPointerlockChangeEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!JSEvents.pointerlockChangeEvent){JSEvents.pointerlockChangeEvent=_malloc(260)}if(!target){target=document}else{target=JSEvents.findEventTarget(target)}var handlerFunc=(function(event){var e=event||window.event;JSEvents.fillPointerlockChangeEventData(JSEvents.pointerlockChangeEvent,e);var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.pointerlockChangeEvent,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:target,allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),registerPointerlockErrorEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!target){target=document}else{target=JSEvents.findEventTarget(target)}var handlerFunc=(function(event){var e=event||window.event;var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,0,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:target,allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),requestPointerLock:(function(target){if(target.requestPointerLock){target.requestPointerLock()}else if(target.mozRequestPointerLock){target.mozRequestPointerLock()}else if(target.webkitRequestPointerLock){target.webkitRequestPointerLock()}else if(target.msRequestPointerLock){target.msRequestPointerLock()}else{if(document.body.requestPointerLock||document.body.mozRequestPointerLock||document.body.webkitRequestPointerLock||document.body.msRequestPointerLock){return-3}else{return-1}}return 0}),fillVisibilityChangeEventData:(function(eventStruct,e){var visibilityStates=["hidden","visible","prerender","unloaded"];var visibilityState=visibilityStates.indexOf(document.visibilityState);HEAP32[eventStruct>>2]=document.hidden;HEAP32[eventStruct+4>>2]=visibilityState}),registerVisibilityChangeEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!JSEvents.visibilityChangeEvent){JSEvents.visibilityChangeEvent=_malloc(8)}if(!target){target=document}else{target=JSEvents.findEventTarget(target)}var handlerFunc=(function(event){var e=event||window.event;JSEvents.fillVisibilityChangeEventData(JSEvents.visibilityChangeEvent,e);var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.visibilityChangeEvent,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:target,allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),registerTouchEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!JSEvents.touchEvent){JSEvents.touchEvent=_malloc(1684)}target=JSEvents.findEventTarget(target);var handlerFunc=(function(event){var e=event||window.event;var touches={};for(var i=0;i<e.touches.length;++i){var touch=e.touches[i];touches[touch.identifier]=touch}for(var i=0;i<e.changedTouches.length;++i){var touch=e.changedTouches[i];touches[touch.identifier]=touch;touch.changed=true}for(var i=0;i<e.targetTouches.length;++i){var touch=e.targetTouches[i];touches[touch.identifier].onTarget=true}var ptr=JSEvents.touchEvent;HEAP32[ptr+4>>2]=e.ctrlKey;HEAP32[ptr+8>>2]=e.shiftKey;HEAP32[ptr+12>>2]=e.altKey;HEAP32[ptr+16>>2]=e.metaKey;ptr+=20;var canvasRect=Module["canvas"]?Module["canvas"].getBoundingClientRect():undefined;var targetRect=JSEvents.getBoundingClientRectOrZeros(target);var numTouches=0;for(var i in touches){var t=touches[i];HEAP32[ptr>>2]=t.identifier;HEAP32[ptr+4>>2]=t.screenX;HEAP32[ptr+8>>2]=t.screenY;HEAP32[ptr+12>>2]=t.clientX;HEAP32[ptr+16>>2]=t.clientY;HEAP32[ptr+20>>2]=t.pageX;HEAP32[ptr+24>>2]=t.pageY;HEAP32[ptr+28>>2]=t.changed;HEAP32[ptr+32>>2]=t.onTarget;if(canvasRect){HEAP32[ptr+44>>2]=t.clientX-canvasRect.left;HEAP32[ptr+48>>2]=t.clientY-canvasRect.top}else{HEAP32[ptr+44>>2]=0;HEAP32[ptr+48>>2]=0}HEAP32[ptr+36>>2]=t.clientX-targetRect.left;HEAP32[ptr+40>>2]=t.clientY-targetRect.top;ptr+=52;if(++numTouches>=32){break}}HEAP32[JSEvents.touchEvent>>2]=numTouches;var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.touchEvent,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:target,allowsDeferredCalls:eventTypeString=="touchstart"||eventTypeString=="touchend",eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),fillGamepadEventData:(function(eventStruct,e){HEAPF64[eventStruct>>3]=e.timestamp;for(var i=0;i<e.axes.length;++i){HEAPF64[eventStruct+i*8+16>>3]=e.axes[i]}for(var i=0;i<e.buttons.length;++i){if(typeof e.buttons[i]==="object"){HEAPF64[eventStruct+i*8+528>>3]=e.buttons[i].value}else{HEAPF64[eventStruct+i*8+528>>3]=e.buttons[i]}}for(var i=0;i<e.buttons.length;++i){if(typeof e.buttons[i]==="object"){HEAP32[eventStruct+i*4+1040>>2]=e.buttons[i].pressed}else{HEAP32[eventStruct+i*4+1040>>2]=e.buttons[i]==1}}HEAP32[eventStruct+1296>>2]=e.connected;HEAP32[eventStruct+1300>>2]=e.index;HEAP32[eventStruct+8>>2]=e.axes.length;HEAP32[eventStruct+12>>2]=e.buttons.length;stringToUTF8(e.id,eventStruct+1304,64);stringToUTF8(e.mapping,eventStruct+1368,64)}),registerGamepadEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!JSEvents.gamepadEvent){JSEvents.gamepadEvent=_malloc(1432)}var handlerFunc=(function(event){var e=event||window.event;JSEvents.fillGamepadEventData(JSEvents.gamepadEvent,e.gamepad);var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.gamepadEvent,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),registerBeforeUnloadEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){var handlerFunc=(function(event){var e=event||window.event;var confirmationMessage=Module["dynCall_iiii"](callbackfunc,eventTypeId,0,userData);if(confirmationMessage){confirmationMessage=Pointer_stringify(confirmationMessage)}if(confirmationMessage){e.preventDefault();e.returnValue=confirmationMessage;return confirmationMessage}});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),battery:(function(){return navigator.battery||navigator.mozBattery||navigator.webkitBattery}),fillBatteryEventData:(function(eventStruct,e){HEAPF64[eventStruct>>3]=e.chargingTime;HEAPF64[eventStruct+8>>3]=e.dischargingTime;HEAPF64[eventStruct+16>>3]=e.level;HEAP32[eventStruct+24>>2]=e.charging}),registerBatteryEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!JSEvents.batteryEvent){JSEvents.batteryEvent=_malloc(32)}var handlerFunc=(function(event){var e=event||window.event;JSEvents.fillBatteryEventData(JSEvents.batteryEvent,JSEvents.battery());var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,JSEvents.batteryEvent,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)}),registerWebGlEventCallback:(function(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){if(!target){target=Module["canvas"]}var handlerFunc=(function(event){var e=event||window.event;var shouldCancel=Module["dynCall_iiii"](callbackfunc,eventTypeId,0,userData);if(shouldCancel){e.preventDefault()}});var eventHandler={target:JSEvents.findEventTarget(target),allowsDeferredCalls:false,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:handlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler)})};var __currentFullscreenStrategy={};function _emscripten_exit_fullscreen(){if(typeof JSEvents.fullscreenEnabled()==="undefined")return-1;JSEvents.removeDeferredCalls(JSEvents.requestFullscreen);if(document.exitFullscreen){document.exitFullscreen()}else if(document.msExitFullscreen){document.msExitFullscreen()}else if(document.mozCancelFullScreen){document.mozCancelFullScreen()}else if(document.webkitExitFullscreen){document.webkitExitFullscreen()}else{return-1}if(__currentFullscreenStrategy.canvasResizedCallback){Module["dynCall_iiii"](__currentFullscreenStrategy.canvasResizedCallback,37,0,__currentFullscreenStrategy.canvasResizedCallbackUserData)}return 0}function _emscripten_exit_pointerlock(){JSEvents.removeDeferredCalls(JSEvents.requestPointerLock);if(document.exitPointerLock){document.exitPointerLock()}else if(document.msExitPointerLock){document.msExitPointerLock()}else if(document.mozExitPointerLock){document.mozExitPointerLock()}else if(document.webkitExitPointerLock){document.webkitExitPointerLock()}else{return-1}return 0}function _emscripten_force_exit(status){Module["noExitRuntime"]=false;exit(status)}function _emscripten_get_device_pixel_ratio(){return window.devicePixelRatio||1}function _emscripten_get_element_css_size(target,width,height){if(!target){target=Module["canvas"]}else{target=JSEvents.findEventTarget(target)}if(!target)return-4;if(target.getBoundingClientRect){var rect=target.getBoundingClientRect();HEAPF64[width>>3]=rect.right-rect.left;HEAPF64[height>>3]=rect.bottom-rect.top}else{HEAPF64[width>>3]=target.clientWidth;HEAPF64[height>>3]=target.clientHeight}return 0}function __emscripten_sample_gamepad_data(){if(!JSEvents.numGamepadsConnected)return;if(Browser.mainLoop.currentFrameNumber!==JSEvents.lastGamepadStateFrame||!Browser.mainLoop.currentFrameNumber){JSEvents.lastGamepadState=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads:null;JSEvents.lastGamepadStateFrame=Browser.mainLoop.currentFrameNumber}}function _emscripten_get_gamepad_status(index,gamepadState){__emscripten_sample_gamepad_data();if(!JSEvents.lastGamepadState)return-1;if(index<0||index>=JSEvents.lastGamepadState.length)return-5;if(!JSEvents.lastGamepadState[index])return-7;JSEvents.fillGamepadEventData(gamepadState,JSEvents.lastGamepadState[index]);return 0}function _emscripten_get_num_gamepads(){if(!JSEvents.numGamepadsConnected)return 0;__emscripten_sample_gamepad_data();if(!JSEvents.lastGamepadState)return-1;return JSEvents.lastGamepadState.length}function _emscripten_glActiveTexture(x0){GLctx["activeTexture"](x0)}function _emscripten_glAttachShader(program,shader){GLctx.attachShader(GL.programs[program],GL.shaders[shader])}function _emscripten_glBeginConditionalRender(){err("missing function: emscripten_glBeginConditionalRender");abort(-1)}function _emscripten_glBeginTransformFeedback(){err("missing function: emscripten_glBeginTransformFeedback");abort(-1)}function _emscripten_glBindAttribLocation(program,index,name){name=Pointer_stringify(name);GLctx.bindAttribLocation(GL.programs[program],index,name)}function _emscripten_glBindBuffer(target,buffer){var bufferObj=buffer?GL.buffers[buffer]:null;GLctx.bindBuffer(target,bufferObj)}function _emscripten_glBindBufferBase(){err("missing function: emscripten_glBindBufferBase");abort(-1)}function _emscripten_glBindBufferRange(){err("missing function: emscripten_glBindBufferRange");abort(-1)}function _emscripten_glBindFragDataLocation(){err("missing function: emscripten_glBindFragDataLocation");abort(-1)}function _emscripten_glBindFramebuffer(target,framebuffer){GLctx.bindFramebuffer(target,framebuffer?GL.framebuffers[framebuffer]:null)}function _emscripten_glBindProgramARB(){err("missing function: emscripten_glBindProgramARB");abort(-1)}function _emscripten_glBindRenderbuffer(target,renderbuffer){GLctx.bindRenderbuffer(target,renderbuffer?GL.renderbuffers[renderbuffer]:null)}function _emscripten_glBindTexture(target,texture){GLctx.bindTexture(target,texture?GL.textures[texture]:null)}function _emscripten_glBindVertexArray(vao){GLctx["bindVertexArray"](GL.vaos[vao])}function _emscripten_glBlendColor(x0,x1,x2,x3){GLctx["blendColor"](x0,x1,x2,x3)}function _emscripten_glBlendEquation(x0){GLctx["blendEquation"](x0)}function _emscripten_glBlendEquationSeparate(x0,x1){GLctx["blendEquationSeparate"](x0,x1)}function _emscripten_glBlendFunc(x0,x1){GLctx["blendFunc"](x0,x1)}function _emscripten_glBlendFuncSeparate(x0,x1,x2,x3){GLctx["blendFuncSeparate"](x0,x1,x2,x3)}function _emscripten_glBlitFramebuffer(){err("missing function: emscripten_glBlitFramebuffer");abort(-1)}function _emscripten_glBufferData(target,size,data,usage){if(!data){GLctx.bufferData(target,size,usage)}else{GLctx.bufferData(target,HEAPU8.subarray(data,data+size),usage)}}function _emscripten_glBufferSubData(target,offset,size,data){GLctx.bufferSubData(target,offset,HEAPU8.subarray(data,data+size))}function _emscripten_glCheckFramebufferStatus(x0){return GLctx["checkFramebufferStatus"](x0)}function _emscripten_glClampColor(){err("missing function: emscripten_glClampColor");abort(-1)}function _emscripten_glClear(x0){GLctx["clear"](x0)}function _emscripten_glClearBufferfi(){err("missing function: emscripten_glClearBufferfi");abort(-1)}function _emscripten_glClearBufferfv(){err("missing function: emscripten_glClearBufferfv");abort(-1)}function _emscripten_glClearBufferiv(){err("missing function: emscripten_glClearBufferiv");abort(-1)}function _emscripten_glClearBufferuiv(){err("missing function: emscripten_glClearBufferuiv");abort(-1)}function _emscripten_glClearColor(x0,x1,x2,x3){GLctx["clearColor"](x0,x1,x2,x3)}function _emscripten_glClearDepth(x0){GLctx["clearDepth"](x0)}function _emscripten_glClearDepthf(x0){GLctx["clearDepth"](x0)}function _emscripten_glClearStencil(x0){GLctx["clearStencil"](x0)}function _emscripten_glClientActiveTexture(){err("missing function: emscripten_glClientActiveTexture");abort(-1)}function _emscripten_glColorMask(red,green,blue,alpha){GLctx.colorMask(!!red,!!green,!!blue,!!alpha)}function _emscripten_glColorMaski(){err("missing function: emscripten_glColorMaski");abort(-1)}function _emscripten_glColorPointer(){err("missing function: emscripten_glColorPointer");abort(-1)}function _emscripten_glCompileShader(shader){GLctx.compileShader(GL.shaders[shader])}function _emscripten_glCompressedTexImage2D(target,level,internalFormat,width,height,border,imageSize,data){GLctx["compressedTexImage2D"](target,level,internalFormat,width,height,border,data?HEAPU8.subarray(data,data+imageSize):null)}function _emscripten_glCompressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,imageSize,data){GLctx["compressedTexSubImage2D"](target,level,xoffset,yoffset,width,height,format,data?HEAPU8.subarray(data,data+imageSize):null)}function _emscripten_glCopyTexImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx["copyTexImage2D"](x0,x1,x2,x3,x4,x5,x6,x7)}function _emscripten_glCopyTexSubImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx["copyTexSubImage2D"](x0,x1,x2,x3,x4,x5,x6,x7)}function _emscripten_glCreateProgram(){var id=GL.getNewId(GL.programs);var program=GLctx.createProgram();program.name=id;GL.programs[id]=program;return id}function _emscripten_glCreateShader(shaderType){var id=GL.getNewId(GL.shaders);GL.shaders[id]=GLctx.createShader(shaderType);return id}function _emscripten_glCullFace(x0){GLctx["cullFace"](x0)}function _emscripten_glDeleteBuffers(n,buffers){for(var i=0;i<n;i++){var id=HEAP32[buffers+i*4>>2];var buffer=GL.buffers[id];if(!buffer)continue;GLctx.deleteBuffer(buffer);buffer.name=0;GL.buffers[id]=null;if(id==GL.currArrayBuffer)GL.currArrayBuffer=0;if(id==GL.currElementArrayBuffer)GL.currElementArrayBuffer=0}}function _emscripten_glDeleteFramebuffers(n,framebuffers){for(var i=0;i<n;++i){var id=HEAP32[framebuffers+i*4>>2];var framebuffer=GL.framebuffers[id];if(!framebuffer)continue;GLctx.deleteFramebuffer(framebuffer);framebuffer.name=0;GL.framebuffers[id]=null}}function _emscripten_glDeleteObjectARB(){err("missing function: emscripten_glDeleteObjectARB");abort(-1)}function _emscripten_glDeleteProgram(id){if(!id)return;var program=GL.programs[id];if(!program){GL.recordError(1281);return}GLctx.deleteProgram(program);program.name=0;GL.programs[id]=null;GL.programInfos[id]=null}function _emscripten_glDeleteRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var id=HEAP32[renderbuffers+i*4>>2];var renderbuffer=GL.renderbuffers[id];if(!renderbuffer)continue;GLctx.deleteRenderbuffer(renderbuffer);renderbuffer.name=0;GL.renderbuffers[id]=null}}function _emscripten_glDeleteShader(id){if(!id)return;var shader=GL.shaders[id];if(!shader){GL.recordError(1281);return}GLctx.deleteShader(shader);GL.shaders[id]=null}function _emscripten_glDeleteTextures(n,textures){for(var i=0;i<n;i++){var id=HEAP32[textures+i*4>>2];var texture=GL.textures[id];if(!texture)continue;GLctx.deleteTexture(texture);texture.name=0;GL.textures[id]=null}}function _emscripten_glDeleteVertexArrays(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx["deleteVertexArray"](GL.vaos[id]);GL.vaos[id]=null}}function _emscripten_glDepthFunc(x0){GLctx["depthFunc"](x0)}function _emscripten_glDepthMask(flag){GLctx.depthMask(!!flag)}function _emscripten_glDepthRange(x0,x1){GLctx["depthRange"](x0,x1)}function _emscripten_glDepthRangef(x0,x1){GLctx["depthRange"](x0,x1)}function _emscripten_glDetachShader(program,shader){GLctx.detachShader(GL.programs[program],GL.shaders[shader])}function _emscripten_glDisable(x0){GLctx["disable"](x0)}function _emscripten_glDisableVertexAttribArray(index){GLctx.disableVertexAttribArray(index)}function _emscripten_glDisablei(){err("missing function: emscripten_glDisablei");abort(-1)}function _emscripten_glDrawArrays(mode,first,count){GLctx.drawArrays(mode,first,count)}function _emscripten_glDrawArraysInstanced(mode,first,count,primcount){GLctx["drawArraysInstanced"](mode,first,count,primcount)}function _emscripten_glDrawBuffers(n,bufs){var bufArray=GL.tempFixedLengthArray[n];for(var i=0;i<n;i++){bufArray[i]=HEAP32[bufs+i*4>>2]}GLctx["drawBuffers"](bufArray)}function _emscripten_glDrawElements(mode,count,type,indices){GLctx.drawElements(mode,count,type,indices)}function _emscripten_glDrawElementsInstanced(mode,count,type,indices,primcount){GLctx["drawElementsInstanced"](mode,count,type,indices,primcount)}function _emscripten_glDrawRangeElements(){err("missing function: emscripten_glDrawRangeElements");abort(-1)}function _emscripten_glEnable(x0){GLctx["enable"](x0)}function _emscripten_glEnableClientState(){err("missing function: emscripten_glEnableClientState");abort(-1)}function _emscripten_glEnableVertexAttribArray(index){GLctx.enableVertexAttribArray(index)}function _emscripten_glEnablei(){err("missing function: emscripten_glEnablei");abort(-1)}function _emscripten_glEndConditionalRender(){err("missing function: emscripten_glEndConditionalRender");abort(-1)}function _emscripten_glEndTransformFeedback(){err("missing function: emscripten_glEndTransformFeedback");abort(-1)}function _emscripten_glFinish(){GLctx["finish"]()}function _emscripten_glFlush(){GLctx["flush"]()}function _emscripten_glFramebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer){GLctx.framebufferRenderbuffer(target,attachment,renderbuffertarget,GL.renderbuffers[renderbuffer])}function _emscripten_glFramebufferTexture2D(target,attachment,textarget,texture,level){GLctx.framebufferTexture2D(target,attachment,textarget,GL.textures[texture],level)}function _emscripten_glFrontFace(x0){GLctx["frontFace"](x0)}function _emscripten_glFrustum(){err("missing function: emscripten_glFrustum");abort(-1)}function _emscripten_glGenBuffers(n,buffers){for(var i=0;i<n;i++){var buffer=GLctx.createBuffer();if(!buffer){GL.recordError(1282);while(i<n)HEAP32[buffers+i++*4>>2]=0;return}var id=GL.getNewId(GL.buffers);buffer.name=id;GL.buffers[id]=buffer;HEAP32[buffers+i*4>>2]=id}}function _emscripten_glGenFramebuffers(n,ids){for(var i=0;i<n;++i){var framebuffer=GLctx.createFramebuffer();if(!framebuffer){GL.recordError(1282);while(i<n)HEAP32[ids+i++*4>>2]=0;return}var id=GL.getNewId(GL.framebuffers);framebuffer.name=id;GL.framebuffers[id]=framebuffer;HEAP32[ids+i*4>>2]=id}}function _emscripten_glGenRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var renderbuffer=GLctx.createRenderbuffer();if(!renderbuffer){GL.recordError(1282);while(i<n)HEAP32[renderbuffers+i++*4>>2]=0;return}var id=GL.getNewId(GL.renderbuffers);renderbuffer.name=id;GL.renderbuffers[id]=renderbuffer;HEAP32[renderbuffers+i*4>>2]=id}}function _emscripten_glGenTextures(n,textures){for(var i=0;i<n;i++){var texture=GLctx.createTexture();if(!texture){GL.recordError(1282);while(i<n)HEAP32[textures+i++*4>>2]=0;return}var id=GL.getNewId(GL.textures);texture.name=id;GL.textures[id]=texture;HEAP32[textures+i*4>>2]=id}}function _emscripten_glGenVertexArrays(n,arrays){for(var i=0;i<n;i++){var vao=GLctx["createVertexArray"]();if(!vao){GL.recordError(1282);while(i<n)HEAP32[arrays+i++*4>>2]=0;return}var id=GL.getNewId(GL.vaos);vao.name=id;GL.vaos[id]=vao;HEAP32[arrays+i*4>>2]=id}}function _emscripten_glGenerateMipmap(x0){GLctx["generateMipmap"](x0)}function _emscripten_glGetActiveAttrib(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx.getActiveAttrib(program,index);if(!info)return;if(bufSize>0&&name){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type}function _emscripten_glGetActiveUniform(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx.getActiveUniform(program,index);if(!info)return;if(bufSize>0&&name){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type}function _emscripten_glGetActiveUniformBlockName(){err("missing function: emscripten_glGetActiveUniformBlockName");abort(-1)}function _emscripten_glGetActiveUniformBlockiv(){err("missing function: emscripten_glGetActiveUniformBlockiv");abort(-1)}function _emscripten_glGetActiveUniformName(){err("missing function: emscripten_glGetActiveUniformName");abort(-1)}function _emscripten_glGetActiveUniformsiv(){err("missing function: emscripten_glGetActiveUniformsiv");abort(-1)}function _emscripten_glGetAttachedShaders(program,maxCount,count,shaders){var result=GLctx.getAttachedShaders(GL.programs[program]);var len=result.length;if(len>maxCount){len=maxCount}HEAP32[count>>2]=len;for(var i=0;i<len;++i){var id=GL.shaders.indexOf(result[i]);HEAP32[shaders+i*4>>2]=id}}function _emscripten_glGetAttribLocation(program,name){program=GL.programs[program];name=Pointer_stringify(name);return GLctx.getAttribLocation(program,name)}function _emscripten_glGetBooleani_v(){err("missing function: emscripten_glGetBooleani_v");abort(-1)}function emscriptenWebGLGet(name_,p,type){if(!p){GL.recordError(1281);return}var ret=undefined;switch(name_){case 36346:ret=1;break;case 36344:if(type!=="Integer"&&type!=="Integer64"){GL.recordError(1280)}return;case 36345:ret=0;break;case 34466:var formats=GLctx.getParameter(34467);ret=formats?formats.length:0;break}if(ret===undefined){var result=GLctx.getParameter(name_);switch(typeof result){case"number":ret=result;break;case"boolean":ret=result?1:0;break;case"string":GL.recordError(1280);return;case"object":if(result===null){switch(name_){case 34964:case 35725:case 34965:case 36006:case 36007:case 32873:case 34068:{ret=0;break};default:{GL.recordError(1280);return}}}else if(result instanceof Float32Array||result instanceof Uint32Array||result instanceof Int32Array||result instanceof Array){for(var i=0;i<result.length;++i){switch(type){case"Integer":HEAP32[p+i*4>>2]=result[i];break;case"Float":HEAPF32[p+i*4>>2]=result[i];break;case"Boolean":HEAP8[p+i>>0]=result[i]?1:0;break;default:throw"internal glGet error, bad type: "+type}}return}else{try{ret=result.name|0}catch(e){GL.recordError(1280);err("GL_INVALID_ENUM in glGet"+type+"v: Unknown object returned from WebGL getParameter("+name_+")! (error: "+e+")");return}}break;default:GL.recordError(1280);return}}switch(type){case"Integer64":tempI64=[ret>>>0,(tempDouble=ret,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[p>>2]=tempI64[0],HEAP32[p+4>>2]=tempI64[1];break;case"Integer":HEAP32[p>>2]=ret;break;case"Float":HEAPF32[p>>2]=ret;break;case"Boolean":HEAP8[p>>0]=ret?1:0;break;default:throw"internal glGet error, bad type: "+type}}function _emscripten_glGetBooleanv(name_,p){emscriptenWebGLGet(name_,p,"Boolean")}function _emscripten_glGetBufferParameteriv(target,value,data){if(!data){GL.recordError(1281);return}HEAP32[data>>2]=GLctx.getBufferParameter(target,value)}function _emscripten_glGetError(){if(GL.lastError){var error=GL.lastError;GL.lastError=0;return error}else{return GLctx.getError()}}function _emscripten_glGetFloatv(name_,p){emscriptenWebGLGet(name_,p,"Float")}function _emscripten_glGetFragDataLocation(){err("missing function: emscripten_glGetFragDataLocation");abort(-1)}function _emscripten_glGetFramebufferAttachmentParameteriv(target,attachment,pname,params){var result=GLctx.getFramebufferAttachmentParameter(target,attachment,pname);if(result instanceof WebGLRenderbuffer||result instanceof WebGLTexture){result=result.name|0}HEAP32[params>>2]=result}function _emscripten_glGetInfoLogARB(){err("missing function: emscripten_glGetInfoLogARB");abort(-1)}function _emscripten_glGetIntegeri_v(){err("missing function: emscripten_glGetIntegeri_v");abort(-1)}function _emscripten_glGetIntegerv(name_,p){emscriptenWebGLGet(name_,p,"Integer")}function _emscripten_glGetObjectParameterivARB(){err("missing function: emscripten_glGetObjectParameterivARB");abort(-1)}function _emscripten_glGetPointerv(){err("missing function: emscripten_glGetPointerv");abort(-1)}function _emscripten_glGetProgramInfoLog(program,maxLength,length,infoLog){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log="(unknown error)";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetProgramiv(program,pname,p){if(!p){GL.recordError(1281);return}if(program>=GL.counter){GL.recordError(1281);return}var ptable=GL.programInfos[program];if(!ptable){GL.recordError(1282);return}if(pname==35716){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log="(unknown error)";HEAP32[p>>2]=log.length+1}else if(pname==35719){HEAP32[p>>2]=ptable.maxUniformLength}else if(pname==35722){if(ptable.maxAttributeLength==-1){program=GL.programs[program];var numAttribs=GLctx.getProgramParameter(program,GLctx.ACTIVE_ATTRIBUTES);ptable.maxAttributeLength=0;for(var i=0;i<numAttribs;++i){var activeAttrib=GLctx.getActiveAttrib(program,i);ptable.maxAttributeLength=Math.max(ptable.maxAttributeLength,activeAttrib.name.length+1)}}HEAP32[p>>2]=ptable.maxAttributeLength}else if(pname==35381){if(ptable.maxUniformBlockNameLength==-1){program=GL.programs[program];var numBlocks=GLctx.getProgramParameter(program,GLctx.ACTIVE_UNIFORM_BLOCKS);ptable.maxUniformBlockNameLength=0;for(var i=0;i<numBlocks;++i){var activeBlockName=GLctx.getActiveUniformBlockName(program,i);ptable.maxUniformBlockNameLength=Math.max(ptable.maxUniformBlockNameLength,activeBlockName.length+1)}}HEAP32[p>>2]=ptable.maxUniformBlockNameLength}else{HEAP32[p>>2]=GLctx.getProgramParameter(GL.programs[program],pname)}}function _emscripten_glGetRenderbufferParameteriv(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.getRenderbufferParameter(target,pname)}function _emscripten_glGetShaderInfoLog(shader,maxLength,length,infoLog){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log="(unknown error)";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetShaderPrecisionFormat(shaderType,precisionType,range,precision){var result=GLctx.getShaderPrecisionFormat(shaderType,precisionType);HEAP32[range>>2]=result.rangeMin;HEAP32[range+4>>2]=result.rangeMax;HEAP32[precision>>2]=result.precision}function _emscripten_glGetShaderSource(shader,bufSize,length,source){var result=GLctx.getShaderSource(GL.shaders[shader]);if(!result)return;if(bufSize>0&&source){var numBytesWrittenExclNull=stringToUTF8(result,source,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetShaderiv(shader,pname,p){if(!p){GL.recordError(1281);return}if(pname==35716){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log="(unknown error)";HEAP32[p>>2]=log.length+1}else if(pname==35720){var source=GLctx.getShaderSource(GL.shaders[shader]);var sourceLength=source===null||source.length==0?0:source.length+1;HEAP32[p>>2]=sourceLength}else{HEAP32[p>>2]=GLctx.getShaderParameter(GL.shaders[shader],pname)}}function _emscripten_glGetString(name_){if(GL.stringCache[name_])return GL.stringCache[name_];var ret;switch(name_){case 7939:var exts=GLctx.getSupportedExtensions();var gl_exts=[];for(var i=0;i<exts.length;++i){gl_exts.push(exts[i]);gl_exts.push("GL_"+exts[i])}ret=allocate(intArrayFromString(gl_exts.join(" ")),"i8",ALLOC_NORMAL);break;case 7936:case 7937:case 37445:case 37446:var s=GLctx.getParameter(name_);if(!s){GL.recordError(1280)}ret=allocate(intArrayFromString(s),"i8",ALLOC_NORMAL);break;case 7938:var glVersion=GLctx.getParameter(GLctx.VERSION);{glVersion="OpenGL ES 2.0 ("+glVersion+")"}ret=allocate(intArrayFromString(glVersion),"i8",ALLOC_NORMAL);break;case 35724:var glslVersion=GLctx.getParameter(GLctx.SHADING_LANGUAGE_VERSION);var ver_re=/^WebGL GLSL ES ([0-9]\.[0-9][0-9]?)(?:$| .*)/;var ver_num=glslVersion.match(ver_re);if(ver_num!==null){if(ver_num[1].length==3)ver_num[1]=ver_num[1]+"0";glslVersion="OpenGL ES GLSL ES "+ver_num[1]+" ("+glslVersion+")"}ret=allocate(intArrayFromString(glslVersion),"i8",ALLOC_NORMAL);break;default:GL.recordError(1280);return 0}GL.stringCache[name_]=ret;return ret}function _emscripten_glGetStringi(){err("missing function: emscripten_glGetStringi");abort(-1)}function _emscripten_glGetTexParameterIiv(){err("missing function: emscripten_glGetTexParameterIiv");abort(-1)}function _emscripten_glGetTexParameterIuiv(){err("missing function: emscripten_glGetTexParameterIuiv");abort(-1)}function _emscripten_glGetTexParameterfv(target,pname,params){if(!params){GL.recordError(1281);return}HEAPF32[params>>2]=GLctx.getTexParameter(target,pname)}function _emscripten_glGetTexParameteriv(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.getTexParameter(target,pname)}function _emscripten_glGetTransformFeedbackVarying(){err("missing function: emscripten_glGetTransformFeedbackVarying");abort(-1)}function _emscripten_glGetUniformBlockIndex(){err("missing function: emscripten_glGetUniformBlockIndex");abort(-1)}function _emscripten_glGetUniformIndices(){err("missing function: emscripten_glGetUniformIndices");abort(-1)}function _emscripten_glGetUniformLocation(program,name){name=Pointer_stringify(name);var arrayOffset=0;if(name.indexOf("]",name.length-1)!==-1){var ls=name.lastIndexOf("[");var arrayIndex=name.slice(ls+1,-1);if(arrayIndex.length>0){arrayOffset=parseInt(arrayIndex);if(arrayOffset<0){return-1}}name=name.slice(0,ls)}var ptable=GL.programInfos[program];if(!ptable){return-1}var utable=ptable.uniforms;var uniformInfo=utable[name];if(uniformInfo&&arrayOffset<uniformInfo[0]){return uniformInfo[1]+arrayOffset}else{return-1}}function emscriptenWebGLGetUniform(program,location,params,type){if(!params){GL.recordError(1281);return}var data=GLctx.getUniform(GL.programs[program],GL.uniforms[location]);if(typeof data=="number"||typeof data=="boolean"){switch(type){case"Integer":HEAP32[params>>2]=data;break;case"Float":HEAPF32[params>>2]=data;break;default:throw"internal emscriptenWebGLGetUniform() error, bad type: "+type}}else{for(var i=0;i<data.length;i++){switch(type){case"Integer":HEAP32[params+i*4>>2]=data[i];break;case"Float":HEAPF32[params+i*4>>2]=data[i];break;default:throw"internal emscriptenWebGLGetUniform() error, bad type: "+type}}}}function _emscripten_glGetUniformfv(program,location,params){emscriptenWebGLGetUniform(program,location,params,"Float")}function _emscripten_glGetUniformiv(program,location,params){emscriptenWebGLGetUniform(program,location,params,"Integer")}function _emscripten_glGetUniformuiv(){err("missing function: emscripten_glGetUniformuiv");abort(-1)}function _emscripten_glGetVertexAttribIiv(){err("missing function: emscripten_glGetVertexAttribIiv");abort(-1)}function _emscripten_glGetVertexAttribIuiv(){err("missing function: emscripten_glGetVertexAttribIuiv");abort(-1)}function _emscripten_glGetVertexAttribPointerv(index,pname,pointer){if(!pointer){GL.recordError(1281);return}HEAP32[pointer>>2]=GLctx.getVertexAttribOffset(index,pname)}function emscriptenWebGLGetVertexAttrib(index,pname,params,type){if(!params){GL.recordError(1281);return}var data=GLctx.getVertexAttrib(index,pname);if(pname==34975){HEAP32[params>>2]=data["name"]}else if(typeof data=="number"||typeof data=="boolean"){switch(type){case"Integer":HEAP32[params>>2]=data;break;case"Float":HEAPF32[params>>2]=data;break;case"FloatToInteger":HEAP32[params>>2]=Math.fround(data);break;default:throw"internal emscriptenWebGLGetVertexAttrib() error, bad type: "+type}}else{for(var i=0;i<data.length;i++){switch(type){case"Integer":HEAP32[params+i*4>>2]=data[i];break;case"Float":HEAPF32[params+i*4>>2]=data[i];break;case"FloatToInteger":HEAP32[params+i*4>>2]=Math.fround(data[i]);break;default:throw"internal emscriptenWebGLGetVertexAttrib() error, bad type: "+type}}}}function _emscripten_glGetVertexAttribfv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,"Float")}function _emscripten_glGetVertexAttribiv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,"FloatToInteger")}function _emscripten_glHint(x0,x1){GLctx["hint"](x0,x1)}function _emscripten_glIsBuffer(buffer){var b=GL.buffers[buffer];if(!b)return 0;return GLctx.isBuffer(b)}function _emscripten_glIsEnabled(x0){return GLctx["isEnabled"](x0)}function _emscripten_glIsEnabledi(){err("missing function: emscripten_glIsEnabledi");abort(-1)}function _emscripten_glIsFramebuffer(framebuffer){var fb=GL.framebuffers[framebuffer];if(!fb)return 0;return GLctx.isFramebuffer(fb)}function _emscripten_glIsProgram(program){program=GL.programs[program];if(!program)return 0;return GLctx.isProgram(program)}function _emscripten_glIsRenderbuffer(renderbuffer){var rb=GL.renderbuffers[renderbuffer];if(!rb)return 0;return GLctx.isRenderbuffer(rb)}function _emscripten_glIsShader(shader){var s=GL.shaders[shader];if(!s)return 0;return GLctx.isShader(s)}function _emscripten_glIsTexture(texture){var texture=GL.textures[texture];if(!texture)return 0;return GLctx.isTexture(texture)}function _emscripten_glIsVertexArray(array){var vao=GL.vaos[array];if(!vao)return 0;return GLctx["isVertexArray"](vao)}function _emscripten_glLineWidth(x0){GLctx["lineWidth"](x0)}function _emscripten_glLinkProgram(program){GLctx.linkProgram(GL.programs[program]);GL.programInfos[program]=null;GL.populateUniformTable(program)}function _emscripten_glLoadIdentity(){throw"Legacy GL function (glLoadIdentity) called. If you want legacy GL emulation, you need to compile with -s LEGACY_GL_EMULATION=1 to enable legacy GL emulation."}function _emscripten_glLoadMatrixf(){err("missing function: emscripten_glLoadMatrixf");abort(-1)}function _emscripten_glMatrixMode(){throw"Legacy GL function (glMatrixMode) called. If you want legacy GL emulation, you need to compile with -s LEGACY_GL_EMULATION=1 to enable legacy GL emulation."}function _emscripten_glNormalPointer(){err("missing function: emscripten_glNormalPointer");abort(-1)}function _emscripten_glPixelStorei(pname,param){if(pname==3333){GL.packAlignment=param}else if(pname==3317){GL.unpackAlignment=param}GLctx.pixelStorei(pname,param)}function _emscripten_glPolygonOffset(x0,x1){GLctx["polygonOffset"](x0,x1)}function emscriptenWebGLComputeImageSize(width,height,sizePerPixel,alignment){function roundedToNextMultipleOf(x,y){return Math.floor((x+y-1)/y)*y}var plainRowSize=width*sizePerPixel;var alignedRowSize=roundedToNextMultipleOf(plainRowSize,alignment);return height<=0?0:(height-1)*alignedRowSize+plainRowSize}function emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat){var sizePerPixel;var numChannels;switch(format){case 6406:case 6409:case 6402:numChannels=1;break;case 6410:numChannels=2;break;case 6407:case 35904:numChannels=3;break;case 6408:case 35906:numChannels=4;break;default:GL.recordError(1280);return null}switch(type){case 5121:sizePerPixel=numChannels*1;break;case 5123:case 36193:sizePerPixel=numChannels*2;break;case 5125:case 5126:sizePerPixel=numChannels*4;break;case 34042:sizePerPixel=4;break;case 33635:case 32819:case 32820:sizePerPixel=2;break;default:GL.recordError(1280);return null}var bytes=emscriptenWebGLComputeImageSize(width,height,sizePerPixel,GL.unpackAlignment);switch(type){case 5121:return HEAPU8.subarray(pixels,pixels+bytes);case 5126:return HEAPF32.subarray(pixels>>2,pixels+bytes>>2);case 5125:case 34042:return HEAPU32.subarray(pixels>>2,pixels+bytes>>2);case 5123:case 33635:case 32819:case 32820:case 36193:return HEAPU16.subarray(pixels>>1,pixels+bytes>>1);default:GL.recordError(1280);return null}}function _emscripten_glReadPixels(x,y,width,height,format,type,pixels){var pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,format);if(!pixelData){GL.recordError(1280);return}GLctx.readPixels(x,y,width,height,format,type,pixelData)}function _emscripten_glReleaseShaderCompiler(){}function _emscripten_glRenderbufferStorage(x0,x1,x2,x3){GLctx["renderbufferStorage"](x0,x1,x2,x3)}function _emscripten_glRenderbufferStorageMultisample(){err("missing function: emscripten_glRenderbufferStorageMultisample");abort(-1)}function _emscripten_glRotatef(){err("missing function: emscripten_glRotatef");abort(-1)}function _emscripten_glSampleCoverage(value,invert){GLctx.sampleCoverage(value,!!invert)}function _emscripten_glScissor(x0,x1,x2,x3){GLctx["scissor"](x0,x1,x2,x3)}function _emscripten_glShaderBinary(){GL.recordError(1280)}function _emscripten_glShaderSource(shader,count,string,length){var source=GL.getSource(shader,count,string,length);GLctx.shaderSource(GL.shaders[shader],source)}function _emscripten_glStencilFunc(x0,x1,x2){GLctx["stencilFunc"](x0,x1,x2)}function _emscripten_glStencilFuncSeparate(x0,x1,x2,x3){GLctx["stencilFuncSeparate"](x0,x1,x2,x3)}function _emscripten_glStencilMask(x0){GLctx["stencilMask"](x0)}function _emscripten_glStencilMaskSeparate(x0,x1){GLctx["stencilMaskSeparate"](x0,x1)}function _emscripten_glStencilOp(x0,x1,x2){GLctx["stencilOp"](x0,x1,x2)}function _emscripten_glStencilOpSeparate(x0,x1,x2,x3){GLctx["stencilOpSeparate"](x0,x1,x2,x3)}function _emscripten_glTexCoordPointer(){err("missing function: emscripten_glTexCoordPointer");abort(-1)}function _emscripten_glTexImage2D(target,level,internalFormat,width,height,border,format,type,pixels){var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat);GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixelData)}function _emscripten_glTexImage3D(){err("missing function: emscripten_glTexImage3D");abort(-1)}function _emscripten_glTexParameterIiv(){err("missing function: emscripten_glTexParameterIiv");abort(-1)}function _emscripten_glTexParameterIuiv(){err("missing function: emscripten_glTexParameterIuiv");abort(-1)}function _emscripten_glTexParameterf(x0,x1,x2){GLctx["texParameterf"](x0,x1,x2)}function _emscripten_glTexParameterfv(target,pname,params){var param=HEAPF32[params>>2];GLctx.texParameterf(target,pname,param)}function _emscripten_glTexParameteri(x0,x1,x2){GLctx["texParameteri"](x0,x1,x2)}function _emscripten_glTexParameteriv(target,pname,params){var param=HEAP32[params>>2];GLctx.texParameteri(target,pname,param)}function _emscripten_glTexStorage2D(){err("missing function: emscripten_glTexStorage2D");abort(-1)}function _emscripten_glTexStorage3D(){err("missing function: emscripten_glTexStorage3D");abort(-1)}function _emscripten_glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels){var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,0);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixelData)}function _emscripten_glTexSubImage3D(){err("missing function: emscripten_glTexSubImage3D");abort(-1)}function _emscripten_glTransformFeedbackVaryings(){err("missing function: emscripten_glTransformFeedbackVaryings");abort(-1)}function _emscripten_glUniform1f(location,v0){GLctx.uniform1f(GL.uniforms[location],v0)}function _emscripten_glUniform1fv(location,count,value){var view;if(count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[count-1];for(var i=0;i<count;++i){view[i]=HEAPF32[value+4*i>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*4>>2)}GLctx.uniform1fv(GL.uniforms[location],view)}function _emscripten_glUniform1i(location,v0){GLctx.uniform1i(GL.uniforms[location],v0)}function _emscripten_glUniform1iv(location,count,value){GLctx.uniform1iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*4>>2))}function _emscripten_glUniform1ui(){err("missing function: emscripten_glUniform1ui");abort(-1)}function _emscripten_glUniform2f(location,v0,v1){GLctx.uniform2f(GL.uniforms[location],v0,v1)}function _emscripten_glUniform2fv(location,count,value){var view;if(2*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[2*count-1];for(var i=0;i<2*count;i+=2){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*8>>2)}GLctx.uniform2fv(GL.uniforms[location],view)}function _emscripten_glUniform2i(location,v0,v1){GLctx.uniform2i(GL.uniforms[location],v0,v1)}function _emscripten_glUniform2iv(location,count,value){GLctx.uniform2iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*8>>2))}function _emscripten_glUniform2ui(){err("missing function: emscripten_glUniform2ui");abort(-1)}function _emscripten_glUniform3f(location,v0,v1,v2){GLctx.uniform3f(GL.uniforms[location],v0,v1,v2)}function _emscripten_glUniform3fv(location,count,value){var view;if(3*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[3*count-1];for(var i=0;i<3*count;i+=3){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*12>>2)}GLctx.uniform3fv(GL.uniforms[location],view)}function _emscripten_glUniform3i(location,v0,v1,v2){GLctx.uniform3i(GL.uniforms[location],v0,v1,v2)}function _emscripten_glUniform3iv(location,count,value){GLctx.uniform3iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*12>>2))}function _emscripten_glUniform3ui(){err("missing function: emscripten_glUniform3ui");abort(-1)}function _emscripten_glUniform4f(location,v0,v1,v2,v3){GLctx.uniform4f(GL.uniforms[location],v0,v1,v2,v3)}function _emscripten_glUniform4fv(location,count,value){var view;if(4*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*16>>2)}GLctx.uniform4fv(GL.uniforms[location],view)}function _emscripten_glUniform4i(location,v0,v1,v2,v3){GLctx.uniform4i(GL.uniforms[location],v0,v1,v2,v3)}function _emscripten_glUniform4iv(location,count,value){GLctx.uniform4iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*16>>2))}function _emscripten_glUniform4ui(){err("missing function: emscripten_glUniform4ui");abort(-1)}function _emscripten_glUniformBlockBinding(){err("missing function: emscripten_glUniformBlockBinding");abort(-1)}function _emscripten_glUniformMatrix2fv(location,count,transpose,value){var view;if(4*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*16>>2)}GLctx.uniformMatrix2fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUniformMatrix3fv(location,count,transpose,value){var view;if(9*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[9*count-1];for(var i=0;i<9*count;i+=9){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];view[i+4]=HEAPF32[value+(4*i+16)>>2];view[i+5]=HEAPF32[value+(4*i+20)>>2];view[i+6]=HEAPF32[value+(4*i+24)>>2];view[i+7]=HEAPF32[value+(4*i+28)>>2];view[i+8]=HEAPF32[value+(4*i+32)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*36>>2)}GLctx.uniformMatrix3fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUniformMatrix4fv(location,count,transpose,value){var view;if(16*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[16*count-1];for(var i=0;i<16*count;i+=16){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];view[i+4]=HEAPF32[value+(4*i+16)>>2];view[i+5]=HEAPF32[value+(4*i+20)>>2];view[i+6]=HEAPF32[value+(4*i+24)>>2];view[i+7]=HEAPF32[value+(4*i+28)>>2];view[i+8]=HEAPF32[value+(4*i+32)>>2];view[i+9]=HEAPF32[value+(4*i+36)>>2];view[i+10]=HEAPF32[value+(4*i+40)>>2];view[i+11]=HEAPF32[value+(4*i+44)>>2];view[i+12]=HEAPF32[value+(4*i+48)>>2];view[i+13]=HEAPF32[value+(4*i+52)>>2];view[i+14]=HEAPF32[value+(4*i+56)>>2];view[i+15]=HEAPF32[value+(4*i+60)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*64>>2)}GLctx.uniformMatrix4fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUseProgram(program){GLctx.useProgram(program?GL.programs[program]:null)}function _emscripten_glValidateProgram(program){GLctx.validateProgram(GL.programs[program])}function _emscripten_glVertexAttrib1f(x0,x1){GLctx["vertexAttrib1f"](x0,x1)}function _emscripten_glVertexAttrib1fv(index,v){GLctx.vertexAttrib1f(index,HEAPF32[v>>2])}function _emscripten_glVertexAttrib2f(x0,x1,x2){GLctx["vertexAttrib2f"](x0,x1,x2)}function _emscripten_glVertexAttrib2fv(index,v){GLctx.vertexAttrib2f(index,HEAPF32[v>>2],HEAPF32[v+4>>2])}function _emscripten_glVertexAttrib3f(x0,x1,x2,x3){GLctx["vertexAttrib3f"](x0,x1,x2,x3)}function _emscripten_glVertexAttrib3fv(index,v){GLctx.vertexAttrib3f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2])}function _emscripten_glVertexAttrib4f(x0,x1,x2,x3,x4){GLctx["vertexAttrib4f"](x0,x1,x2,x3,x4)}function _emscripten_glVertexAttrib4fv(index,v){GLctx.vertexAttrib4f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2],HEAPF32[v+12>>2])}function _emscripten_glVertexAttribDivisor(index,divisor){GLctx["vertexAttribDivisor"](index,divisor)}function _emscripten_glVertexAttribI1i(){err("missing function: emscripten_glVertexAttribI1i");abort(-1)}function _emscripten_glVertexAttribI1iv(){err("missing function: emscripten_glVertexAttribI1iv");abort(-1)}function _emscripten_glVertexAttribI1ui(){err("missing function: emscripten_glVertexAttribI1ui");abort(-1)}function _emscripten_glVertexAttribI1uiv(){err("missing function: emscripten_glVertexAttribI1uiv");abort(-1)}function _emscripten_glVertexAttribI2i(){err("missing function: emscripten_glVertexAttribI2i");abort(-1)}function _emscripten_glVertexAttribI2iv(){err("missing function: emscripten_glVertexAttribI2iv");abort(-1)}function _emscripten_glVertexAttribI2ui(){err("missing function: emscripten_glVertexAttribI2ui");abort(-1)}function _emscripten_glVertexAttribI2uiv(){err("missing function: emscripten_glVertexAttribI2uiv");abort(-1)}function _emscripten_glVertexAttribI3i(){err("missing function: emscripten_glVertexAttribI3i");abort(-1)}function _emscripten_glVertexAttribI3iv(){err("missing function: emscripten_glVertexAttribI3iv");abort(-1)}function _emscripten_glVertexAttribI3ui(){err("missing function: emscripten_glVertexAttribI3ui");abort(-1)}function _emscripten_glVertexAttribI3uiv(){err("missing function: emscripten_glVertexAttribI3uiv");abort(-1)}function _emscripten_glVertexAttribI4bv(){err("missing function: emscripten_glVertexAttribI4bv");abort(-1)}function _emscripten_glVertexAttribI4i(){err("missing function: emscripten_glVertexAttribI4i");abort(-1)}function _emscripten_glVertexAttribI4iv(){err("missing function: emscripten_glVertexAttribI4iv");abort(-1)}function _emscripten_glVertexAttribI4sv(){err("missing function: emscripten_glVertexAttribI4sv");abort(-1)}function _emscripten_glVertexAttribI4ubv(){err("missing function: emscripten_glVertexAttribI4ubv");abort(-1)}function _emscripten_glVertexAttribI4ui(){err("missing function: emscripten_glVertexAttribI4ui");abort(-1)}function _emscripten_glVertexAttribI4uiv(){err("missing function: emscripten_glVertexAttribI4uiv");abort(-1)}function _emscripten_glVertexAttribI4usv(){err("missing function: emscripten_glVertexAttribI4usv");abort(-1)}function _emscripten_glVertexAttribIPointer(){err("missing function: emscripten_glVertexAttribIPointer");abort(-1)}function _emscripten_glVertexAttribPointer(index,size,type,normalized,stride,ptr){GLctx.vertexAttribPointer(index,size,type,!!normalized,stride,ptr)}function _emscripten_glVertexPointer(){throw"Legacy GL function (glVertexPointer) called. If you want legacy GL emulation, you need to compile with -s LEGACY_GL_EMULATION=1 to enable legacy GL emulation."}function _emscripten_glViewport(x0,x1,x2,x3){GLctx["viewport"](x0,x1,x2,x3)}function _emscripten_is_main_browser_thread(){return!ENVIRONMENT_IS_WORKER}function __setLetterbox(element,topBottom,leftRight){if(JSEvents.isInternetExplorer()){element.style.marginLeft=element.style.marginRight=leftRight+"px";element.style.marginTop=element.style.marginBottom=topBottom+"px"}else{element.style.paddingLeft=element.style.paddingRight=leftRight+"px";element.style.paddingTop=element.style.paddingBottom=topBottom+"px"}}function _emscripten_do_request_fullscreen(target,strategy){if(typeof JSEvents.fullscreenEnabled()==="undefined")return-1;if(!JSEvents.fullscreenEnabled())return-3;if(!target)target="#canvas";target=JSEvents.findEventTarget(target);if(!target)return-4;if(!target.requestFullscreen&&!target.msRequestFullscreen&&!target.mozRequestFullScreen&&!target.mozRequestFullscreen&&!target.webkitRequestFullscreen){return-3}var canPerformRequests=JSEvents.canPerformEventHandlerRequests();if(!canPerformRequests){if(strategy.deferUntilInEventHandler){JSEvents.deferCall(JSEvents.requestFullscreen,1,[target,strategy]);return 1}else{return-2}}return JSEvents.requestFullscreen(target,strategy)}function __registerRestoreOldStyle(canvas){var oldWidth=canvas.width;var oldHeight=canvas.height;var oldCssWidth=canvas.style.width;var oldCssHeight=canvas.style.height;var oldBackgroundColor=canvas.style.backgroundColor;var oldDocumentBackgroundColor=document.body.style.backgroundColor;var oldPaddingLeft=canvas.style.paddingLeft;var oldPaddingRight=canvas.style.paddingRight;var oldPaddingTop=canvas.style.paddingTop;var oldPaddingBottom=canvas.style.paddingBottom;var oldMarginLeft=canvas.style.marginLeft;var oldMarginRight=canvas.style.marginRight;var oldMarginTop=canvas.style.marginTop;var oldMarginBottom=canvas.style.marginBottom;var oldDocumentBodyMargin=document.body.style.margin;var oldDocumentOverflow=document.documentElement.style.overflow;var oldDocumentScroll=document.body.scroll;var oldImageRendering=canvas.style.imageRendering;function restoreOldStyle(){var fullscreenElement=document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||document.msFullscreenElement;if(!fullscreenElement){document.removeEventListener("fullscreenchange",restoreOldStyle);document.removeEventListener("mozfullscreenchange",restoreOldStyle);document.removeEventListener("webkitfullscreenchange",restoreOldStyle);document.removeEventListener("MSFullscreenChange",restoreOldStyle);canvas.width=oldWidth;canvas.height=oldHeight;canvas.style.width=oldCssWidth;canvas.style.height=oldCssHeight;canvas.style.backgroundColor=oldBackgroundColor;if(!oldDocumentBackgroundColor)document.body.style.backgroundColor="white";document.body.style.backgroundColor=oldDocumentBackgroundColor;canvas.style.paddingLeft=oldPaddingLeft;canvas.style.paddingRight=oldPaddingRight;canvas.style.paddingTop=oldPaddingTop;canvas.style.paddingBottom=oldPaddingBottom;canvas.style.marginLeft=oldMarginLeft;canvas.style.marginRight=oldMarginRight;canvas.style.marginTop=oldMarginTop;canvas.style.marginBottom=oldMarginBottom;document.body.style.margin=oldDocumentBodyMargin;document.documentElement.style.overflow=oldDocumentOverflow;document.body.scroll=oldDocumentScroll;canvas.style.imageRendering=oldImageRendering;if(canvas.GLctxObject)canvas.GLctxObject.GLctx.viewport(0,0,oldWidth,oldHeight);if(__currentFullscreenStrategy.canvasResizedCallback){Module["dynCall_iiii"](__currentFullscreenStrategy.canvasResizedCallback,37,0,__currentFullscreenStrategy.canvasResizedCallbackUserData)}}}document.addEventListener("fullscreenchange",restoreOldStyle);document.addEventListener("mozfullscreenchange",restoreOldStyle);document.addEventListener("webkitfullscreenchange",restoreOldStyle);document.addEventListener("MSFullscreenChange",restoreOldStyle);return restoreOldStyle}function _emscripten_request_fullscreen_strategy(target,deferUntilInEventHandler,fullscreenStrategy){var strategy={};strategy.scaleMode=HEAP32[fullscreenStrategy>>2];strategy.canvasResolutionScaleMode=HEAP32[fullscreenStrategy+4>>2];strategy.filteringMode=HEAP32[fullscreenStrategy+8>>2];strategy.deferUntilInEventHandler=deferUntilInEventHandler;strategy.canvasResizedCallback=HEAP32[fullscreenStrategy+12>>2];strategy.canvasResizedCallbackUserData=HEAP32[fullscreenStrategy+16>>2];__currentFullscreenStrategy=strategy;return _emscripten_do_request_fullscreen(target,strategy)}function _emscripten_request_pointerlock(target,deferUntilInEventHandler){if(!target)target="#canvas";target=JSEvents.findEventTarget(target);if(!target)return-4;if(!target.requestPointerLock&&!target.mozRequestPointerLock&&!target.webkitRequestPointerLock&&!target.msRequestPointerLock){return-1}var canPerformRequests=JSEvents.canPerformEventHandlerRequests();if(!canPerformRequests){if(deferUntilInEventHandler){JSEvents.deferCall(JSEvents.requestPointerLock,2,[target]);return 1}else{return-2}}return JSEvents.requestPointerLock(target)}function _emscripten_set_blur_callback(target,userData,useCapture,callbackfunc){JSEvents.registerFocusEventCallback(target,userData,useCapture,callbackfunc,12,"blur");return 0}function _emscripten_set_canvas_size(width,height){Browser.setCanvasSize(width,height)}function _emscripten_set_element_css_size(target,width,height){if(!target){target=Module["canvas"]}else{target=JSEvents.findEventTarget(target)}if(!target)return-4;target.style.setProperty("width",width+"px");target.style.setProperty("height",height+"px");return 0}function _emscripten_set_focus_callback(target,userData,useCapture,callbackfunc){JSEvents.registerFocusEventCallback(target,userData,useCapture,callbackfunc,13,"focus");return 0}function _emscripten_set_fullscreenchange_callback(target,userData,useCapture,callbackfunc){if(typeof JSEvents.fullscreenEnabled()==="undefined")return-1;if(!target)target=document;else{target=JSEvents.findEventTarget(target);if(!target)return-4}JSEvents.registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,19,"fullscreenchange");JSEvents.registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,19,"mozfullscreenchange");JSEvents.registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,19,"webkitfullscreenchange");JSEvents.registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,19,"msfullscreenchange");return 0}function _emscripten_set_gamepadconnected_callback(userData,useCapture,callbackfunc){if(!navigator.getGamepads&&!navigator.webkitGetGamepads)return-1;JSEvents.registerGamepadEventCallback(window,userData,useCapture,callbackfunc,26,"gamepadconnected");return 0}function _emscripten_set_gamepaddisconnected_callback(userData,useCapture,callbackfunc){if(!navigator.getGamepads&&!navigator.webkitGetGamepads)return-1;JSEvents.registerGamepadEventCallback(window,userData,useCapture,callbackfunc,27,"gamepaddisconnected");return 0}function _emscripten_set_keydown_callback(target,userData,useCapture,callbackfunc){JSEvents.registerKeyEventCallback(target,userData,useCapture,callbackfunc,2,"keydown");return 0}function _emscripten_set_keypress_callback(target,userData,useCapture,callbackfunc){JSEvents.registerKeyEventCallback(target,userData,useCapture,callbackfunc,1,"keypress");return 0}function _emscripten_set_keyup_callback(target,userData,useCapture,callbackfunc){JSEvents.registerKeyEventCallback(target,userData,useCapture,callbackfunc,3,"keyup");return 0}function _emscripten_set_mousedown_callback(target,userData,useCapture,callbackfunc){JSEvents.registerMouseEventCallback(target,userData,useCapture,callbackfunc,5,"mousedown");return 0}function _emscripten_set_mouseenter_callback(target,userData,useCapture,callbackfunc){JSEvents.registerMouseEventCallback(target,userData,useCapture,callbackfunc,33,"mouseenter");return 0}function _emscripten_set_mouseleave_callback(target,userData,useCapture,callbackfunc){JSEvents.registerMouseEventCallback(target,userData,useCapture,callbackfunc,34,"mouseleave");return 0}function _emscripten_set_mousemove_callback(target,userData,useCapture,callbackfunc){JSEvents.registerMouseEventCallback(target,userData,useCapture,callbackfunc,8,"mousemove");return 0}function _emscripten_set_mouseup_callback(target,userData,useCapture,callbackfunc){JSEvents.registerMouseEventCallback(target,userData,useCapture,callbackfunc,6,"mouseup");return 0}function _emscripten_set_pointerlockchange_callback(target,userData,useCapture,callbackfunc){if(!document||!document.body||!document.body.requestPointerLock&&!document.body.mozRequestPointerLock&&!document.body.webkitRequestPointerLock&&!document.body.msRequestPointerLock){return-1}if(!target)target=document;else{target=JSEvents.findEventTarget(target);if(!target)return-4}JSEvents.registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"pointerlockchange");JSEvents.registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"mozpointerlockchange");JSEvents.registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"webkitpointerlockchange");JSEvents.registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"mspointerlockchange");return 0}function _emscripten_set_resize_callback(target,userData,useCapture,callbackfunc){JSEvents.registerUiEventCallback(target,userData,useCapture,callbackfunc,10,"resize");return 0}function _emscripten_set_touchcancel_callback(target,userData,useCapture,callbackfunc){JSEvents.registerTouchEventCallback(target,userData,useCapture,callbackfunc,25,"touchcancel");return 0}function _emscripten_set_touchend_callback(target,userData,useCapture,callbackfunc){JSEvents.registerTouchEventCallback(target,userData,useCapture,callbackfunc,23,"touchend");return 0}function _emscripten_set_touchmove_callback(target,userData,useCapture,callbackfunc){JSEvents.registerTouchEventCallback(target,userData,useCapture,callbackfunc,24,"touchmove");return 0}function _emscripten_set_touchstart_callback(target,userData,useCapture,callbackfunc){JSEvents.registerTouchEventCallback(target,userData,useCapture,callbackfunc,22,"touchstart");return 0}function _emscripten_set_visibilitychange_callback(userData,useCapture,callbackfunc){JSEvents.registerVisibilityChangeEventCallback(document,userData,useCapture,callbackfunc,21,"visibilitychange");return 0}function _emscripten_set_wheel_callback(target,userData,useCapture,callbackfunc){target=JSEvents.findEventTarget(target);if(typeof target.onwheel!=="undefined"){JSEvents.registerWheelEventCallback(target,userData,useCapture,callbackfunc,9,"wheel");return 0}else if(typeof target.onmousewheel!=="undefined"){JSEvents.registerWheelEventCallback(target,userData,useCapture,callbackfunc,9,"mousewheel");return 0}else{return-1}}var EmterpreterAsync={initted:false,state:0,saveStack:"",yieldCallbacks:[],postAsync:null,restartFunc:null,asyncFinalizers:[],ensureInit:(function(){if(this.initted)return;this.initted=true}),setState:(function(s){this.ensureInit();this.state=s;Module["setAsyncState"](s)}),handle:(function(doAsyncOp,yieldDuring){Module["noExitRuntime"]=true;if(EmterpreterAsync.state===0){var stack=new Int32Array(HEAP32.subarray(EMTSTACKTOP>>2,Module["emtStackSave"]()>>2));var resumedCallbacksForYield=false;function resumeCallbacksForYield(){if(resumedCallbacksForYield)return;resumedCallbacksForYield=true;EmterpreterAsync.yieldCallbacks.forEach((function(func){func()}));Browser.resumeAsyncCallbacks()}var callingDoAsyncOp=1;doAsyncOp(function resume(post){if(ABORT){return}if(callingDoAsyncOp){assert(callingDoAsyncOp===1);callingDoAsyncOp++;setTimeout((function(){resume(post)}),0);return}assert(EmterpreterAsync.state===1||EmterpreterAsync.state===3);EmterpreterAsync.setState(3);if(yieldDuring){resumeCallbacksForYield()}HEAP32.set(stack,EMTSTACKTOP>>2);EmterpreterAsync.setState(2);if(Browser.mainLoop.func){Browser.mainLoop.resume()}assert(!EmterpreterAsync.postAsync);EmterpreterAsync.postAsync=post||null;var asyncReturnValue;if(!EmterpreterAsync.restartFunc){Module["emterpret"](stack[0])}else{asyncReturnValue=EmterpreterAsync.restartFunc()}if(!yieldDuring&&EmterpreterAsync.state===0){Browser.resumeAsyncCallbacks()}if(EmterpreterAsync.state===0){EmterpreterAsync.restartFunc=null;var asyncFinalizers=EmterpreterAsync.asyncFinalizers;EmterpreterAsync.asyncFinalizers=[];asyncFinalizers.forEach((function(func){func(asyncReturnValue)}))}});callingDoAsyncOp=0;EmterpreterAsync.setState(1);if(Browser.mainLoop.func){Browser.mainLoop.pause()}if(yieldDuring){setTimeout((function(){resumeCallbacksForYield()}),0)}else{Browser.pauseAsyncCallbacks()}}else{assert(EmterpreterAsync.state===2);EmterpreterAsync.setState(0);if(EmterpreterAsync.postAsync){var ret=EmterpreterAsync.postAsync();EmterpreterAsync.postAsync=null;return ret}}})};function _emscripten_sleep(ms){EmterpreterAsync.handle((function(resume){setTimeout((function(){resume()}),ms)}))}function _emscripten_sleep_with_yield(ms){EmterpreterAsync.handle((function(resume){Browser.safeSetTimeout(resume,ms)}),true)}var Fetch={attr_t_offset_requestMethod:0,attr_t_offset_userData:32,attr_t_offset_onsuccess:36,attr_t_offset_onerror:40,attr_t_offset_onprogress:44,attr_t_offset_attributes:48,attr_t_offset_timeoutMSecs:52,attr_t_offset_withCredentials:56,attr_t_offset_destinationPath:60,attr_t_offset_userName:64,attr_t_offset_password:68,attr_t_offset_requestHeaders:72,attr_t_offset_overriddenMimeType:76,attr_t_offset_requestData:80,attr_t_offset_requestDataSize:84,fetch_t_offset_id:0,fetch_t_offset_userData:4,fetch_t_offset_url:8,fetch_t_offset_data:12,fetch_t_offset_numBytes:16,fetch_t_offset_dataOffset:24,fetch_t_offset_totalBytes:32,fetch_t_offset_readyState:40,fetch_t_offset_status:42,fetch_t_offset_statusText:44,fetch_t_offset___proxyState:108,fetch_t_offset___attributes:112,xhrs:[],worker:undefined,dbInstance:undefined,setu64:(function(addr,val){HEAPU32[addr>>2]=val;HEAPU32[addr+4>>2]=val/4294967296|0}),openDatabase:(function(dbname,dbversion,onsuccess,onerror){try{var openRequest=indexedDB.open(dbname,dbversion)}catch(e){return onerror(e)}openRequest.onupgradeneeded=(function(event){var db=event.target.result;if(db.objectStoreNames.contains("FILES")){db.deleteObjectStore("FILES")}db.createObjectStore("FILES")});openRequest.onsuccess=(function(event){onsuccess(event.target.result)});openRequest.onerror=(function(error){onerror(error)})}),initFetchWorker:(function(){var stackSize=128*1024;var stack=allocate(stackSize>>2,"i32*",ALLOC_DYNAMIC);Fetch.worker.postMessage({cmd:"init",TOTAL_MEMORY:TOTAL_MEMORY,DYNAMICTOP_PTR:DYNAMICTOP_PTR,STACKTOP:stack,STACK_MAX:stack+stackSize,queuePtr:_fetch_work_queue,buffer:HEAPU8.buffer})}),staticInit:(function(){var isMainThread=typeof ENVIRONMENT_IS_FETCH_WORKER==="undefined";var onsuccess=(function(db){Fetch.dbInstance=db;if(isMainThread){removeRunDependency("library_fetch_init")}});var onerror=(function(){Fetch.dbInstance=false;if(isMainThread){removeRunDependency("library_fetch_init")}});Fetch.openDatabase("emscripten_filesystem",1,onsuccess,onerror);if(typeof ENVIRONMENT_IS_FETCH_WORKER==="undefined"||!ENVIRONMENT_IS_FETCH_WORKER)addRunDependency("library_fetch_init")})};function __emscripten_fetch_xhr(fetch,onsuccess,onerror,onprogress){var url=HEAPU32[fetch+Fetch.fetch_t_offset_url>>2];if(!url){onerror(fetch,0,"no url specified!");return}var url_=Pointer_stringify(url);var fetch_attr=fetch+Fetch.fetch_t_offset___attributes;var requestMethod=Pointer_stringify(fetch_attr);if(!requestMethod)requestMethod="GET";var userData=HEAPU32[fetch_attr+Fetch.attr_t_offset_userData>>2];var fetchAttributes=HEAPU32[fetch_attr+Fetch.attr_t_offset_attributes>>2];var timeoutMsecs=HEAPU32[fetch_attr+Fetch.attr_t_offset_timeoutMSecs>>2];var withCredentials=!!HEAPU32[fetch_attr+Fetch.attr_t_offset_withCredentials>>2];var destinationPath=HEAPU32[fetch_attr+Fetch.attr_t_offset_destinationPath>>2];var userName=HEAPU32[fetch_attr+Fetch.attr_t_offset_userName>>2];var password=HEAPU32[fetch_attr+Fetch.attr_t_offset_password>>2];var requestHeaders=HEAPU32[fetch_attr+Fetch.attr_t_offset_requestHeaders>>2];var overriddenMimeType=HEAPU32[fetch_attr+Fetch.attr_t_offset_overriddenMimeType>>2];var dataPtr=HEAPU32[fetch_attr+Fetch.attr_t_offset_requestData>>2];var dataLength=HEAPU32[fetch_attr+Fetch.attr_t_offset_requestDataSize>>2];var fetchAttrLoadToMemory=!!(fetchAttributes&1);var fetchAttrStreamData=!!(fetchAttributes&2);var fetchAttrSynchronous=!!(fetchAttributes&64);var userNameStr=userName?Pointer_stringify(userName):undefined;var passwordStr=password?Pointer_stringify(password):undefined;var overriddenMimeTypeStr=overriddenMimeType?Pointer_stringify(overriddenMimeType):undefined;var xhr=new XMLHttpRequest;xhr.withCredentials=withCredentials;xhr.open(requestMethod,url_,!fetchAttrSynchronous,userNameStr,passwordStr);if(!fetchAttrSynchronous)xhr.timeout=timeoutMsecs;xhr.url_=url_;xhr.responseType=fetchAttrStreamData?"moz-chunked-arraybuffer":"arraybuffer";if(overriddenMimeType){xhr.overrideMimeType(overriddenMimeTypeStr)}if(requestHeaders){for(;;){var key=HEAPU32[requestHeaders>>2];if(!key)break;var value=HEAPU32[requestHeaders+4>>2];if(!value)break;requestHeaders+=8;var keyStr=Pointer_stringify(key);var valueStr=Pointer_stringify(value);xhr.setRequestHeader(keyStr,valueStr)}}Fetch.xhrs.push(xhr);var id=Fetch.xhrs.length;HEAPU32[fetch+Fetch.fetch_t_offset_id>>2]=id;var data=dataPtr&&dataLength?HEAPU8.slice(dataPtr,dataPtr+dataLength):null;xhr.onload=(function(e){var len=xhr.response?xhr.response.byteLength:0;var ptr=0;var ptrLen=0;if(fetchAttrLoadToMemory&&!fetchAttrStreamData){ptrLen=len;ptr=_malloc(ptrLen);HEAPU8.set(new Uint8Array(xhr.response),ptr)}HEAPU32[fetch+Fetch.fetch_t_offset_data>>2]=ptr;Fetch.setu64(fetch+Fetch.fetch_t_offset_numBytes,ptrLen);Fetch.setu64(fetch+Fetch.fetch_t_offset_dataOffset,0);if(len){Fetch.setu64(fetch+Fetch.fetch_t_offset_totalBytes,len)}HEAPU16[fetch+Fetch.fetch_t_offset_readyState>>1]=xhr.readyState;if(xhr.readyState===4&&xhr.status===0){if(len>0)xhr.status=200;else xhr.status=404}HEAPU16[fetch+Fetch.fetch_t_offset_status>>1]=xhr.status;if(xhr.statusText)stringToUTF8(xhr.statusText,fetch+Fetch.fetch_t_offset_statusText,64);if(xhr.status==200){if(onsuccess)onsuccess(fetch,xhr,e)}else{if(onerror)onerror(fetch,xhr,e)}});xhr.onerror=(function(e){var status=xhr.status;if(xhr.readyState==4&&status==0)status=404;HEAPU32[fetch+Fetch.fetch_t_offset_data>>2]=0;Fetch.setu64(fetch+Fetch.fetch_t_offset_numBytes,0);Fetch.setu64(fetch+Fetch.fetch_t_offset_dataOffset,0);Fetch.setu64(fetch+Fetch.fetch_t_offset_totalBytes,0);HEAPU16[fetch+Fetch.fetch_t_offset_readyState>>1]=xhr.readyState;HEAPU16[fetch+Fetch.fetch_t_offset_status>>1]=status;if(onerror)onerror(fetch,xhr,e)});xhr.ontimeout=(function(e){if(onerror)onerror(fetch,xhr,e)});xhr.onprogress=(function(e){var ptrLen=fetchAttrLoadToMemory&&fetchAttrStreamData&&xhr.response?xhr.response.byteLength:0;var ptr=0;if(fetchAttrLoadToMemory&&fetchAttrStreamData){ptr=_malloc(ptrLen);HEAPU8.set(new Uint8Array(xhr.response),ptr)}HEAPU32[fetch+Fetch.fetch_t_offset_data>>2]=ptr;Fetch.setu64(fetch+Fetch.fetch_t_offset_numBytes,ptrLen);Fetch.setu64(fetch+Fetch.fetch_t_offset_dataOffset,e.loaded-ptrLen);Fetch.setu64(fetch+Fetch.fetch_t_offset_totalBytes,e.total);HEAPU16[fetch+Fetch.fetch_t_offset_readyState>>1]=xhr.readyState;if(xhr.readyState>=3&&xhr.status===0&&e.loaded>0)xhr.status=200;HEAPU16[fetch+Fetch.fetch_t_offset_status>>1]=xhr.status;if(xhr.statusText)stringToUTF8(xhr.statusText,fetch+Fetch.fetch_t_offset_statusText,64);if(onprogress)onprogress(fetch,xhr,e)});try{xhr.send(data)}catch(e){if(onerror)onerror(fetch,xhr,e)}}function __emscripten_fetch_cache_data(db,fetch,data,onsuccess,onerror){if(!db){onerror(fetch,0,"IndexedDB not available!");return}var fetch_attr=fetch+Fetch.fetch_t_offset___attributes;var destinationPath=HEAPU32[fetch_attr+Fetch.attr_t_offset_destinationPath>>2];if(!destinationPath)destinationPath=HEAPU32[fetch+Fetch.fetch_t_offset_url>>2];var destinationPathStr=Pointer_stringify(destinationPath);try{var transaction=db.transaction(["FILES"],"readwrite");var packages=transaction.objectStore("FILES");var putRequest=packages.put(data,destinationPathStr);putRequest.onsuccess=(function(event){HEAPU16[fetch+Fetch.fetch_t_offset_readyState>>1]=4;HEAPU16[fetch+Fetch.fetch_t_offset_status>>1]=200;stringToUTF8("OK",fetch+Fetch.fetch_t_offset_statusText,64);onsuccess(fetch,0,destinationPathStr)});putRequest.onerror=(function(error){HEAPU16[fetch+Fetch.fetch_t_offset_readyState>>1]=4;HEAPU16[fetch+Fetch.fetch_t_offset_status>>1]=413;stringToUTF8("Payload Too Large",fetch+Fetch.fetch_t_offset_statusText,64);onerror(fetch,0,error)})}catch(e){onerror(fetch,0,e)}}function __emscripten_fetch_load_cached_data(db,fetch,onsuccess,onerror){if(!db){onerror(fetch,0,"IndexedDB not available!");return}var fetch_attr=fetch+Fetch.fetch_t_offset___attributes;var path=HEAPU32[fetch_attr+Fetch.attr_t_offset_destinationPath>>2];if(!path)path=HEAPU32[fetch+Fetch.fetch_t_offset_url>>2];var pathStr=Pointer_stringify(path);try{var transaction=db.transaction(["FILES"],"readonly");var packages=transaction.objectStore("FILES");var getRequest=packages.get(pathStr);getRequest.onsuccess=(function(event){if(event.target.result){var value=event.target.result;var len=value.byteLength||value.length;var ptr=_malloc(len);HEAPU8.set(new Uint8Array(value),ptr);HEAPU32[fetch+Fetch.fetch_t_offset_data>>2]=ptr;Fetch.setu64(fetch+Fetch.fetch_t_offset_numBytes,len);Fetch.setu64(fetch+Fetch.fetch_t_offset_dataOffset,0);Fetch.setu64(fetch+Fetch.fetch_t_offset_totalBytes,len);HEAPU16[fetch+Fetch.fetch_t_offset_readyState>>1]=4;HEAPU16[fetch+Fetch.fetch_t_offset_status>>1]=200;stringToUTF8("OK",fetch+Fetch.fetch_t_offset_statusText,64);onsuccess(fetch,0,value)}else{HEAPU16[fetch+Fetch.fetch_t_offset_readyState>>1]=4;HEAPU16[fetch+Fetch.fetch_t_offset_status>>1]=404;stringToUTF8("Not Found",fetch+Fetch.fetch_t_offset_statusText,64);onerror(fetch,0,"no data")}});getRequest.onerror=(function(error){HEAPU16[fetch+Fetch.fetch_t_offset_readyState>>1]=4;HEAPU16[fetch+Fetch.fetch_t_offset_status>>1]=404;stringToUTF8("Not Found",fetch+Fetch.fetch_t_offset_statusText,64);onerror(fetch,0,error)})}catch(e){onerror(fetch,0,e)}}function __emscripten_fetch_delete_cached_data(db,fetch,onsuccess,onerror){if(!db){onerror(fetch,0,"IndexedDB not available!");return}var fetch_attr=fetch+Fetch.fetch_t_offset___attributes;var path=HEAPU32[fetch_attr+Fetch.attr_t_offset_destinationPath>>2];if(!path)path=HEAPU32[fetch+Fetch.fetch_t_offset_url>>2];var pathStr=Pointer_stringify(path);try{var transaction=db.transaction(["FILES"],"readwrite");var packages=transaction.objectStore("FILES");var request=packages.delete(pathStr);request.onsuccess=(function(event){var value=event.target.result;HEAPU32[fetch+Fetch.fetch_t_offset_data>>2]=0;Fetch.setu64(fetch+Fetch.fetch_t_offset_numBytes,0);Fetch.setu64(fetch+Fetch.fetch_t_offset_dataOffset,0);Fetch.setu64(fetch+Fetch.fetch_t_offset_dataOffset,0);HEAPU16[fetch+Fetch.fetch_t_offset_readyState>>1]=4;HEAPU16[fetch+Fetch.fetch_t_offset_status>>1]=200;stringToUTF8("OK",fetch+Fetch.fetch_t_offset_statusText,64);onsuccess(fetch,0,value)});request.onerror=(function(error){HEAPU16[fetch+Fetch.fetch_t_offset_readyState>>1]=4;HEAPU16[fetch+Fetch.fetch_t_offset_status>>1]=404;stringToUTF8("Not Found",fetch+Fetch.fetch_t_offset_statusText,64);onerror(fetch,0,error)})}catch(e){onerror(fetch,0,e)}}var _fetch_work_queue=allocate(12,"i32*",ALLOC_STATIC);function _emscripten_start_fetch(fetch,successcb,errorcb,progresscb){if(typeof Module!=="undefined")Module["noExitRuntime"]=true;var fetch_attr=fetch+Fetch.fetch_t_offset___attributes;var requestMethod=Pointer_stringify(fetch_attr);var onsuccess=HEAPU32[fetch_attr+Fetch.attr_t_offset_onsuccess>>2];var onerror=HEAPU32[fetch_attr+Fetch.attr_t_offset_onerror>>2];var onprogress=HEAPU32[fetch_attr+Fetch.attr_t_offset_onprogress>>2];var fetchAttributes=HEAPU32[fetch_attr+Fetch.attr_t_offset_attributes>>2];var fetchAttrPersistFile=!!(fetchAttributes&4);var fetchAttrReplace=!!(fetchAttributes&16);var fetchAttrNoDownload=!!(fetchAttributes&32);var reportSuccess=(function(fetch,xhr,e){if(onsuccess&&typeof dynCall==="function")Module["dynCall_vi"](onsuccess,fetch);else if(successcb)successcb(fetch)});var cacheResultAndReportSuccess=(function(fetch,xhr,e){var storeSuccess=(function(fetch,xhr,e){if(onsuccess&&typeof dynCall==="function")Module["dynCall_vi"](onsuccess,fetch);else if(successcb)successcb(fetch)});var storeError=(function(fetch,xhr,e){if(onsuccess&&typeof dynCall==="function")Module["dynCall_vi"](onsuccess,fetch);else if(successcb)successcb(fetch)});__emscripten_fetch_cache_data(Fetch.dbInstance,fetch,xhr.response,storeSuccess,storeError)});var reportProgress=(function(fetch,xhr,e){if(onprogress&&typeof dynCall==="function")Module["dynCall_vi"](onprogress,fetch);else if(progresscb)progresscb(fetch)});var reportError=(function(fetch,xhr,e){if(onerror&&typeof dynCall==="function")Module["dynCall_vi"](onerror,fetch);else if(errorcb)errorcb(fetch)});var performUncachedXhr=(function(fetch,xhr,e){__emscripten_fetch_xhr(fetch,reportSuccess,reportError,reportProgress)});var performCachedXhr=(function(fetch,xhr,e){__emscripten_fetch_xhr(fetch,cacheResultAndReportSuccess,reportError,reportProgress)});if(!fetchAttrReplace||requestMethod==="EM_IDB_STORE"||requestMethod==="EM_IDB_DELETE"){if(!Fetch.dbInstance){reportError(fetch,0,"IndexedDB is not open");return 0}if(requestMethod==="EM_IDB_STORE"){var dataPtr=HEAPU32[fetch_attr+Fetch.attr_t_offset_requestData>>2];var dataLength=HEAPU32[fetch_attr+Fetch.attr_t_offset_requestDataSize>>2];var data=HEAPU8.slice(dataPtr,dataPtr+dataLength);__emscripten_fetch_cache_data(Fetch.dbInstance,fetch,data,reportSuccess,reportError)}else if(requestMethod==="EM_IDB_DELETE"){__emscripten_fetch_delete_cached_data(Fetch.dbInstance,fetch,reportSuccess,reportError)}else if(fetchAttrNoDownload){__emscripten_fetch_load_cached_data(Fetch.dbInstance,fetch,reportSuccess,reportError)}else if(fetchAttrPersistFile){__emscripten_fetch_load_cached_data(Fetch.dbInstance,fetch,reportSuccess,performCachedXhr)}else{__emscripten_fetch_load_cached_data(Fetch.dbInstance,fetch,reportSuccess,performUncachedXhr)}}else if(!fetchAttrNoDownload){if(fetchAttrPersistFile){__emscripten_fetch_xhr(fetch,cacheResultAndReportSuccess,reportError,reportProgress)}else{__emscripten_fetch_xhr(fetch,reportSuccess,reportError,reportProgress)}}else{return 0}return fetch}function _execl(){___setErrNo(ERRNO_CODES.ENOEXEC);return-1}function _execlp(){return _execl.apply(null,arguments)}function _execvp(){return _execl.apply(null,arguments)}function __exit(status){exit(status)}function _exit(status){__exit(status)}function _getenv(name){if(name===0)return 0;name=Pointer_stringify(name);if(!ENV.hasOwnProperty(name))return 0;if(_getenv.ret)_free(_getenv.ret);_getenv.ret=allocateUTF8(ENV[name]);return _getenv.ret}function _getpwnam(){throw"getpwnam: TODO"}function _gettimeofday(ptr){var now=Date.now();HEAP32[ptr>>2]=now/1e3|0;HEAP32[ptr+4>>2]=now%1e3*1e3|0;return 0}function _glClear(x0){GLctx["clear"](x0)}function _llvm_exp2_f32(x){return Math.pow(2,x)}function _llvm_exp2_f64(){return _llvm_exp2_f32.apply(null,arguments)}function _llvm_stackrestore(p){var self=_llvm_stacksave;var ret=self.LLVM_SAVEDSTACKS[p];self.LLVM_SAVEDSTACKS.splice(p,1);stackRestore(ret)}function _llvm_stacksave(){var self=_llvm_stacksave;if(!self.LLVM_SAVEDSTACKS){self.LLVM_SAVEDSTACKS=[]}self.LLVM_SAVEDSTACKS.push(stackSave());return self.LLVM_SAVEDSTACKS.length-1}function _llvm_trap(){abort("trap!")}var ___tm_current=STATICTOP;STATICTOP+=48;var ___tm_timezone=allocate(intArrayFromString("GMT"),"i8",ALLOC_STATIC);function _tzset(){if(_tzset.called)return;_tzset.called=true;HEAP32[__get_timezone()>>2]=(new Date).getTimezoneOffset()*60;var winter=new Date(2e3,0,1);var summer=new Date(2e3,6,1);HEAP32[__get_daylight()>>2]=Number(winter.getTimezoneOffset()!=summer.getTimezoneOffset());function extractZone(date){var match=date.toTimeString().match(/\(([A-Za-z ]+)\)$/);return match?match[1]:"GMT"}var winterName=extractZone(winter);var summerName=extractZone(summer);var winterNamePtr=allocate(intArrayFromString(winterName),"i8",ALLOC_NORMAL);var summerNamePtr=allocate(intArrayFromString(summerName),"i8",ALLOC_NORMAL);if(summer.getTimezoneOffset()<winter.getTimezoneOffset()){HEAP32[__get_tzname()>>2]=winterNamePtr;HEAP32[__get_tzname()+4>>2]=summerNamePtr}else{HEAP32[__get_tzname()>>2]=summerNamePtr;HEAP32[__get_tzname()+4>>2]=winterNamePtr}}function _localtime_r(time,tmPtr){_tzset();var date=new Date(HEAP32[time>>2]*1e3);HEAP32[tmPtr>>2]=date.getSeconds();HEAP32[tmPtr+4>>2]=date.getMinutes();HEAP32[tmPtr+8>>2]=date.getHours();HEAP32[tmPtr+12>>2]=date.getDate();HEAP32[tmPtr+16>>2]=date.getMonth();HEAP32[tmPtr+20>>2]=date.getFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getDay();var start=new Date(date.getFullYear(),0,1);var yday=(date.getTime()-start.getTime())/(1e3*60*60*24)|0;HEAP32[tmPtr+28>>2]=yday;HEAP32[tmPtr+36>>2]=-(date.getTimezoneOffset()*60);var summerOffset=(new Date(2e3,6,1)).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dst=(summerOffset!=winterOffset&&date.getTimezoneOffset()==Math.min(winterOffset,summerOffset))|0;HEAP32[tmPtr+32>>2]=dst;var zonePtr=HEAP32[__get_tzname()+(dst?4:0)>>2];HEAP32[tmPtr+40>>2]=zonePtr;return tmPtr}function _localtime(time){return _localtime_r(time,___tm_current)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}function _usleep(useconds){var msec=useconds/1e3;if((ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&self["performance"]&&self["performance"]["now"]){var start=self["performance"]["now"]();while(self["performance"]["now"]()-start<msec){}}else{var start=Date.now();while(Date.now()-start<msec){}}return 0}function _nanosleep(rqtp,rmtp){var seconds=HEAP32[rqtp>>2];var nanoseconds=HEAP32[rqtp+4>>2];if(rmtp!==0){HEAP32[rmtp>>2]=0;HEAP32[rmtp+4>>2]=0}return _usleep(seconds*1e6+nanoseconds/1e3)}function _pthread_cond_wait(){return 0}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Module["dynCall_v"](func);_pthread_once.seen[ptr]=1}function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function _putenv(string){if(string===0){___setErrNo(ERRNO_CODES.EINVAL);return-1}string=Pointer_stringify(string);var splitPoint=string.indexOf("=");if(string===""||string.indexOf("=")===-1){___setErrNo(ERRNO_CODES.EINVAL);return-1}var name=string.slice(0,splitPoint);var value=string.slice(splitPoint+1);if(!(name in ENV)||ENV[name]!==value){ENV[name]=value;___buildEnvironment(__get_environ())}return 0}function _sigaction(signum,act,oldact){return 0}var __sigalrm_handler=0;function _signal(sig,func){if(sig==14){__sigalrm_handler=func}else{}return 0}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]);return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?Pointer_stringify(tm_zone):""};var pattern=Pointer_stringify(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule])}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value==="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={"%a":(function(date){return WEEKDAYS[date.tm_wday].substring(0,3)}),"%A":(function(date){return WEEKDAYS[date.tm_wday]}),"%b":(function(date){return MONTHS[date.tm_mon].substring(0,3)}),"%B":(function(date){return MONTHS[date.tm_mon]}),"%C":(function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)}),"%d":(function(date){return leadingNulls(date.tm_mday,2)}),"%e":(function(date){return leadingSomething(date.tm_mday,2," ")}),"%g":(function(date){return getWeekBasedYear(date).toString().substring(2)}),"%G":(function(date){return getWeekBasedYear(date)}),"%H":(function(date){return leadingNulls(date.tm_hour,2)}),"%I":(function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)}),"%j":(function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)}),"%m":(function(date){return leadingNulls(date.tm_mon+1,2)}),"%M":(function(date){return leadingNulls(date.tm_min,2)}),"%n":(function(){return"\n"}),"%p":(function(date){if(date.tm_hour>=0&&date.tm_hour<12){return"AM"}else{return"PM"}}),"%S":(function(date){return leadingNulls(date.tm_sec,2)}),"%t":(function(){return"\t"}),"%u":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()||7}),"%U":(function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?"01":"00"}),"%V":(function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return"53"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return"01"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)}),"%w":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()}),"%W":(function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?"01":"00"}),"%y":(function(date){return(date.tm_year+1900).toString().substring(2)}),"%Y":(function(date){return date.tm_year+1900}),"%z":(function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4)}),"%Z":(function(date){return date.tm_zone}),"%%":(function(){return"%"})};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}FS.staticInit();__ATINIT__.unshift((function(){if(!Module["noFSInit"]&&!FS.init.initialized)FS.init()}));__ATMAIN__.push((function(){FS.ignorePermissions=false}));__ATEXIT__.push((function(){FS.quit()}));Module["FS_createFolder"]=FS.createFolder;Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createLink"]=FS.createLink;Module["FS_createDevice"]=FS.createDevice;Module["FS_unlink"]=FS.unlink;__ATINIT__.unshift((function(){TTY.init()}));__ATEXIT__.push((function(){TTY.shutdown()}));if(ENVIRONMENT_IS_NODE){var fs=require("fs");var NODEJS_PATH=require("path");NODEFS.staticInit()}if(ENVIRONMENT_IS_NODE){_emscripten_get_now=function _emscripten_get_now_actual(){var t=process["hrtime"]();return t[0]*1e3+t[1]/1e6}}else if(typeof dateNow!=="undefined"){_emscripten_get_now=dateNow}else if(typeof self==="object"&&self["performance"]&&typeof self["performance"]["now"]==="function"){_emscripten_get_now=(function(){return self["performance"]["now"]()})}else if(typeof performance==="object"&&typeof performance["now"]==="function"){_emscripten_get_now=(function(){return performance["now"]()})}else{_emscripten_get_now=Date.now}Module["requestFullScreen"]=function Module_requestFullScreen(lockPointer,resizeCanvas,vrDevice){err("Module.requestFullScreen is deprecated. Please call Module.requestFullscreen instead.");Module["requestFullScreen"]=Module["requestFullscreen"];Browser.requestFullScreen(lockPointer,resizeCanvas,vrDevice)};Module["requestFullscreen"]=function Module_requestFullscreen(lockPointer,resizeCanvas,vrDevice){Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)};Module["requestAnimationFrame"]=function Module_requestAnimationFrame(func){Browser.requestAnimationFrame(func)};Module["setCanvasSize"]=function Module_setCanvasSize(width,height,noUpdates){Browser.setCanvasSize(width,height,noUpdates)};Module["pauseMainLoop"]=function Module_pauseMainLoop(){Browser.mainLoop.pause()};Module["resumeMainLoop"]=function Module_resumeMainLoop(){Browser.mainLoop.resume()};Module["getUserMedia"]=function Module_getUserMedia(){Browser.getUserMedia()};Module["createContext"]=function Module_createContext(canvas,useWebGL,setInModule,webGLContextAttributes){return Browser.createContext(canvas,useWebGL,setInModule,webGLContextAttributes)};var GLctx;GL.init();JSEvents.staticInit();Fetch.staticInit();DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module["wasmTableSize"]=6026;Module["wasmMaxTableSize"]=6026;Module.asmGlobalArg={};Module.asmLibraryArg={"abort":abort,"enlargeMemory":enlargeMemory,"getTotalMemory":getTotalMemory,"abortOnCannotGrowMemory":abortOnCannotGrowMemory,"___buildEnvironment":___buildEnvironment,"___cxa_allocate_exception":___cxa_allocate_exception,"___cxa_pure_virtual":___cxa_pure_virtual,"___cxa_throw":___cxa_throw,"___cxa_uncaught_exception":___cxa_uncaught_exception,"___lock":___lock,"___map_file":___map_file,"___setErrNo":___setErrNo,"___syscall10":___syscall10,"___syscall140":___syscall140,"___syscall145":___syscall145,"___syscall146":___syscall146,"___syscall183":___syscall183,"___syscall194":___syscall194,"___syscall195":___syscall195,"___syscall197":___syscall197,"___syscall220":___syscall220,"___syscall221":___syscall221,"___syscall33":___syscall33,"___syscall38":___syscall38,"___syscall39":___syscall39,"___syscall4":___syscall4,"___syscall40":___syscall40,"___syscall5":___syscall5,"___syscall54":___syscall54,"___syscall6":___syscall6,"___syscall91":___syscall91,"___unlock":___unlock,"_abort":_abort,"_clock_gettime":_clock_gettime,"_dlclose":_dlclose,"_dlerror":_dlerror,"_dlsym":_dlsym,"_eglBindAPI":_eglBindAPI,"_eglChooseConfig":_eglChooseConfig,"_eglCreateContext":_eglCreateContext,"_eglCreateWindowSurface":_eglCreateWindowSurface,"_eglDestroyContext":_eglDestroyContext,"_eglDestroySurface":_eglDestroySurface,"_eglGetConfigAttrib":_eglGetConfigAttrib,"_eglGetDisplay":_eglGetDisplay,"_eglGetProcAddress":_eglGetProcAddress,"_eglInitialize":_eglInitialize,"_eglMakeCurrent":_eglMakeCurrent,"_eglSwapBuffers":_eglSwapBuffers,"_eglSwapInterval":_eglSwapInterval,"_eglTerminate":_eglTerminate,"_eglWaitGL":_eglWaitGL,"_eglWaitNative":_eglWaitNative,"_emscripten_asm_const_i":_emscripten_asm_const_i,"_emscripten_asm_const_ii":_emscripten_asm_const_ii,"_emscripten_asm_const_iii":_emscripten_asm_const_iii,"_emscripten_asm_const_iiii":_emscripten_asm_const_iiii,"_emscripten_asm_const_iiiii":_emscripten_asm_const_iiiii,"_emscripten_asm_const_iiiiii":_emscripten_asm_const_iiiiii,"_emscripten_cancel_main_loop":_emscripten_cancel_main_loop,"_emscripten_exit_fullscreen":_emscripten_exit_fullscreen,"_emscripten_exit_pointerlock":_emscripten_exit_pointerlock,"_emscripten_force_exit":_emscripten_force_exit,"_emscripten_get_device_pixel_ratio":_emscripten_get_device_pixel_ratio,"_emscripten_get_element_css_size":_emscripten_get_element_css_size,"_emscripten_get_gamepad_status":_emscripten_get_gamepad_status,"_emscripten_get_num_gamepads":_emscripten_get_num_gamepads,"_emscripten_glActiveTexture":_emscripten_glActiveTexture,"_emscripten_glAttachShader":_emscripten_glAttachShader,"_emscripten_glBeginConditionalRender":_emscripten_glBeginConditionalRender,"_emscripten_glBeginTransformFeedback":_emscripten_glBeginTransformFeedback,"_emscripten_glBindAttribLocation":_emscripten_glBindAttribLocation,"_emscripten_glBindBuffer":_emscripten_glBindBuffer,"_emscripten_glBindBufferBase":_emscripten_glBindBufferBase,"_emscripten_glBindBufferRange":_emscripten_glBindBufferRange,"_emscripten_glBindFragDataLocation":_emscripten_glBindFragDataLocation,"_emscripten_glBindFramebuffer":_emscripten_glBindFramebuffer,"_emscripten_glBindProgramARB":_emscripten_glBindProgramARB,"_emscripten_glBindRenderbuffer":_emscripten_glBindRenderbuffer,"_emscripten_glBindTexture":_emscripten_glBindTexture,"_emscripten_glBindVertexArray":_emscripten_glBindVertexArray,"_emscripten_glBlendColor":_emscripten_glBlendColor,"_emscripten_glBlendEquation":_emscripten_glBlendEquation,"_emscripten_glBlendEquationSeparate":_emscripten_glBlendEquationSeparate,"_emscripten_glBlendFunc":_emscripten_glBlendFunc,"_emscripten_glBlendFuncSeparate":_emscripten_glBlendFuncSeparate,"_emscripten_glBlitFramebuffer":_emscripten_glBlitFramebuffer,"_emscripten_glBufferData":_emscripten_glBufferData,"_emscripten_glBufferSubData":_emscripten_glBufferSubData,"_emscripten_glCheckFramebufferStatus":_emscripten_glCheckFramebufferStatus,"_emscripten_glClampColor":_emscripten_glClampColor,"_emscripten_glClear":_emscripten_glClear,"_emscripten_glClearBufferfi":_emscripten_glClearBufferfi,"_emscripten_glClearBufferfv":_emscripten_glClearBufferfv,"_emscripten_glClearBufferiv":_emscripten_glClearBufferiv,"_emscripten_glClearBufferuiv":_emscripten_glClearBufferuiv,"_emscripten_glClearColor":_emscripten_glClearColor,"_emscripten_glClearDepth":_emscripten_glClearDepth,"_emscripten_glClearDepthf":_emscripten_glClearDepthf,"_emscripten_glClearStencil":_emscripten_glClearStencil,"_emscripten_glClientActiveTexture":_emscripten_glClientActiveTexture,"_emscripten_glColorMask":_emscripten_glColorMask,"_emscripten_glColorMaski":_emscripten_glColorMaski,"_emscripten_glColorPointer":_emscripten_glColorPointer,"_emscripten_glCompileShader":_emscripten_glCompileShader,"_emscripten_glCompressedTexImage2D":_emscripten_glCompressedTexImage2D,"_emscripten_glCompressedTexSubImage2D":_emscripten_glCompressedTexSubImage2D,"_emscripten_glCopyTexImage2D":_emscripten_glCopyTexImage2D,"_emscripten_glCopyTexSubImage2D":_emscripten_glCopyTexSubImage2D,"_emscripten_glCreateProgram":_emscripten_glCreateProgram,"_emscripten_glCreateShader":_emscripten_glCreateShader,"_emscripten_glCullFace":_emscripten_glCullFace,"_emscripten_glDeleteBuffers":_emscripten_glDeleteBuffers,"_emscripten_glDeleteFramebuffers":_emscripten_glDeleteFramebuffers,"_emscripten_glDeleteObjectARB":_emscripten_glDeleteObjectARB,"_emscripten_glDeleteProgram":_emscripten_glDeleteProgram,"_emscripten_glDeleteRenderbuffers":_emscripten_glDeleteRenderbuffers,"_emscripten_glDeleteShader":_emscripten_glDeleteShader,"_emscripten_glDeleteTextures":_emscripten_glDeleteTextures,"_emscripten_glDeleteVertexArrays":_emscripten_glDeleteVertexArrays,"_emscripten_glDepthFunc":_emscripten_glDepthFunc,"_emscripten_glDepthMask":_emscripten_glDepthMask,"_emscripten_glDepthRange":_emscripten_glDepthRange,"_emscripten_glDepthRangef":_emscripten_glDepthRangef,"_emscripten_glDetachShader":_emscripten_glDetachShader,"_emscripten_glDisable":_emscripten_glDisable,"_emscripten_glDisableVertexAttribArray":_emscripten_glDisableVertexAttribArray,"_emscripten_glDisablei":_emscripten_glDisablei,"_emscripten_glDrawArrays":_emscripten_glDrawArrays,"_emscripten_glDrawArraysInstanced":_emscripten_glDrawArraysInstanced,"_emscripten_glDrawBuffers":_emscripten_glDrawBuffers,"_emscripten_glDrawElements":_emscripten_glDrawElements,"_emscripten_glDrawElementsInstanced":_emscripten_glDrawElementsInstanced,"_emscripten_glDrawRangeElements":_emscripten_glDrawRangeElements,"_emscripten_glEnable":_emscripten_glEnable,"_emscripten_glEnableClientState":_emscripten_glEnableClientState,"_emscripten_glEnableVertexAttribArray":_emscripten_glEnableVertexAttribArray,"_emscripten_glEnablei":_emscripten_glEnablei,"_emscripten_glEndConditionalRender":_emscripten_glEndConditionalRender,"_emscripten_glEndTransformFeedback":_emscripten_glEndTransformFeedback,"_emscripten_glFinish":_emscripten_glFinish,"_emscripten_glFlush":_emscripten_glFlush,"_emscripten_glFramebufferRenderbuffer":_emscripten_glFramebufferRenderbuffer,"_emscripten_glFramebufferTexture2D":_emscripten_glFramebufferTexture2D,"_emscripten_glFrontFace":_emscripten_glFrontFace,"_emscripten_glFrustum":_emscripten_glFrustum,"_emscripten_glGenBuffers":_emscripten_glGenBuffers,"_emscripten_glGenFramebuffers":_emscripten_glGenFramebuffers,"_emscripten_glGenRenderbuffers":_emscripten_glGenRenderbuffers,"_emscripten_glGenTextures":_emscripten_glGenTextures,"_emscripten_glGenVertexArrays":_emscripten_glGenVertexArrays,"_emscripten_glGenerateMipmap":_emscripten_glGenerateMipmap,"_emscripten_glGetActiveAttrib":_emscripten_glGetActiveAttrib,"_emscripten_glGetActiveUniform":_emscripten_glGetActiveUniform,"_emscripten_glGetActiveUniformBlockName":_emscripten_glGetActiveUniformBlockName,"_emscripten_glGetActiveUniformBlockiv":_emscripten_glGetActiveUniformBlockiv,"_emscripten_glGetActiveUniformName":_emscripten_glGetActiveUniformName,"_emscripten_glGetActiveUniformsiv":_emscripten_glGetActiveUniformsiv,"_emscripten_glGetAttachedShaders":_emscripten_glGetAttachedShaders,"_emscripten_glGetAttribLocation":_emscripten_glGetAttribLocation,"_emscripten_glGetBooleani_v":_emscripten_glGetBooleani_v,"_emscripten_glGetBooleanv":_emscripten_glGetBooleanv,"_emscripten_glGetBufferParameteriv":_emscripten_glGetBufferParameteriv,"_emscripten_glGetError":_emscripten_glGetError,"_emscripten_glGetFloatv":_emscripten_glGetFloatv,"_emscripten_glGetFragDataLocation":_emscripten_glGetFragDataLocation,"_emscripten_glGetFramebufferAttachmentParameteriv":_emscripten_glGetFramebufferAttachmentParameteriv,"_emscripten_glGetInfoLogARB":_emscripten_glGetInfoLogARB,"_emscripten_glGetIntegeri_v":_emscripten_glGetIntegeri_v,"_emscripten_glGetIntegerv":_emscripten_glGetIntegerv,"_emscripten_glGetObjectParameterivARB":_emscripten_glGetObjectParameterivARB,"_emscripten_glGetPointerv":_emscripten_glGetPointerv,"_emscripten_glGetProgramInfoLog":_emscripten_glGetProgramInfoLog,"_emscripten_glGetProgramiv":_emscripten_glGetProgramiv,"_emscripten_glGetRenderbufferParameteriv":_emscripten_glGetRenderbufferParameteriv,"_emscripten_glGetShaderInfoLog":_emscripten_glGetShaderInfoLog,"_emscripten_glGetShaderPrecisionFormat":_emscripten_glGetShaderPrecisionFormat,"_emscripten_glGetShaderSource":_emscripten_glGetShaderSource,"_emscripten_glGetShaderiv":_emscripten_glGetShaderiv,"_emscripten_glGetString":_emscripten_glGetString,"_emscripten_glGetStringi":_emscripten_glGetStringi,"_emscripten_glGetTexParameterIiv":_emscripten_glGetTexParameterIiv,"_emscripten_glGetTexParameterIuiv":_emscripten_glGetTexParameterIuiv,"_emscripten_glGetTexParameterfv":_emscripten_glGetTexParameterfv,"_emscripten_glGetTexParameteriv":_emscripten_glGetTexParameteriv,"_emscripten_glGetTransformFeedbackVarying":_emscripten_glGetTransformFeedbackVarying,"_emscripten_glGetUniformBlockIndex":_emscripten_glGetUniformBlockIndex,"_emscripten_glGetUniformIndices":_emscripten_glGetUniformIndices,"_emscripten_glGetUniformLocation":_emscripten_glGetUniformLocation,"_emscripten_glGetUniformfv":_emscripten_glGetUniformfv,"_emscripten_glGetUniformiv":_emscripten_glGetUniformiv,"_emscripten_glGetUniformuiv":_emscripten_glGetUniformuiv,"_emscripten_glGetVertexAttribIiv":_emscripten_glGetVertexAttribIiv,"_emscripten_glGetVertexAttribIuiv":_emscripten_glGetVertexAttribIuiv,"_emscripten_glGetVertexAttribPointerv":_emscripten_glGetVertexAttribPointerv,"_emscripten_glGetVertexAttribfv":_emscripten_glGetVertexAttribfv,"_emscripten_glGetVertexAttribiv":_emscripten_glGetVertexAttribiv,"_emscripten_glHint":_emscripten_glHint,"_emscripten_glIsBuffer":_emscripten_glIsBuffer,"_emscripten_glIsEnabled":_emscripten_glIsEnabled,"_emscripten_glIsEnabledi":_emscripten_glIsEnabledi,"_emscripten_glIsFramebuffer":_emscripten_glIsFramebuffer,"_emscripten_glIsProgram":_emscripten_glIsProgram,"_emscripten_glIsRenderbuffer":_emscripten_glIsRenderbuffer,"_emscripten_glIsShader":_emscripten_glIsShader,"_emscripten_glIsTexture":_emscripten_glIsTexture,"_emscripten_glIsVertexArray":_emscripten_glIsVertexArray,"_emscripten_glLineWidth":_emscripten_glLineWidth,"_emscripten_glLinkProgram":_emscripten_glLinkProgram,"_emscripten_glLoadIdentity":_emscripten_glLoadIdentity,"_emscripten_glLoadMatrixf":_emscripten_glLoadMatrixf,"_emscripten_glMatrixMode":_emscripten_glMatrixMode,"_emscripten_glNormalPointer":_emscripten_glNormalPointer,"_emscripten_glPixelStorei":_emscripten_glPixelStorei,"_emscripten_glPolygonOffset":_emscripten_glPolygonOffset,"_emscripten_glReadPixels":_emscripten_glReadPixels,"_emscripten_glReleaseShaderCompiler":_emscripten_glReleaseShaderCompiler,"_emscripten_glRenderbufferStorage":_emscripten_glRenderbufferStorage,"_emscripten_glRenderbufferStorageMultisample":_emscripten_glRenderbufferStorageMultisample,"_emscripten_glRotatef":_emscripten_glRotatef,"_emscripten_glSampleCoverage":_emscripten_glSampleCoverage,"_emscripten_glScissor":_emscripten_glScissor,"_emscripten_glShaderBinary":_emscripten_glShaderBinary,"_emscripten_glShaderSource":_emscripten_glShaderSource,"_emscripten_glStencilFunc":_emscripten_glStencilFunc,"_emscripten_glStencilFuncSeparate":_emscripten_glStencilFuncSeparate,"_emscripten_glStencilMask":_emscripten_glStencilMask,"_emscripten_glStencilMaskSeparate":_emscripten_glStencilMaskSeparate,"_emscripten_glStencilOp":_emscripten_glStencilOp,"_emscripten_glStencilOpSeparate":_emscripten_glStencilOpSeparate,"_emscripten_glTexCoordPointer":_emscripten_glTexCoordPointer,"_emscripten_glTexImage2D":_emscripten_glTexImage2D,"_emscripten_glTexImage3D":_emscripten_glTexImage3D,"_emscripten_glTexParameterIiv":_emscripten_glTexParameterIiv,"_emscripten_glTexParameterIuiv":_emscripten_glTexParameterIuiv,"_emscripten_glTexParameterf":_emscripten_glTexParameterf,"_emscripten_glTexParameterfv":_emscripten_glTexParameterfv,"_emscripten_glTexParameteri":_emscripten_glTexParameteri,"_emscripten_glTexParameteriv":_emscripten_glTexParameteriv,"_emscripten_glTexStorage2D":_emscripten_glTexStorage2D,"_emscripten_glTexStorage3D":_emscripten_glTexStorage3D,"_emscripten_glTexSubImage2D":_emscripten_glTexSubImage2D,"_emscripten_glTexSubImage3D":_emscripten_glTexSubImage3D,"_emscripten_glTransformFeedbackVaryings":_emscripten_glTransformFeedbackVaryings,"_emscripten_glUniform1f":_emscripten_glUniform1f,"_emscripten_glUniform1fv":_emscripten_glUniform1fv,"_emscripten_glUniform1i":_emscripten_glUniform1i,"_emscripten_glUniform1iv":_emscripten_glUniform1iv,"_emscripten_glUniform1ui":_emscripten_glUniform1ui,"_emscripten_glUniform2f":_emscripten_glUniform2f,"_emscripten_glUniform2fv":_emscripten_glUniform2fv,"_emscripten_glUniform2i":_emscripten_glUniform2i,"_emscripten_glUniform2iv":_emscripten_glUniform2iv,"_emscripten_glUniform2ui":_emscripten_glUniform2ui,"_emscripten_glUniform3f":_emscripten_glUniform3f,"_emscripten_glUniform3fv":_emscripten_glUniform3fv,"_emscripten_glUniform3i":_emscripten_glUniform3i,"_emscripten_glUniform3iv":_emscripten_glUniform3iv,"_emscripten_glUniform3ui":_emscripten_glUniform3ui,"_emscripten_glUniform4f":_emscripten_glUniform4f,"_emscripten_glUniform4fv":_emscripten_glUniform4fv,"_emscripten_glUniform4i":_emscripten_glUniform4i,"_emscripten_glUniform4iv":_emscripten_glUniform4iv,"_emscripten_glUniform4ui":_emscripten_glUniform4ui,"_emscripten_glUniformBlockBinding":_emscripten_glUniformBlockBinding,"_emscripten_glUniformMatrix2fv":_emscripten_glUniformMatrix2fv,"_emscripten_glUniformMatrix3fv":_emscripten_glUniformMatrix3fv,"_emscripten_glUniformMatrix4fv":_emscripten_glUniformMatrix4fv,"_emscripten_glUseProgram":_emscripten_glUseProgram,"_emscripten_glValidateProgram":_emscripten_glValidateProgram,"_emscripten_glVertexAttrib1f":_emscripten_glVertexAttrib1f,"_emscripten_glVertexAttrib1fv":_emscripten_glVertexAttrib1fv,"_emscripten_glVertexAttrib2f":_emscripten_glVertexAttrib2f,"_emscripten_glVertexAttrib2fv":_emscripten_glVertexAttrib2fv,"_emscripten_glVertexAttrib3f":_emscripten_glVertexAttrib3f,"_emscripten_glVertexAttrib3fv":_emscripten_glVertexAttrib3fv,"_emscripten_glVertexAttrib4f":_emscripten_glVertexAttrib4f,"_emscripten_glVertexAttrib4fv":_emscripten_glVertexAttrib4fv,"_emscripten_glVertexAttribDivisor":_emscripten_glVertexAttribDivisor,"_emscripten_glVertexAttribI1i":_emscripten_glVertexAttribI1i,"_emscripten_glVertexAttribI1iv":_emscripten_glVertexAttribI1iv,"_emscripten_glVertexAttribI1ui":_emscripten_glVertexAttribI1ui,"_emscripten_glVertexAttribI1uiv":_emscripten_glVertexAttribI1uiv,"_emscripten_glVertexAttribI2i":_emscripten_glVertexAttribI2i,"_emscripten_glVertexAttribI2iv":_emscripten_glVertexAttribI2iv,"_emscripten_glVertexAttribI2ui":_emscripten_glVertexAttribI2ui,"_emscripten_glVertexAttribI2uiv":_emscripten_glVertexAttribI2uiv,"_emscripten_glVertexAttribI3i":_emscripten_glVertexAttribI3i,"_emscripten_glVertexAttribI3iv":_emscripten_glVertexAttribI3iv,"_emscripten_glVertexAttribI3ui":_emscripten_glVertexAttribI3ui,"_emscripten_glVertexAttribI3uiv":_emscripten_glVertexAttribI3uiv,"_emscripten_glVertexAttribI4bv":_emscripten_glVertexAttribI4bv,"_emscripten_glVertexAttribI4i":_emscripten_glVertexAttribI4i,"_emscripten_glVertexAttribI4iv":_emscripten_glVertexAttribI4iv,"_emscripten_glVertexAttribI4sv":_emscripten_glVertexAttribI4sv,"_emscripten_glVertexAttribI4ubv":_emscripten_glVertexAttribI4ubv,"_emscripten_glVertexAttribI4ui":_emscripten_glVertexAttribI4ui,"_emscripten_glVertexAttribI4uiv":_emscripten_glVertexAttribI4uiv,"_emscripten_glVertexAttribI4usv":_emscripten_glVertexAttribI4usv,"_emscripten_glVertexAttribIPointer":_emscripten_glVertexAttribIPointer,"_emscripten_glVertexAttribPointer":_emscripten_glVertexAttribPointer,"_emscripten_glVertexPointer":_emscripten_glVertexPointer,"_emscripten_glViewport":_emscripten_glViewport,"_emscripten_is_main_browser_thread":_emscripten_is_main_browser_thread,"_emscripten_memcpy_big":_emscripten_memcpy_big,"_emscripten_request_fullscreen_strategy":_emscripten_request_fullscreen_strategy,"_emscripten_request_pointerlock":_emscripten_request_pointerlock,"_emscripten_set_blur_callback":_emscripten_set_blur_callback,"_emscripten_set_canvas_size":_emscripten_set_canvas_size,"_emscripten_set_element_css_size":_emscripten_set_element_css_size,"_emscripten_set_focus_callback":_emscripten_set_focus_callback,"_emscripten_set_fullscreenchange_callback":_emscripten_set_fullscreenchange_callback,"_emscripten_set_gamepadconnected_callback":_emscripten_set_gamepadconnected_callback,"_emscripten_set_gamepaddisconnected_callback":_emscripten_set_gamepaddisconnected_callback,"_emscripten_set_keydown_callback":_emscripten_set_keydown_callback,"_emscripten_set_keypress_callback":_emscripten_set_keypress_callback,"_emscripten_set_keyup_callback":_emscripten_set_keyup_callback,"_emscripten_set_main_loop":_emscripten_set_main_loop,"_emscripten_set_mousedown_callback":_emscripten_set_mousedown_callback,"_emscripten_set_mouseenter_callback":_emscripten_set_mouseenter_callback,"_emscripten_set_mouseleave_callback":_emscripten_set_mouseleave_callback,"_emscripten_set_mousemove_callback":_emscripten_set_mousemove_callback,"_emscripten_set_mouseup_callback":_emscripten_set_mouseup_callback,"_emscripten_set_pointerlockchange_callback":_emscripten_set_pointerlockchange_callback,"_emscripten_set_resize_callback":_emscripten_set_resize_callback,"_emscripten_set_touchcancel_callback":_emscripten_set_touchcancel_callback,"_emscripten_set_touchend_callback":_emscripten_set_touchend_callback,"_emscripten_set_touchmove_callback":_emscripten_set_touchmove_callback,"_emscripten_set_touchstart_callback":_emscripten_set_touchstart_callback,"_emscripten_set_visibilitychange_callback":_emscripten_set_visibilitychange_callback,"_emscripten_set_wheel_callback":_emscripten_set_wheel_callback,"_emscripten_sleep":_emscripten_sleep,"_emscripten_sleep_with_yield":_emscripten_sleep_with_yield,"_emscripten_start_fetch":_emscripten_start_fetch,"_execlp":_execlp,"_execvp":_execvp,"_exit":_exit,"_getenv":_getenv,"_getpwnam":_getpwnam,"_gettimeofday":_gettimeofday,"_glClear":_glClear,"_llvm_exp2_f64":_llvm_exp2_f64,"_llvm_stackrestore":_llvm_stackrestore,"_llvm_stacksave":_llvm_stacksave,"_llvm_trap":_llvm_trap,"_localtime":_localtime,"_nanosleep":_nanosleep,"_pthread_cond_wait":_pthread_cond_wait,"_pthread_getspecific":_pthread_getspecific,"_pthread_key_create":_pthread_key_create,"_pthread_once":_pthread_once,"_pthread_setspecific":_pthread_setspecific,"_putenv":_putenv,"_sigaction":_sigaction,"_signal":_signal,"_strftime_l":_strftime_l,"_time":_time,"DYNAMICTOP_PTR":DYNAMICTOP_PTR,"tempDoublePtr":tempDoublePtr,"STACKTOP":STACKTOP};Module.asmLibraryArg["EMTSTACKTOP"]=EMTSTACKTOP;Module.asmLibraryArg["EMT_STACK_MAX"]=EMT_STACK_MAX;Module.asmLibraryArg["eb"]=eb;var asm=Module["asm"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module["asm"]=asm;var __GLOBAL__sub_I_cpu_cpp=Module["__GLOBAL__sub_I_cpu_cpp"]=(function(){return Module["asm"]["__GLOBAL__sub_I_cpu_cpp"].apply(null,arguments)});var __GLOBAL__sub_I_drives_cpp=Module["__GLOBAL__sub_I_drives_cpp"]=(function(){return Module["asm"]["__GLOBAL__sub_I_drives_cpp"].apply(null,arguments)});var __GLOBAL__sub_I_programs_cpp=Module["__GLOBAL__sub_I_programs_cpp"]=(function(){return Module["asm"]["__GLOBAL__sub_I_programs_cpp"].apply(null,arguments)});var __GLOBAL__sub_I_sdl_mapper_cpp=Module["__GLOBAL__sub_I_sdl_mapper_cpp"]=(function(){return Module["asm"]["__GLOBAL__sub_I_sdl_mapper_cpp"].apply(null,arguments)});var __ZSt18uncaught_exceptionv=Module["__ZSt18uncaught_exceptionv"]=(function(){return Module["asm"]["__ZSt18uncaught_exceptionv"].apply(null,arguments)});var ___emscripten_environ_constructor=Module["___emscripten_environ_constructor"]=(function(){return Module["asm"]["___emscripten_environ_constructor"].apply(null,arguments)});var ___errno_location=Module["___errno_location"]=(function(){return Module["asm"]["___errno_location"].apply(null,arguments)});var __get_daylight=Module["__get_daylight"]=(function(){return Module["asm"]["__get_daylight"].apply(null,arguments)});var __get_environ=Module["__get_environ"]=(function(){return Module["asm"]["__get_environ"].apply(null,arguments)});var __get_timezone=Module["__get_timezone"]=(function(){return Module["asm"]["__get_timezone"].apply(null,arguments)});var __get_tzname=Module["__get_tzname"]=(function(){return Module["asm"]["__get_tzname"].apply(null,arguments)});var _emscripten_GetProcAddress=Module["_emscripten_GetProcAddress"]=(function(){return Module["asm"]["_emscripten_GetProcAddress"].apply(null,arguments)});var _free=Module["_free"]=(function(){return Module["asm"]["_free"].apply(null,arguments)});var _main=Module["_main"]=(function(){return Module["asm"]["_main"].apply(null,arguments)});var _malloc=Module["_malloc"]=(function(){return Module["asm"]["_malloc"].apply(null,arguments)});var emtStackRestore=Module["emtStackRestore"]=(function(){return Module["asm"]["emtStackRestore"].apply(null,arguments)});var emtStackSave=Module["emtStackSave"]=(function(){return Module["asm"]["emtStackSave"].apply(null,arguments)});var emterpret=Module["emterpret"]=(function(){return Module["asm"]["emterpret"].apply(null,arguments)});var setAsyncState=Module["setAsyncState"]=(function(){return Module["asm"]["setAsyncState"].apply(null,arguments)});var stackAlloc=Module["stackAlloc"]=(function(){return Module["asm"]["stackAlloc"].apply(null,arguments)});var stackRestore=Module["stackRestore"]=(function(){return Module["asm"]["stackRestore"].apply(null,arguments)});var stackSave=Module["stackSave"]=(function(){return Module["asm"]["stackSave"].apply(null,arguments)});var dynCall_i=Module["dynCall_i"]=(function(){return Module["asm"]["dynCall_i"].apply(null,arguments)});var dynCall_ii=Module["dynCall_ii"]=(function(){return Module["asm"]["dynCall_ii"].apply(null,arguments)});var dynCall_iii=Module["dynCall_iii"]=(function(){return Module["asm"]["dynCall_iii"].apply(null,arguments)});var dynCall_iiii=Module["dynCall_iiii"]=(function(){return Module["asm"]["dynCall_iiii"].apply(null,arguments)});var dynCall_iiiii=Module["dynCall_iiiii"]=(function(){return Module["asm"]["dynCall_iiiii"].apply(null,arguments)});var dynCall_iiiiid=Module["dynCall_iiiiid"]=(function(){return Module["asm"]["dynCall_iiiiid"].apply(null,arguments)});var dynCall_iiiiidii=Module["dynCall_iiiiidii"]=(function(){return Module["asm"]["dynCall_iiiiidii"].apply(null,arguments)});var dynCall_iiiiii=Module["dynCall_iiiiii"]=(function(){return Module["asm"]["dynCall_iiiiii"].apply(null,arguments)});var dynCall_iiiiiid=Module["dynCall_iiiiiid"]=(function(){return Module["asm"]["dynCall_iiiiiid"].apply(null,arguments)});var dynCall_iiiiiii=Module["dynCall_iiiiiii"]=(function(){return Module["asm"]["dynCall_iiiiiii"].apply(null,arguments)});var dynCall_iiiiiiii=Module["dynCall_iiiiiiii"]=(function(){return Module["asm"]["dynCall_iiiiiiii"].apply(null,arguments)});var dynCall_iiiiiiiii=Module["dynCall_iiiiiiiii"]=(function(){return Module["asm"]["dynCall_iiiiiiiii"].apply(null,arguments)});var dynCall_iiiiiiiiii=Module["dynCall_iiiiiiiiii"]=(function(){return Module["asm"]["dynCall_iiiiiiiiii"].apply(null,arguments)});var dynCall_v=Module["dynCall_v"]=(function(){return Module["asm"]["dynCall_v"].apply(null,arguments)});var dynCall_vd=Module["dynCall_vd"]=(function(){return Module["asm"]["dynCall_vd"].apply(null,arguments)});var dynCall_vdd=Module["dynCall_vdd"]=(function(){return Module["asm"]["dynCall_vdd"].apply(null,arguments)});var dynCall_vdddddd=Module["dynCall_vdddddd"]=(function(){return Module["asm"]["dynCall_vdddddd"].apply(null,arguments)});var dynCall_vf=Module["dynCall_vf"]=(function(){return Module["asm"]["dynCall_vf"].apply(null,arguments)});var dynCall_vff=Module["dynCall_vff"]=(function(){return Module["asm"]["dynCall_vff"].apply(null,arguments)});var dynCall_vffff=Module["dynCall_vffff"]=(function(){return Module["asm"]["dynCall_vffff"].apply(null,arguments)});var dynCall_vfi=Module["dynCall_vfi"]=(function(){return Module["asm"]["dynCall_vfi"].apply(null,arguments)});var dynCall_vi=Module["dynCall_vi"]=(function(){return Module["asm"]["dynCall_vi"].apply(null,arguments)});var dynCall_vif=Module["dynCall_vif"]=(function(){return Module["asm"]["dynCall_vif"].apply(null,arguments)});var dynCall_viff=Module["dynCall_viff"]=(function(){return Module["asm"]["dynCall_viff"].apply(null,arguments)});var dynCall_vifff=Module["dynCall_vifff"]=(function(){return Module["asm"]["dynCall_vifff"].apply(null,arguments)});var dynCall_viffff=Module["dynCall_viffff"]=(function(){return Module["asm"]["dynCall_viffff"].apply(null,arguments)});var dynCall_vii=Module["dynCall_vii"]=(function(){return Module["asm"]["dynCall_vii"].apply(null,arguments)});var dynCall_viif=Module["dynCall_viif"]=(function(){return Module["asm"]["dynCall_viif"].apply(null,arguments)});var dynCall_viifi=Module["dynCall_viifi"]=(function(){return Module["asm"]["dynCall_viifi"].apply(null,arguments)});var dynCall_viii=Module["dynCall_viii"]=(function(){return Module["asm"]["dynCall_viii"].apply(null,arguments)});var dynCall_viiii=Module["dynCall_viiii"]=(function(){return Module["asm"]["dynCall_viiii"].apply(null,arguments)});var dynCall_viiiii=Module["dynCall_viiiii"]=(function(){return Module["asm"]["dynCall_viiiii"].apply(null,arguments)});var dynCall_viiiiii=Module["dynCall_viiiiii"]=(function(){return Module["asm"]["dynCall_viiiiii"].apply(null,arguments)});var dynCall_viiiiiii=Module["dynCall_viiiiiii"]=(function(){return Module["asm"]["dynCall_viiiiiii"].apply(null,arguments)});var dynCall_viiiiiiii=Module["dynCall_viiiiiiii"]=(function(){return Module["asm"]["dynCall_viiiiiiii"].apply(null,arguments)});var dynCall_viiiiiiiii=Module["dynCall_viiiiiiiii"]=(function(){return Module["asm"]["dynCall_viiiiiiiii"].apply(null,arguments)});var dynCall_viiiiiiiiii=Module["dynCall_viiiiiiiiii"]=(function(){return Module["asm"]["dynCall_viiiiiiiiii"].apply(null,arguments)});var dynCall_viiiiiiiiiii=Module["dynCall_viiiiiiiiiii"]=(function(){return Module["asm"]["dynCall_viiiiiiiiiii"].apply(null,arguments)});Module["asm"]=asm;Module["getMemory"]=getMemory;Module["Pointer_stringify"]=Pointer_stringify;Module["addRunDependency"]=addRunDependency;Module["removeRunDependency"]=removeRunDependency;Module["FS_createFolder"]=FS.createFolder;Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createLink"]=FS.createLink;Module["FS_createDevice"]=FS.createDevice;Module["FS_unlink"]=FS.unlink;function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};Module["callMain"]=function callMain(args){args=args||[];ensureInitRuntime();var argc=args.length+1;var argv=stackAlloc((argc+1)*4);HEAP32[argv>>2]=allocateUTF8OnStack(Module["thisProgram"]);for(var i=1;i<argc;i++){HEAP32[(argv>>2)+i]=allocateUTF8OnStack(args[i-1])}HEAP32[(argv>>2)+argc]=0;var initialEmtStackTop=Module["emtStackSave"]();try{var ret=Module["_main"](argc,argv,0);if(typeof EmterpreterAsync==="object"&&EmterpreterAsync.state!==1){exit(ret,true)}}catch(e){if(e instanceof ExitStatus){return}else if(e=="SimulateInfiniteLoop"){Module["noExitRuntime"]=true;Module["emtStackRestore"](initialEmtStackTop);return}else{var toLog=e;if(e&&typeof e==="object"&&e.stack){toLog=[e,e.stack]}err("exception thrown: "+toLog);Module["quit"](1,e)}}finally{calledMain=true}};function run(args){args=args||Module["arguments"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(Module["_main"]&&shouldRunNow)Module["callMain"](args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1);doRun()}),1)}else{doRun()}}Module["run"]=run;function exit(status,implicit){if(implicit&&Module["noExitRuntime"]&&status===0){return}if(Module["noExitRuntime"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status)}Module["quit"](status,new ExitStatus(status))}function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;throw"abort("+what+"). Build with -s ASSERTIONS=1 for more info."}Module["abort"]=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=true;if(Module["noInitialRun"]){shouldRunNow=false}Module["noExitRuntime"]=true;run()



